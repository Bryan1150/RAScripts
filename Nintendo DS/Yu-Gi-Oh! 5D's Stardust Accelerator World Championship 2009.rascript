// Yu-Gi-Oh! 5D's Stardust Accelerator: World Championship 2009
// #ID = 1284

totalPlaytime = dword(0x120db4)
gameLoaded = dword(0x3ffa80) == 0x472d5559 && dword(0x3ffa80) == prev(dword(0x3ffa80))
ojamaYellowUnlock = bit2(0x122d4a)
playerName1=dword(0x120dbd)
playerName2=dword(0x120dc1)
playerName3=dword(0x120dc5)
playerName4=dword(0x120dc9)

function SaveProtection(){
    return
    gameLoaded && totalPlaytime > 0 && prev(ojamaYellowUnlock) == 1 && ojamaYellowUnlock == prev(ojamaYellowUnlock)&&
    tally(3, playerName1!=0||playerName2!=0||playerName3!=0||playerName4!=0)
    && 
    
    
    never(playerName1!=prev(playerName1)||playerName2!=prev(playerName2)||playerName3!=prev(playerName3)||playerName4!=prev(playerName4))
}

progression = {
    1:{"title":"-Soul of the Duelist-","description":"Buy your own Duel Runner", "value":1, "points":10, "address":0x122ea0},
2:{"title":"-Flaming Eternity-","description":"Receive an engine from Yusei", "value":1, "points":10, "address":0x122ec6},
3:{"title":"-Cybernetic Revolution-","description":"Unlock the race simulator", "value":1, "points":10, "address":0x122ef0},
4:{"title":"-Shadow of Infinity-","description":"Encounter Yusei while in Jail", "value":1, "points":10, "address":0x122fae},
5:{"title":"-Power of the Duelist-","description":"Escape from jail", "value":1, "points":10, "address":0x122f74},
6:{"title":"-Strike of Neos-","description":"Start the plan to recover your belongings", "value":1, "points":10, "address":0x1230da},
7:{"title":"-Tactical Evolution-","description":"Escape from Trudge after recovering your belongings", "value":1, "points":10, "address":0x123116},
8:{"title":"-Phantom Darkness-","description":"Win the first match in the tag duel tournament ", "value":1, "points":10, "address":0x12313a},
9:{"title":"-Light of Destruction-","description":"Receive an invitation to the Fortune Cup", "value":1, "points":10, "address":0x123152},
10:{"title":"-Acceleration Pack-","description":"Win your 1st turbo duel", "value":1, "points":10, "address":0x12317c},
11:{"title":"-Crimson Crisis-","description":"Beat the King and complete story mode", "value":1, "points":25, "address":0x12318a},
}

spiritUnlockWins = {
1:{"title":"Batteryman Micro-Cell","description":"Unlock the 'Batteryman Micro-Cell' spirit by defeating Callisto 5 times", "value":5, "points":5, "address":0x1210fa},
2:{"title":"Dupe Frog","description":"Unlock the 'Dupe Frog' spirit by defeating Kidd 5 times", "value":5, "points":5, "address":0x1210fe},
3:{"title":"Toon Gemini Elf","description":"Unlock the 'Toon Gemini Elf' spirit by defeating Marie 5 times", "value":5, "points":5, "address":0x121102},
4:{"title":"Krebons","description":"Unlock the 'Krebons' spirit by defeating Yusuke/Nico 5 times", "value":5, "points":5, "address":0x121106},
5:{"title":"Plaguespreader Zombie","description":"Unlock the 'Plaguespreader Zombie' spirit by defeating Saito 5 times", "value":5, "points":5, "address":0x12110a},
6:{"title":"Don Zaloog","description":"Unlock the 'Don Zaloog' spirit by defeating Renge 5 times", "value":5, "points":5, "address":0x12110e},
7:{"title":"Worm Barses","description":"Unlock the 'Worm Barses' spirit by defeating Hild 5 times", "value":5, "points":5, "address":0x121112},
8:{"title":"Crystal Beast Sapphire Pegasus","description":"Unlock the 'Crystal Beast Sapphire Pegasus' spirit by defeating Oda 5 times", "value":5, "points":5, "address":0x121122},
9:{"title":"Amazoness Paladin","description":"Unlock the 'Amazoness Paladin' spirit by defeating Anna 5 times", "value":5, "points":5, "address":0x121126},
10:{"title":"Morphtronic Cameran","description":"Unlock the 'Morphtronic Cameran' spirit by defeating Roy 5 times", "value":5, "points":5, "address":0x12112a},
11:{"title":"Brron, Mad King of Dark World","description":"Unlock the 'Brron, Mad King of Dark World' spirit by defeating Sekizato 5 times", "value":5, "points":5, "address":0x12112e},
12:{"title":"Fossil Dyna Pachycephalo","description":"Unlock the 'Fossil Dyna Pachycephalo' spirit by defeating Guide 5 times", "value":5, "points":5, "address":0x121132},
13:{"title":"Green Gadget","description":"Unlock the 'Green Gadget' spirit by defeating Fight 5 times", "value":5, "points":5, "address":0x121136},
14:{"title":"Vengeful Shinobi","description":"Unlock the 'Vengeful Shinobi' spirit by defeating Tasaka 5 times", "value":5, "points":5, "address":0x12113a},
15:{"title":"Volcanic Rocket","description":"Unlock the 'Volcanic Rocket' spirit by defeating Buffer 5 times", "value":5, "points":5, "address":0x121146},
16:{"title":"Grandmaster of the Six Samurai","description":"Unlock the 'Grandmaster of the Six Samurai' spirit by defeating Krue 5 times", "value":5, "points":5, "address":0x12114a},
17:{"title":"Yamato-no-Kami","description":"Unlock the 'Yamato-no-Kami' spirit by defeating Utagawa 5 times", "value":5, "points":5, "address":0x12114e},
18:{"title":"Elemental Hero Ocean","description":"Unlock the 'Elemental Hero Ocean' spirit by defeating Michiba 5 times", "value":5, "points":5, "address":0x121152},
19:{"title":"Destiny Hero - Diamond Dude","description":"Unlock the 'Destiny Hero - Diamond Dude' spirit by defeating Ellison Noula 5 times", "value":5, "points":5, "address":0x121156},
20:{"title":"Marshmallon","description":"Unlock the 'Marshmallon' spirit by defeating Geruzet 5 times", "value":5, "points":5, "address":0x12115a},
21:{"title":"Genex Controller","description":"Unlock the 'Genex Controller' spirit by defeating Barclay 5 times", "value":5, "points":5, "address":0x12115e},
22:{"title":"Cloudian - Storm Dragon","description":"Unlock the 'Cloudian - Storm Dragon' spirit by defeating Shuji 5 times", "value":5, "points":5, "address":0x121162},
23:{"title":"X-Saber Wayne","description":"Unlock the 'X-Saber Wayne' spirit by defeating Taniyama 5 times", "value":5, "points":5, "address":0x121166},
24:{"title":"Stone Statue of the Aztecs","description":"Unlock the 'Stone Statue of the Aztecs' spirit by defeating Skathi 5 times", "value":5, "points":5, "address":0x12116a},
25:{"title":"Necroface","description":"Unlock the 'Necroface' spirit by defeating Yagishita 5 times", "value":5, "points":5, "address":0x12116e},
26:{"title":"Red-Eyes Wyvern","description":"Unlock the 'Red-Eyes Wyvern' spirit by defeating Motoi 5 times", "value":5, "points":5, "address":0x121172},
27:{"title":"Dark Ruler Ha Des","description":"Unlock the 'Dark Ruler Ha Des' spirit by defeating Kyono 5 times", "value":5, "points":5, "address":0x121176},
28:{"title":"Green Baboon, Defender of the Forest","description":"Unlock the 'Green Baboon, Defender of the Forest' spirit by defeating Fudagawa 5 times", "value":5, "points":5, "address":0x12117a},
29:{"title":"Gravekeeper's Chief","description":"Unlock the 'Gravekeeper's Chief' spirit by defeating Dio 5 times", "value":5, "points":5, "address":0x12117e},
30:{"title":"Fiend Roar Deity Grimlo","description":"Unlock the 'Fiend Roar Deity Grimlo' spirit by defeating Vega 5 times", "value":5, "points":5, "address":0x121182},
31:{"title":"Commander Covington","description":"Unlock the 'Commander Covington' spirit by defeating Aase 5 times", "value":5, "points":5, "address":0x121186},
32:{"title":"Armed Samurai - Ben Kei","description":"Unlock the 'Armed Samurai - Ben Kei' spirit by defeating Honda 5 times", "value":5, "points":5, "address":0x121196},
33:{"title":"Tytannial, Princess of Camellias","description":"Unlock the 'Tytannial, Princess of Camellias' spirit by defeating Olivia 5 times", "value":5, "points":5, "address":0x12119a},
34:{"title":"Elemental Hero Stratos","description":"Unlock the 'Elemental Hero Stratos' spirit by defeating Shirogane 5 times", "value":5, "points":5, "address":0x12119e},
35:{"title":"Honest","description":"Unlock the 'Honest' spirit by defeating Helio 5 times", "value":5, "points":5, "address":0x1211b2},
36:{"title":"Arcana Force 0 - The Fool","description":"Unlock the 'Arcana Force 0 - The Fool' spirit by defeating Hung Soo 5 times", "value":5, "points":5, "address":0x1211be},
37:{"title":"Superancient Deepsea King Coelacanth","description":"Unlock the 'Superancient Deepsea King Coelacanth' spirit by defeating Enjitsu 5 times", "value":5, "points":5, "address":0x1211da},
38:{"title":"Kuraz the Light Monarch","description":"Unlock the 'Kuraz the Light Monarch' spirit by defeating Mito 5 times", "value":5, "points":5, "address":0x1211de},
39:{"title":"Falcon of Mist Valley","description":"Unlock the 'Falcon of Mist Valley' spirit by defeating Whomper 5 times", "value":5, "points":5, "address":0x1211e2},
40:{"title":"Guardian Sphinx","description":"Unlock the 'Guardian Sphinx' spirit by defeating Shirase 5 times", "value":5, "points":5, "address":0x1211e6},
41:{"title":"Ally of Justice - Garadholg","description":"Unlock the 'Ally of Justice - Garadholg' spirit by defeating Kurihara 5 times", "value":5, "points":5, "address":0x1211ea},
42:{"title":"Harpie Queen","description":"Unlock the 'Harpie Queen' spirit by defeating Haruka 5 times", "value":5, "points":5, "address":0x1211ee},
43:{"title":"Dark Simorgh","description":"Unlock the 'Dark Simorgh' spirit by defeating Giado 5 times", "value":5, "points":5, "address":0x1211f2},
44:{"title":"Blackwing - Sirocco the Dawn","description":"Unlock the 'Blackwing - Sirocco the Dawn' spirit by defeating Lutz 5 times", "value":5, "points":5, "address":0x1211f6},
45:{"title":"Familiar-Possessed - Eria","description":"Unlock the 'Familiar-Possessed - Eria' spirit by defeating Mana 5 times", "value":5, "points":5, "address":0x1211fa},
46:{"title":"Jenis, Lightsworn Mender & Mezuki","description":"Unlock the 'Jenis, Lightsworn Mender & Mezuki' spirit team by winning 5 tag duels against Bolt Tanner & Blister", "value":5, "points":5, "address":0x1214da},
47:{"title":"Asura Priest & Majestic Mech - Ohka","description":"Unlock the 'Asura Priest & Majestic Mech - Ohka' spirit team by winning 10 tag duels against Bolt Tanner & Blister", "value":10, "points":5, "address":0x1214da},

48:{"title":"Rescue Cat & Gene-Warped Warwolf","description":"Unlock the 'Rescue Cat & Gene-Warped Warwolf' spirit team by winning 5 tag duels against Luna & Leo", "value":5, "points":5, "address":0x1214de},
49:{"title":"Jurak Giganot & Naturia Gaodrake","description":"Unlock the 'Jurak Giganot & Naturia Gaodrake' spirit team by winning 10 tag duels against Luna & Leo", "value":10, "points":5, "address":0x1214de},

50:{"title":"Royal Firestorm Guards & Flamvell Archer","description":"Unlock the 'Royal Firestorm Guards & Flamvell Archer' spirit team by winning 5 tag duels against Figaro & Corse", "value":5, "points":5, "address":0x1214ee},
51:{"title":"Snipe Hunter & Sasuke Samurai","description":"Unlock the 'Snipe Hunter & Sasuke Samurai' spirit team by winning 10 tag duels against Figaro & Corse", "value":10, "points":5, "address":0x1214ee},

52:{"title":"The Calculator & Gora Turtle","description":"Unlock the 'The Calculator & Gora Turtle' spirit team by winning 5 tag duels against Gunnie & Orcus", "value":5, "points":5, "address":0x1214e6},
53:{"title":"Maha Vailo & Armed Samurai Ben Kei","description":"Unlock the 'Maha Vailo & Armed Samurai Ben Kei' spirit team by winning 10 tag duels against Gunnie & Orcus", "value":10, "points":5, "address":0x1214e6},
54:{"title":"Giga Gagagigo & Goblin Elite Attack Force","description":"Unlock the 'Giga Gagagigo & Goblin Elite Attack Force' spirit team by winning 5 tag duels against Itokawa & Elgio", "value":5, "points":5, "address":0x1214ea},
55:{"title":"Night Wing Sorceress & Assault Mercenary","description":"Unlock the 'Night Wing Sorceress & Assault Mercenary' spirit team by winning 10 tag duels against Itokawa & Elgio", "value":10, "points":5, "address":0x1214ea},

56:{"title":"Kahkki, Guerilla of Dark World & Fiend Roar Deity Luri","description":"Unlock the 'Kahkki, Guerilla of Dark World & Fiend Roar Deity Luri' spirit team by winning 5 tag duels against Jean & Tail", "value":5, "points":5, "address":0x1214e2},
57:{"title":"Green Gadget & Fossil Dyna Pachycephalo","description":"Unlock the 'Green Gadget & Fossil Dyna Pachycephalo' spirit team by winning 10 tag duels against Jean & Tail", "value":10, "points":5, "address":0x1214e2},

58:{"title":"White Magician Pikeru & Ebon Magician Curran","description":"Unlock the 'White Magician Pikeru & Ebon Magician Curran' spirit team by winning 5 tag duels against Graton & Angie", "value":5, "points":5, "address":0x1214f2},
59:{"title":"Absorbing Kid from the Sky & Telekinetic Shocker","description":"Unlock the 'Absorbing Kid from the Sky & Telekinetic Shocker' spirit team by winning 10 tag duels against Graton & Angie", "value":10, "points":5, "address":0x1214f2},
}

function spiritUnlockSum(address, value){
    
    wins = byte(address)
    return measured(wins == value) && prev(wins) == (value-1)
}

function spiritUnlockConditional(address, value){
    condition = word(address)
    if(value == 1){
        return condition == value && prev(condition) == 0
    }else{
        return measured(condition >= value) && prev(condition) < value
    }
}


achievement(
    "Duel Journey has Started!",
    "Defeat Rally for the 1st time",
    2,
    SaveProtection() && byte(0x12108e)== 1 && prev(byte(0x12108e))==0
)

for cheevo in progression{
     achievement(
        title = progression[cheevo]["title"],
        description = progression[cheevo]["description"],
        points = progression[cheevo]["points"],
        trigger = SaveProtection() &&
         spiritUnlockConditional(progression[cheevo]["address"], progression[cheevo]["value"])
    )
}


for spirit in spiritUnlockWins{
    achievement(
        title = spiritUnlockWins[spirit]["title"],
        description = spiritUnlockWins[spirit]["description"],
        points = spiritUnlockWins[spirit]["points"],
        trigger = SaveProtection() &&
        spiritUnlockSum(spiritUnlockWins[spirit]["address"], spiritUnlockWins[spirit]["value"])
    )
}

spiritConditionals1={
    1:{"title":"Exodius the Ultimate Forbidden Lord","description":"Unlock the 'Exodius the Ultimate Forbidden Lord' spirit by winning a duel using Exodius the Ultimate Forbidden Lord's effect", "value":1, "points":5, "address":0x122c62},
2:{"title":"Ultimate Insect Lv7","description":"Unlock the 'Ultimate Insect Lv7' spirit by summoning Perfectly Ultimate Great Moth in a duel", "value":1, "points":3, "address":0x122bb8},
3:{"title":"Arcana Force EX - The Dark Ruler","description":"Unlock the 'Arcana Force EX - The Dark Ruler' spirit by summoning Arcana Force EX - The Dark Ruler in a duel", "value":1, "points":3, "address":0x122c24},
4:{"title":"Destiny End Dragoon","description":"Unlock the 'Destiny End Dragoon' spirit by summoning Destiny Hero - Plasma in a duel", "value":1, "points":3, "address":0x122bf8},
5:{"title":"Yubel","description":"Unlock the 'Yubel' spirit by summoning Yubel - The Ultimate Nightmare in a duel", "value":1, "points":3, "address":0x122c20},
6:{"title":"Blue Eyes White Dragon","description":"Unlock the 'Blue Eyes White Dragon' spirit by summoning Blue Eyes Ultimate Dragon in a duel", "value":1, "points":3, "address":0x122bbe},
7:{"title":"Dark Armed Dragon","description":"Unlock the 'Dark Armed Dragon' spirit by summoning Armed Dragon Lv 10 in a duel", "value":1, "points":3, "address":0x122be0},
8:{"title":"Gladiator Beast Gyzarus","description":"Unlock the 'Gladiator Beast Gyzarus' spirit by summoning Gladiator Beast Heraklinos in a duel", "value":1, "points":3, "address":0x122c0c},
9:{"title":"Stardust Dragon/Assault Mode","description":"Unlock the 'Stardust Dragon/Assault Mode' by summoning Stardust Dragon/Assault Mode in a duel", "value":1, "points":3, "address":0x122c64},
10:{"title":"Ultimate Ancient Gear Golem","description":"Unlock the 'Ultimate Ancient Gear Golem' spirit by summoning Ultimate Ancient Gear Golem in a duel", "value":1, "points":3, "address":0x122c26},
11:{"title":"Vennominaga the Deity of Poisonous Snakes","description":"Unlock the 'Vennominaga the Deity of Poisonous Snakes' spirit by summoning Vennominaga in a duel", "value":1, "points":3, "address":0x122c08},
    14:{"title":"Horus the Black Flame Dragon Lv8","description":"Unlock the 'Horus the Black Flame Dragon Lv8' spirit by using a total of 750 spell cards", "value":750, "points":5, "address":0x122af4},
15:{"title":"Jinzo - Lord","description":"Unlock the 'Jinzo - Lord' spirit by using a total of 500 traps", "value":500, "points":5, "address":0x122b04},
16:{"title":"Evil Hero Dark Gaia","description":"Unlock the 'Evil Hero Dark Gaia' spirit by using a total of 300 Speed Spells", "value":300, "points":5, "address":0x122b02},
17:{"title":"Brionac, Dragon of the Ice Barrier","description":"Unlock the 'Brionac, Dragon of the Ice Barrier' spirit by having a total of 200 Synchro summons", "value":200, "points":5, "address":0x122af2},
18:{"title":"Judgement Dragon","description":"Unlock the 'Judgement Dragon' spirit by summoning monsters 1000 times", "value":1000, "points":5, "address":0x122ae8},
}



for spirit in spiritConditionals1{
    achievement(
        title = spiritConditionals1[spirit]["title"],
        description = spiritConditionals1[spirit]["description"],
        points = spiritConditionals1[spirit]["points"],
        trigger = SaveProtection() &&
         spiritUnlockConditional(spiritConditionals1[spirit]["address"], spiritConditionals1[spirit]["value"])
    )
}

spiritConditionalsTime={
19:{"title":"Evil Hero Infernal Gainer","description":"Unlock the 'Evil Hero Infernal Gainer' spirit by having 50 hours of playing time", "value":10800000, "points":5, "address":0x120db4},
20:{"title":"Light and Darkness Dragon","description":"Unlock the 'Light and Darkness Dragon' spirit by having 100 hours of playing time", "value":21600000, "points":5, "address":0x120db4},
21:{"title":"Beast King Barbaros","description":"Unlock the 'Beast King Barbaros' spirit by reaching 200 hours of playing time", "value":43200000, "points":10, "address":0x120db4},
}


function spiritUnlockConditionalTime(address, value){
    condition = dword(address)
    if(value == 1){
        return condition == value && prev(condition) == 0
    }else{
        return measured(condition >= value, format="percent") && prev(condition) < value
    }
}

for spirit in spiritConditionalsTime{
    achievement(
        title = spiritConditionalsTime[spirit]["title"],
        description = spiritConditionalsTime[spirit]["description"],
        points = spiritConditionalsTime[spirit]["points"],
        trigger = SaveProtection() &&
         spiritUnlockConditionalTime(spiritConditionalsTime[spirit]["address"], spiritConditionalsTime[spirit]["value"])
    )
}

compactPuzzles =[
    0x1230c8,0x1230ca,0x1230cc,0x1230ce,0x1230d0
]

function sumArrayWord(array){
    sum = 0
    count = 0
    for item in array{
        sum = sum + word(item)
        count = count + 1
    }
    return measured(sum == count) && prev(sum) == count-1 
}

achievement(
    "Montage Dragon", "Unlock the 'Montage Dragon' spirit by clearing all 5 compact puzzles in Story Mode",5,
    SaveProtection() && sumArrayWord(compactPuzzles)
)

centerParts = 
bit1(0x120df0)+bit2(0x120df0)+bit3(0x120df0)+bit4(0x120df0)+bit5(0x120df0)+bit6(0x120df0)+bit7(0x120df0)+bit0(0x120df1)

achievement(
    "Alien Overlord",
    "Unlock the 'Alien Overlord' spirit by buying all the center parts at the duel runner shop",
    5,
    SaveProtection() &&
    measured(centerParts == 8) && prev(centerParts) <= 7
)

frontParts = 
bit1(0x120dee)+bit2(0x120dee)+bit3(0x120dee)+bit4(0x120dee)+bit5(0x120dee)+bit6(0x120dee)+bit7(0x120dee)+bit0(0x120def)+bit1(0x120def)+bit2(0x120def)+bit3(0x120def)+bit4(0x120def)

achievement(
    "Colossal Fighter",
    "Unlock the 'Colossal Fighter' spirit by buying all the front parts at the duel runner shop",
    5,
    SaveProtection() &&
    measured(frontParts == 12) && prev(frontParts) <= 11
)

rearParts =
bit1(0x120df2)+bit2(0x120df2)+bit3(0x120df2)+bit4(0x120df2)+bit5(0x120df2)+bit6(0x120df2)+bit7(0x120df2)+bit0(0x120df3)

achievement(
    "Doom Dozer",
    "Unlock the 'Doom Dozer' spirit by buying all the rear parts at the duel runner shop",
    5,
    SaveProtection() &&
    measured(rearParts == 8) && prev(rearParts) <=7
)
tourneyLevelOne=word(0x121038)
tourneyLevelTwo=word(0x12103a)
tourneyLevelThree=word(0x12103c)

tourneys = [
    tourneyLevelOne,
    tourneyLevelTwo,
    tourneyLevelThree
]

function DivideByItselfArray(array){
sum = 0
deltaSum = 0
    for value in array{
        sum = sum + value/value
        deltaSum = deltaSum + prev(value)/prev(value)
    }
    return measured(sum == length(array)) && deltaSum == length(array) - 1
}

achievement(
    "Endymion, the Master Magician",
    "Unlock the 'Endymion, the Master Magician' spirit by winning all 3 levels of single tournament once each",
    5,
    SaveProtection() &&
    DivideByItselfArray(tourneys)
    
)

conditionalTag={
    32:{"title":"Demise, King of Armageddon & Ruin, Queen of Oblivion","description":"Unlock the 'Demise, King of Armageddon & Ruin, Queen of Oblivion' spirit team by winning using Final Countdown in a duel", "value":1, "points":3, "address":0x122c66},
33:{"title":"Exodia the Forbidden One & Tragoedia","description":"Unlock the 'Exodia the Forbidden One & Tragoedia' spirit team by winning using Exodia in a duel", "value":1, "points":5, "address":0x122b4a},
34:{"title":"Spirit Reaper & Dark Necrofear","description":"Unlock the 'Spirit Reaper & Dark Necrofear' spirit team by winning a duel using Destiny Board", "value":1, "points":5, "address":0x122b4c},
35:{"title":"Cosmic Fortress Gol'gar & Vennominaga","description":"Unlock the 'Cosmic Fortress Gol'gar & Vennominaga' spirit team by winning using Vennominaga's effect", "value":1, "points":5, "address":0x122b56},
36:{"title":"Cyber Dragon & Drillroid","description":"Unlock the 'Cyber Dragon & Drillroid' spirit team by summoning Super Vehicroid Jumbo Drill in a duel", "value":1, "points":3, "address":0x122bec},
37:{"title":"Five-Headed Dragon & Cyberdark Dragon","description":"Unlock the 'F.G.D. & Cyberdark Dragon' spirit team by summoning F.G.D. in a duel", "value":1, "points":3, "address":0x122c12},
38:{"title":"Soldier of Mist Valley & Red Dragon Archfiend / Assault Mode","description":"Unlock the 'Soldier of Mist Valley & Red Dragon Archfiend / Assault Mode' spirit team by summoning Red Dragon Archfiend/Assault Mode in a duel", "value":1, "points":3, "address":0x122c68},
39:{"title":"Kasha & Rainbow Dark Dragon","description":"Unlock the 'Kasha & Rainbow Dark Dragon' spirit team by summoning Rainbow Dark Dragon in a duel", "value":1, "points":5, "address":0x122c1e},
40:{"title":"Destiny Hero Doom Lord & Elemental Hero Stratos","description":"Unlock the 'Destiny Hero Doom Lord & Elemental Hero Stratos' spirit team by playing 100 turbo duels", "value":100, "points":5, "address":0x121036},
41:{"title":"D.D. Survivor & Raiza the Storm Monarch","description":"Unlock the 'D.D. Survivor & Raiza the Storm Monarch' spirit team by playing 200 turbo duels", "value":200, "points":5, "address":0x121036},
42:{"title":"Simorgh, Bird of Divinity & Simorgh, Bird of Ancestry","description":"Unlock the 'Simorgh, Bird of Divinity & Simorgh, Bird of Ancestry' spirit team by playing 50 tag duels", "value":50, "points":5, "address":0x121034},
43:{"title":"Flamvell Baby & Medium of the Ice Barrier","description":"Unlock the 'Flamvell Baby & Medium of the Ice Barrier' spirit team by playing 150 tag duels", "value":150, "points":5, "address":0x121034},
44:{"title":"Ultimate Tyranno & Super Conductor Tyranno","description":"Unlock the 'Ultimate Tyranno & Super Conductor Tyranno' spirit team by playing 200 tag duels", "value":200, "points":5, "address":0x121034},
45:{"title":"Cyber End Dragon & Chimeratech Overdragon","description":"Unlock the 'Cyber End Dragon & Chimeratech Overdragon' spirit team by reach 20000 attack in a duel", "value":20000, "points":5, "address":0x122b22},
47:{"title":"Dark Armed Dragon & Caius the Shadow Monarch","description":"Unlock the 'Dark Armed Dragon & Caius the Shadow Monarch' spirit team by winning 3 tag tournaments", "value":3, "points":5, "address":0x12103e},
48:{"title":"Summoned Skull & The Splendid Venus","description":"Unlock the 'Summoned Skull & The Splendid Venus' spirit team by winning 5 tag tournaments", "value":5, "points":10, "address":0x12103e},
}

function spiritUnlockConditional2(address, value){
    condition = word(address)
    if(value == 1){
        return condition == value && prev(condition) == 0
    }else if(value >= 10000){
        return measured(condition >= value) && prev(condition) < value
    }else{
        return measured(condition == value) && prev(condition) == value-1
    }
}


for spirit in conditionalTag{
    achievement(
        title = conditionalTag[spirit]["title"],
        description = conditionalTag[spirit]["description"],
        points = conditionalTag[spirit]["points"],
        trigger = SaveProtection() &&
         spiritUnlockConditional2(conditionalTag[spirit]["address"], conditionalTag[spirit]["value"])
    )
}

BatteryMan = bit5(0x122d5f)
Horus = bit6(0x122d5f)
achievement(
    "Batteryman Charger & Thunder King Rai-Oh",
    "Unlock the 'Batteryman Charger & Thunder King Rai-Oh' spirit team by winning 5 times against 10 teams in CPU Tag Duel",
    10,
    SaveProtection() && BatteryMan > prev(BatteryMan)
)

achievement(
    "Horus the Black Flame Dragon Lv8 & Silent Swordsman Lv5",
    "Unlock the 'Horus the Black Flame Dragon Lv8 & Silent Swordsman Lv5' spirit team by winning 5 times against 20 teams in CPU Tag Duel",
    25,
    SaveProtection() && Horus > prev(Horus)
)

timeAttacksTA=[
    0x122c7c,
    0x122c8c,
    0x122c9c,
    0x122cac,
    0x122cbc,
    0x122ccc,
    0x122cdc,
    0x122cec,
    0x122cfc,
    0x122d0c,
    0x122d1c,
    0x122d2c
]

timeAttacksBattle=[
    0x122c7d,
    0x122c8d,
    0x122c9d,
    0x122cad,
    0x122cbd,
    0x122ccd,
    0x122cdd,
    0x122ced,
    0x122cfd,
    0x122d0d,
    0x122d1d,
    0x122d2d
]

function SRanks(array){
    sum = 0
    for rank in array{
        sum = sum + (bit0(rank) - (bit0(rank)*bit1(rank)))
    }
    return measured(sum == length(array)) && prev(sum) == length(array)-1
}

achievement(
    "Yusei Go",
    "Obtain all the time trial S-Ranks",
    25,
    SaveProtection() && SRanks(timeAttacksTA)
)

achievement(
    "Wheel of Fortune",
    "Obtain all the battle S-Ranks",
    25,
    SaveProtection() && SRanks(timeAttacksBattle)
)

achievement(
    "Leather Clothes",
    "Win 10 turbo duels against Yusei",
    5,
    SaveProtection()&&
    measured(byte(0x1210d6)+byte(0x1210f2)==10)
    &&
    prev(byte(0x1210d6))+prev(byte(0x1210f2)) == 9
)
achievement(
    "King Replica Model",
    "Defeat Jack Atlas 10 times",
    5,
    SaveProtection()&&
    measured(byte(0x1210ea)==10)&&
    prev(byte(0x1210ea))==9
)

achievement(
    "Witch's Dress",
    "Defeat Akiza 10 times",
    5,
        SaveProtection()&&
    measured(byte(0x1210ae)+byte(0x1210d2)==10)
    &&
    prev(byte(0x1210ae))+prev(byte(0x1210d2)) == 9
)

achievement(
    "The Ultimate Wizard",
    "Unlock the Dark Magician costume",
    5,
    SaveProtection()&&
    bit1(0x120e21)>prev(bit1(0x120e21))
)

achievement(
    "Yusei's Hybrid Disk",
    "Defeat Yusei 10 times in non-turbo duels",
    5,
    SaveProtection()&&
    measured(byte(0x1210ee)==10)&&
    prev(byte(0x1210ee)) == 9
)

achievement(
    "Luna's Custom Disk",
    "Have 10 duels end in a tie",
    5,
    SaveProtection()&&
    bit3(0x120e24)>prev(bit3(0x120e24))
)

Residential =[
    0x123062,0x123064,0x123066,0x123068,0x12306a
    ]
Slum=
[
    0x12306c,0x12306e,0x123070,0x123072,0x123074,0x123076
]
City=[
    0x12307c,0x12309c,0x12309e,0x1230a0,0x1230a2,0x1230a6,0x1230b0,0x1230b2
]

function addChests(array){
    sum=0
    for item in array{
        sum=sum+word(item)
    }
    return measured(sum==length(array))&&prev(sum)==length(array)-1
}

achievement(
    "Satellite: Residential - Chests",
    "Open every chest in the Satellite: Residential area",
    5,
    SaveProtection()&&addChests(Residential)
)

achievement(
    "Satellite: Slum - Chests",
    "Open every chest in the Satellite: Slum area",
    5,
    SaveProtection()&&addChests(Slum)
)

achievement(
    "New Domino City - Chests",
    "Open every chest in the New Domino City area",
    5,
    SaveProtection()&&addChests(City)
)

structureDecks = bitcount(0x122d30)+bitcount(0x122d31)+bit0(0x122d32)

achievement(
    "Structural Victory",
    "Defeat Nico with all 17 structure decks",
    10,
    SaveProtection()&&
    measured(structureDecks==17)&&
    prev(structureDecks)==16
)


darkBeginning1=[
    0x121F93,
0x121E45,
0x121FD6,
0x121E65,
0x1220D6,
0x121E58,
0x122033,
0x121F8D,
0x1220C8,
0x121FC4,
0x121EE6,
0x121FFA,
0x121F7D,
0x122096,
0x1220C7,
0x121EB2,
0x121F9B,
0x12203E,
0x122044,
0x122030,
0x121EE5,
0x121FFD,
0x1220CC,
0x1220B0,
0x122104,
0x121F4F,
0x122005,
0x122036,
0x121FC6,
0x122039,
0x121E93,
0x121F7A,
0x121E59,
0x121EF1,
0x122084,
0x121EC5,
0x121ECC,
0x122009,
0x122043,
0x1220A2,
0x121FBD,
0x121E52,
0x121E67,
0x121E68,
0x122078,
0x12200B,
0x122006,
0x1220AA,
0x1220C5,
0x1220A3,
0x1220AF,
0x1220A7,
0x122035,
0x121F1A,
0x121F29,
0x12203C,
0x122016,
0x12200F,
0x121EF2,
0x121F90,
0x122003,
0x12207F,
0x121F79,
0x121FBE,
0x121FD2,
0x1220AC,
0x1220BB,
0x121F25,
0x12207D,
0x121EB1,
0x121F22,
0x121E75,
0x121EA0,
0x12202E,
0x12202D,
0x12200A,
0x121E5E,
0x121EAD,
0x1220AB,
0x12203D,
0x1220A0,
0x12209D,
0x121E6B,
0x122014,
0x121FAF,
0x122004,
0x121FFB,
0x12208A,
0x121E8A,
0x121FFC,
0x1220C0,
0x121E69,
0x12208C,
0x1220BF,
0x1220A6,
0x12202B,
0x121EDE,
0x121F9C,
0x121ED3,
0x122047,
0x121F4E,
0x122095,
0x121FFF,
0x121F64,
0x121E4A,
0x121FF9,
0x1220BC,
0x121EAA,
0x122013,
0x122028,
0x122018,
0x12202A,
0x12200E,
0x121E8C,
0x122041,
0x1220AD,
0x122083,
0x121FF5,
0x122040,
0x1220A8,
0x1220BA,
0x121F36,
0x121E80,
0x121E81,
0x1220CF,
0x121EED,
0x121F42,
0x121E47,
0x121ECE,
0x121ECF,
0x122079,
0x12207B,
0x1220C1,
0x12209B,
0x122094,
0x121FBB,
0x121F46,
0x122099,
0x12209C,
0x121F18,
0x121EFF,
0x121E84,
0x122017,
0x121EF9,
0x121E7A,
0x121E57,
0x121E55,
0x122031,
0x121FAB,
0x122092,
0x12201C,
0x121F27,
0x121ED6,
0x121E7D,
0x121F77,
0x1220C4,
0x121EC0,
0x122090,
0x121EA5,
0x12208D,
0x12208E,
0x12208F,
0x12208B,
0x121EB3,
0x122085,
0x12201E,
0x121F34,
0x122029,
0x122048,
0x12201A,
0x1220B2,
0x122012,
0x12201D,
0x121E46,
0x122037,
0x122026,
0x122086,
0x122007,
0x121F97,
0x121EAE,
0x121EBD,
0x121FBF,
0x1220B1,
0x121E95,
0x121F75,
0x121EE8,
0x1220AE,
0x122032,
0x122091,
0x12207C,
0x121E56,
0x121E54,
0x12201B,
0x122001,
0x121EFE,
0x1220C6,
0x12200C,
0x1220A9,
0x1220A4,
0x122080,
0x122011,
0x121E83,
0x122034,
0x121E5B,
0x121F74,
0x12209F,
0x122015,
0x121FD3,
0x1220BE,
0x1220C3,
0x121ED5,
0x121F00,
0x121F8E,
0x122000,
0x121FD4,
0x1220D5,
0x122042,
0x1220C2,
0x1220CE,
0x1220CD,
0x122002,
0x122038,
0x121F7C,
0x12203F,
0x121FF8,
0x121F78,
0x121FA4,
0x122093,
0x1220B3,
0x12200D,
0x121EE3,
0x122019,
0x121FF7,
0x121E91,
0x121EA7,
0x121E4B,
0x12207A,
]

darkBeginning2=
[0x121F84,
0x12218C,
0x1220D0,
0x12210F,
0x122117,
0x122162,
0x122143,
0x122067,
0x121F96,
0x1220E0,
0x121E85,
0x1220DF,
0x122124,
0x12215C,
0x12205F,
0x122168,
0x121F2C,
0x121E99,
0x122059,
0x1220B5,
0x122166,
0x121FF3,
0x121FD8,
0x121FEF,
0x121FDC,
0x121FD9,
0x121FD7,
0x122125,
0x121F9E,
0x121E53,
0x122141,
0x1220E6,
0x122150,
0x121F17,
0x122110,
0x12212F,
0x12213D,
0x122126,
0x1220FE,
0x121FAE,
0x121FDA,
0x1220E3,
0x121E7C,
0x1220E4,
0x12215A,
0x122118,
0x121F3E,
0x121F40,
0x122163,
0x12211F,
0x121FF0,
0x1220F1,
0x1220F0,
0x122153,
0x122119,
0x121E72,
0x12215E,
0x1220E2,
0x122174,
0x122064,
0x121F3B,
0x122147,
0x122128,
0x12214E,
0x1220E9,
0x122120,
0x122069,
0x122144,
0x121E8F,
0x121E48,
0x121F62,
0x122111,
0x121E51,
0x12205D,
0x121FA6,
0x121E4D,
0x121F41,
0x1220F6,
0x121FE3,
0x12216A,
0x122169,
0x122171,
0x122154,
0x122152,
0x12212D,
0x12216C,
0x12214C,
0x121E9F,
0x122172,
0x1220F8,
0x122175,
0x12215F,
0x122165,
0x1220D4,
0x121EF3,
0x122098,
0x1220D2,
0x1220F5,
0x122164,
0x122151,
0x122116,
0x12211D,
0x121E6A,
0x121F28,
0x122129,
0x12212C,
0x121EA8,
0x122158,
0x1220FF,
0x12211B,
0x122112,
0x121FE1,
0x122148,
0x121F88,
0x121F33,
0x1220EC,
0x121EA6,
0x12215D,
0x12213E,
0x1220F3,
0x121E7B,
0x121F3D,
0x122146,
0x121F26,
0x121E6C,
0x121EFA,
0x12206B,
0x12215B,
0x121E96,
0x122058,
0x12205E,
0x121F10,
0x121F3F,
0x122057,
0x12212E,
0x121F15,
0x12214F,
0x121FDF,
0x12213F,
0x122062,
0x1220EE,
0x121F16,
0x121F31,
0x122100,
0x12216B,
0x122074,
0x122071,
0x121F2E,
0x12211A,
0x121E9B,
0x122173,
0x122176,
0x121F39,
0x122155,
0x122170,
0x121E6F,
0x122142,
0x12205C,
0x12217A,
0x121EBB,
0x12216E,
0x121E9C,
0x122179,
0x121FE0,
0x121FE5,
0x121F04,
0x121E64,
0x12214B,
0x122061,
0x121EFB,
0x12211C,
0x121FF1,
0x121FAD,
0x1220F2,
0x122149,
0x122115,
0x1220E7,
0x121EEA,
0x1220F9,
0x1220FA,
0x1220FB,
0x1220FC,
0x122156,
0x12214A,
0x1220B6,
0x12212A,
0x121F30,
0x12212B,
0x122161,
0x122160,
0x12211E,
0x121F2F,
0x1220D3,
0x122127,
0x1220F7,
0x121F20,
0x122114,
0x1220EA,
0x12214D,
0x121F2D,
0x121FE4,
0x122121,
0x121E5A,
0x121E87,
0x121F19,
0x121E82,
0x12216D,
0x122183,
0x12217F,
0x122182,
0x122184,
0x122181,
0x122180,
0x1220ED,
0x122177,
0x121EF0,
0x12216F,
0x122066,
0x121F43,
0x121E62,
0x122102,
0x121F45,
0x122068,
0x122140,
0x1220E1,]

darkRevelations1=
[0x12213A,
0x122210,
0x12210E,
0x1221D5,
0x1221FD,
0x122200,
0x1221FE,
0x1221D0,
0x1220D8,
0x122193,
0x12210C,
0x122264,
0x1221DE,
0x1221CC,
0x122105,
0x122103,
0x122237,
0x12220D,
0x122190,
0x12223F,
0x122235,
0x122267,
0x122233,
0x122238,
0x12218D,
0x122236,
0x1221A9,
0x1221B7,
0x1221E4,
0x122192,
0x121F91,
0x122234,
0x1221F2,
0x1221C1,
0x12221E,
0x122243,
0x122196,
0x122216,
0x12224F,
0x12210D,
0x1221A5,
0x122212,
0x122133,
0x122189,
0x12226E,
0x1221B2,
0x122106,
0x122253,
0x12220A,
0x122209,
0x122275,
0x1221B0,
0x122215,
0x12219A,
0x1221CA,
0x1221FA,
0x1221C9,
0x1221FB,
0x1221CB,
0x1221AA,
0x122241,
0x1221A8,
0x12223B,
0x1221F9,
0x12213B,
0x122203,
0x12226F,
0x122207,
0x12210A,
0x122206,
0x12210B,
0x122208,
0x1221AD,
0x1221EB,
0x12222D,
0x12220B,
0x12225D,
0x12226C,
0x122273,
0x122214,
0x122252,
0x12223A,
0x1221E9,
0x1221BC,
0x122239,
0x122271,
0x1221DB,
0x1221B8,
0x1221B3,
0x12221A,
0x122134,
0x1221AE,
0x122217,
0x1221AF,
0x1221E8,
0x122227,
0x122242,
0x122268,
0x122269,
0x1221C0,
0x121F8F,
0x1221C8,
0x1221D6,
0x12221C,
0x1221EC,
0x122186,
0x1221B5,
0x12223E,
0x12225F,
0x122260,
0x122272,
0x1221BA,
0x1221E7,
0x12223D,
0x122274,
0x1221B6,
0x1221E1,
0x12222C,
0x1221C4,
0x122130,
0x122222,
0x122228,
0x12224B,
0x12226A,
0x1221FC,
0x12226B,
0x1221F8,
0x1221DC,
0x1221E6,
0x122270,
0x12225B,
0x12221F,
0x1221D9,
0x1221A7,
0x1221A6,
0x1221A0,
0x1221A1,
0x1221A2,
0x12219F,
0x1221A3,
0x1221A4,
0x122245,
0x122202,
0x122261,
0x1221E2,
0x12223C,
0x1221E0,
0x122229,
0x1221B9,
0x12219E,
0x122262,
0x122223,
0x12219D,
0x122137,
0x1221D8,
0x1221EE,
0x122219,
0x121F99,
0x122205,
0x12220E,
0x122218,
0x122211,
0x122220,
0x12219C,
0x122263,
0x122226,
0x122265,
0x1221BD,
0x1221F3,
0x12222A,
0x12224D,
0x12226D,
0x122224,
0x1221C3,
0x1221DF,
0x1221B1,
0x1221C7,
0x12224E,
0x12225C,
0x122251,
0x12220C,
0x1221F6,
0x122225,
0x1221F4,
0x12221D,
0x1221D7,
0x12220F,
0x1221EA,
0x122249,
0x1221C2,
0x1221ED,
0x122277,
0x122254,
0x1221B4,
0x12222B,
0x1221BF,
0x1221C6,
0x1221F7,
0x122247,
0x12224A,
0x1221E3,
0x122213,
0x1221BE,
0x122276,
0x12225E,
0x1221DA,
0x1221F5,
0x122221,
0x122240,
0x122244,
0x122204,
0x122131,
0x122250,
0x1221BB,
0x12222E,
0x1221F1,
0x12224C,
0x1221C5,
0x1221EF,
0x122266,
0x122248,
0x12221B,
0x1221DD,
0x1221F0,
0x1221E5,
0x122246,
0x1221AC,
0x1221AB,
0x122139,]

darkRevelations2=
[0x12228D,
0x1222B6,
0x1222E3,
0x1222A6,
0x122317,
0x1222AF,
0x1222B9,
0x122304,
0x122280,
0x122327,
0x12229D,
0x1222ED,
0x122286,
0x122321,
0x122295,
0x1222A4,
0x1222C5,
0x1222C4,
0x122307,
0x12219B,
0x122284,
0x121F8C,
0x1222BD,
0x1222B0,
0x12229B,
0x1222C0,
0x1222DC,
0x12231D,
0x1222E4,
0x1222B7,
0x121FB5,
0x122283,
0x1222A2,
0x1222CC,
0x1222CF,
0x122282,
0x122323,
0x122308,
0x1222FA,
0x1221D2,
0x122288,
0x1221D3,
0x122314,
0x1222BC,
0x1222E5,
0x12230A,
0x1222BA,
0x122305,
0x1222D2,
0x122325,
0x12230C,
0x122311,
0x1222B1,
0x121F89,
0x1222C2,
0x1222D3,
0x122290,
0x122313,
0x1222CD,
0x122306,
0x1222E6,
0x1222FB,
0x1222F3,
0x1222F9,
0x1222D0,
0x12227D,
0x12229E,
0x1222AC,
0x122312,
0x122230,
0x1222BB,
0x122293,
0x122294,
0x122285,
0x12228B,
0x12227F,
0x12229F,
0x122296,
0x1222B4,
0x122318,
0x12227E,
0x122322,
0x1222CA,
0x12229A,
0x1222D1,
0x12231E,
0x12230F,
0x1222C8,
0x1222F1,
0x122315,
0x1222A5,
0x1222B3,
0x1222CB,
0x12228E,
0x1222BF,
0x1222A9,
0x122289,
0x122303,
0x1222E8,
0x1222F2,
0x1222DB,
0x122232,
0x12228C,
0x1222C1,
0x12228F,
0x122320,
0x1222B5,
0x122287,
0x1222C9,
0x12231F,
0x12230B,
0x122324,
0x1222E7,
0x1222E2,
0x1222F5,
0x12218A,
0x1222AA,
0x1222BE,
0x1222F4,
0x122302,
0x1222AE,
0x1222EE,
0x122097,
0x1222EC,
0x1222F8,
0x12227C,
0x122291,
0x12227B,
0x1222EB,
0x12230D,
0x122326,
0x121F9A,
0x122298,
0x122297,
0x122309,
0x1222B2,
0x1222C6,
0x122281,
0x1222AB,
0x1222CE,
0x12228A,
0x121F98,
0x1222C3,
0x1222E9,
0x1222F7,
0x122077,
0x12229C,
0x122310,
0x1222DF,
0x1222A1,
0x122292,
0x12230E,
0x1222DD,
0x1222E0,
0x122316,
0x1222F0,
0x12231C,
0x1222AD,
0x12231B,
0x1222DE,
0x122319,
0x122299,
0x1222B8,
0x1222A0,
0x12231A,
0x1222C7,
0x1222E1,
0x1222F6,
0x1222EF,
0x1222EA,
0x1220B4,
0x1222A3,]

soulOfTheDuelist=
[0x122332,
0x12234B,
0x122336,
0x122339,
0x121FB9,
0x122357,
0x12235A,
0x122331,
0x12233E,
0x122138,
0x122338,
0x12232E,
0x122334,
0x122355,
0x122347,
0x122330,
0x122345,
0x122335,
0x12233C,
0x122344,
0x122353,
0x12232F,
0x122352,
0x122349,
0x122337,
0x12234E,
0x122359,
0x122346,
0x122333,
0x12233F,
0x12234F,
0x121FA5,
0x122356,
0x122340,
0x12234A,
0x12233B,
0x122341,
0x122358,
0x122348,
0x122354,
0x12233A,
0x122350,
0x122351,
0x12234C,
0x122343,
0x12234D,
0x12233D,
0x122342,]

riseOfDestiny=
[0x12236F,
0x122279,
0x122363,
0x12236C,
0x12238D,
0x122389,
0x122394,
0x122377,
0x121FB7,
0x122384,
0x12237F,
0x122393,
0x122397,
0x122380,
0x12237E,
0x122386,
0x12237D,
0x12237B,
0x122195,
0x122385,
0x12238F,
0x122372,
0x122382,
0x12236E,
0x122396,
0x122388,
0x12238A,
0x122378,
0x12237C,
0x122390,
0x122392,
0x12236B,
0x122373,
0x122374,
0x122375,
0x122383,
0x122370,
0x12238B,
0x12238C,
0x122391,
0x12237A,
0x122381,
0x122387,
0x122278,
0x122379,
0x122376,
0x122371,
0x122395,
0x12236D,
0x12236A,
0x12238E,]

flamingEternity=[
    0x1223AD,
0x1223A5,
0x12239C,
0x122364,
0x1223AF,
0x1223A2,
0x1223A4,
0x1223C0,
0x12239F,
0x1223AE,
0x1220CB,
0x1223BE,
0x12227A,
0x1223B8,
0x1223C2,
0x1220CA,
0x1223B9,
0x1223BB,
0x1221FF,
0x1223B2,
0x1223B1,
0x12239E,
0x1223A6,
0x1223BD,
0x1223A1,
0x1223B4,
0x1223BF,
0x12239A,
0x1223C1,
0x1223AB,
0x1223B5,
0x1223A7,
0x1223BC,
0x12239D,
0x12239B,
0x1223A0,
0x1223A3,
0x1223B0,
0x1223B6,
0x1223B3,
0x1223AC,
0x122399,
0x1223B7,
0x1223A9,
0x1223AA,
0x1223A8,
0x1223BA,
]

theLostMillennium=[
    0x1223D4,
0x1223E8,
0x1223E9,
0x1223E6,
0x121FA7,
0x122185,
0x1223D8,
0x1223DB,
0x1223D7,
0x1223D3,
0x1223D5,
0x1223D9,
0x1223DE,
0x1223E7,
0x1223F2,
0x1223F4,
0x1223EF,
0x1223FB,
0x1223FA,
0x1223F9,
0x1223D6,
0x1223DF,
0x1223EC,
0x1223E3,
0x1223E4,
0x1223ED,
0x1223EB,
0x1223CF,
0x1223D0,
0x1223D1,
0x1223D2,
0x1223E0,
0x1223EE,
0x1223EA,
0x1223F8,
0x1223DC,
0x1223E1,
0x1223F1,
0x1223E5,
0x1223F6,
0x1223DD,
0x1223F5,
0x1223DA,
0x1223F3,
0x1223F7,
0x1223F0,
0x1223E2,
]

cyberneticRevolution=[
    0x12240A,
0x12240B,
0x122408,
0x12240F,
0x122404,
0x122409,
0x122418,
0x12240C,
0x122402,
0x122411,
0x122430,
0x122420,
0x122432,
0x122406,
0x122428,
0x12242E,
0x122422,
0x12242F,
0x122412,
0x122424,
0x122410,
0x122405,
0x12242D,
0x12241E,
0x122431,
0x122417,
0x122425,
0x12241B,
0x12241A,
0x122423,
0x122401,
0x12241F,
0x122421,
0x122419,
0x1223FF,
0x122416,
0x122403,
0x122415,
0x122426,
0x122433,
0x122427,
0x122414,
0x122429,
0x12242B,
0x12242A,
0x12242C,
0x122407,
0x122400,
0x12241C,
0x12241D,
]

elementalEnergy=
[0x12244B,
0x12243A,
0x12244C,
0x12244D,
0x12244A,
0x122442,
0x12245B,
0x122461,
0x122449,
0x122446,
0x12246E,
0x122458,
0x122459,
0x12244E,
0x122452,
0x12244F,
0x122453,
0x1221CF,
0x1221CE,
0x12246D,
0x122199,
0x122456,
0x12245A,
0x122457,
0x12243F,
0x122450,
0x122464,
0x122463,
0x122451,
0x122467,
0x122462,
0x122443,
0x122447,
0x12245D,
0x12245E,
0x12245F,
0x122460,
0x122454,
0x122465,
0x122444,
0x12243B,
0x12246C,
0x12243D,
0x12243C,
0x122445,
0x122440,
0x12246B,
0x12245C,
0x122468,
0x122466,
0x12246A,
0x12243E,
0x122448,
0x122469,
0x122441,
0x122455,]

shadowOfInfinity=[
    0x12248A,
0x122486,
0x122487,
0x122485,
0x122493,
0x122496,
0x1224A5,
0x1224A4,
0x12249B,
0x12249D,
0x122491,
0x12249F,
0x1224AF,
0x1224A9,
0x1224B0,
0x1224A2,
0x1224AE,
0x122490,
0x12249A,
0x1224A0,
0x12248B,
0x122499,
0x12248F,
0x12248E,
0x12249E,
0x1224A1,
0x122488,
0x1224A7,
0x1224AC,
0x1224AB,
0x12249C,
0x12248C,
0x122489,
0x12248D,
0x122495,
0x1224AA,
0x122492,
0x1224A8,
0x1224A3,
0x1224AD,
0x122494,
0x1224A6,
]

enemyOfJustice=[0x1224C4,
0x1224BE,
0x1224BF,
0x1224DF,
0x1224C8,
0x1224C5,
0x1224B6,
0x1224DA,
0x1224D7,
0x1224DE,
0x1224D2,
0x1224C3,
0x1224D1,
0x1224D5,
0x1224E8,
0x1224C7,
0x1224D8,
0x1224CF,
0x1224E5,
0x1224D9,
0x1224E7,
0x1224E0,
0x1224DB,
0x1224E2,
0x1224C6,
0x1224D4,
0x1224C2,
0x1224C1,
0x1224D3,
0x1224E4,
0x1224CC,
0x1224C0,
0x1224B7,
0x1224D0,
0x1224CA,
0x1224CB,
0x1224E6,
0x1224DD,
0x1224D6,
0x1224C9,
0x1224CE,
0x1224E3,
0x1224CD,
0x1224DC,
0x122361,
0x1224E1,]

powerOfTheDuelist=[
    0x1224EF,
0x122507,
0x122506,
0x122508,
0x1224FF,
0x1224FC,
0x122509,
0x12250D,
0x12250E,
0x1224F3,
0x122512,
0x122523,
0x122522,
0x122524,
0x1224F1,
0x12252C,
0x122502,
0x122500,
0x1224FB,
0x122516,
0x122510,
0x122517,
0x122515,
0x1224F2,
0x1224F7,
0x12251E,
0x122521,
0x122520,
0x12251D,
0x12251C,
0x122511,
0x12252A,
0x122505,
0x122514,
0x12250F,
0x122526,
0x122503,
0x1224FA,
0x1224FD,
0x1224FE,
0x122504,
0x1224BC,
0x122513,
0x122525,
0x122529,
0x122501,
0x12251B,
0x122528,
0x12252B,
0x12251A,
0x122527,
0x1224F8,
0x1224F9,
]

cyberdarkImpact=[0x122549,
0x122540,
0x122539,
0x122541,
0x122537,
0x122536,
0x122538,
0x122543,
0x122548,
0x122569,
0x122561,
0x12255F,
0x122564,
0x122556,
0x12255C,
0x12254C,
0x122553,
0x122567,
0x122554,
0x12251F,
0x122547,
0x12254D,
0x122551,
0x122552,
0x12254F,
0x122550,
0x12254E,
0x12254B,
0x122542,
0x122566,
0x122565,
0x12255B,
0x122555,
0x122559,
0x12253F,
0x122558,
0x122563,
0x12255E,
0x12255A,
0x12255D,
0x122557,
0x122560,
0x12254A,
0x122562,
0x122568,]

strikeOfNeos=[0x122595,
0x122594,
0x122596,
0x12258D,
0x1225A9,
0x12259D,
0x12259E,
0x122582,
0x12258B,
0x12250A,
0x1225A0,
0x122599,
0x1225AB,
0x122592,
0x1225A4,
0x122583,
0x1225A2,
0x122597,
0x12250B,
0x1225AC,
0x122584,
0x1225A6,
0x12259B,
0x122598,
0x12259A,
0x122593,
0x1225A7,
0x1225A1,
0x122590,
0x1225A5,
0x12258F,
0x12258E,
0x12259C,
0x122591,
0x12250C,
0x1225A3,
0x1225A8,
0x12259F,
0x12258C,
0x1225AA,
0x12258A,
0x122589,
0x122587,
0x122588,
0x122585,
0x122586,]

forceOfTheBreaker=[
    0x1225C7,
0x1225DB,
0x1225C9,
0x1225CE,
0x1225F7,
0x1225E7,
0x1225E2,
0x1225E4,
0x1225E3,
0x1225D0,
0x1225D1,
0x1225C8,
0x1225E0,
0x1225C5,
0x1225DE,
0x1225D2,
0x1225E5,
0x1225DC,
0x1225E1,
0x1225EB,
0x1225CD,
0x1225CB,
0x1225D9,
0x1225DD,
0x1225DF,
0x1225EE,
0x1225F4,
0x1225CF,
0x1225F3,
0x1225E9,
0x1225C2,
0x1225C1,
0x1225C0,
0x1225C6,
0x1225C4,
0x1225C3,
0x1225E8,
0x1225EA,
0x1225F0,
0x1225ED,
0x1225FB,
0x1225F8,
0x1225F9,
0x1225F5,
0x1225CA,
0x1225FA,
0x1225E6,
0x1225EF,
0x1225F6,
0x1225F2,
0x1225EC,
0x1225DA,
0x1225F1,
0x1225CC,
]

tacticalEvolution=[
    0x122626,
0x122617,
0x122618,
0x122620,
0x122628,
0x122627,
0x122633,
0x12262A,
0x12261B,
0x12262E,
0x12261F,
0x12263A,
0x12263E,
0x122646,
0x122635,
0x12260E,
0x122629,
0x122625,
0x12261C,
0x12262D,
0x122615,
0x122613,
0x122642,
0x122636,
0x122643,
0x122631,
0x122623,
0x12263C,
0x12263B,
0x122608,
0x122619,
0x12261A,
0x122609,
0x12260A,
0x122607,
0x122632,
0x12260B,
0x12260C,
0x122637,
0x12262C,
0x122614,
0x122630,
0x12263F,
0x122634,
0x122644,
0x12262B,
0x12260D,
0x12262F,
0x12260F,
0x122638,
0x122624,
0x122610,
0x122616,
0x122621,
0x122640,
0x122612,
0x122641,
0x122639,
0x122645,
0x12263D,
0x12261E,
0x122622,
0x12261D,
0x122611,
]

gladiatorAssault=[0x122658,
0x122662,
0x122652,
0x122669,
0x122679,
0x122657,
0x12264E,
0x12268E,
0x122673,
0x122656,
0x122653,
0x12266A,
0x1224F6,
0x12253A,
0x122675,
0x122672,
0x12268F,
0x122667,
0x122666,
0x12265B,
0x12267D,
0x122654,
0x122655,
0x1224F0,
0x12266D,
0x12266B,
0x122687,
0x1224F4,
0x1224F5,
0x122686,
0x122685,
0x122676,
0x122693,
0x122663,
0x122665,
0x122659,
0x12265A,
0x12265C,
0x122664,
0x122668,
0x12267B,
0x122650,
0x122684,
0x122690,
0x12265D,
0x12268A,
0x12268D,
0x12267A,
0x122692,
0x12266C,
0x12266F,
0x122678,
0x12266E,
0x122670,
0x12267F,
0x12267E,
0x122680,
0x122681,
0x122682,
0x122691,
0x122688,
0x12265F,
0x122660,
0x12264F,
0x12268B,
0x122661,
0x122689,
0x122683,
0x122674,
0x12265E,
0x12267C,
0x122677,
0x12268C,
0x122651,
0x122671,]

phantomDarkness=[
    0x1226DA,
0x1226F1,
0x1226CE,
0x1226F2,
0x1226D3,
0x1226D5,
0x1226DC,
0x12270C,
0x1226F9,
0x1226E7,
0x122708,
0x1226F4,
0x1226D7,
0x1226D2,
0x1226DF,
0x1226D4,
0x1226EE,
0x122714,
0x12270B,
0x1226DD,
0x1226FC,
0x122710,
0x122721,
0x1226E4,
0x1226F7,
0x122706,
0x1226F3,
0x1226FB,
0x1226EC,
0x1226DB,
0x1226E6,
0x1226F5,
0x122700,
0x12270A,
0x122711,
0x1226AE,
0x1226E9,
0x1226EB,
0x122709,
0x1226FF,
0x1226D6,
0x1226FA,
0x1226DE,
0x12270D,
0x122704,
0x1226D9,
0x1226D8,
0x1226E0,
0x122712,
0x1226AF,
0x12270E,
0x122716,
0x1226FD,
0x1226B1,
0x12270F,
0x1226E3,
0x1226AD,
0x1226E8,
0x122702,
0x122703,
0x1226B2,
0x1226F6,
0x1226EF,
0x1226F0,
0x1226E1,
0x122713,
0x122705,
0x1226D0,
0x1226CF,
0x1226ED,
0x1226E2,
0x122707,
0x122701,
0x1226F8,
0x1226EA,
0x122715,
0x1226FE,
0x1226E5,
0x1226B0,
0x1226D1,
]

lightOfDestruction=[0x12276F,
0x122787,
0x12275F,
0x122778,
0x122788,
0x12276E,
0x122776,
0x122780,
0x122782,
0x122765,
0x122796,
0x12279C,
0x122771,
0x122786,
0x12276C,
0x12277D,
0x12277E,
0x12279F,
0x122779,
0x12278C,
0x1227A5,
0x1227A6,
0x12279D,
0x122764,
0x122790,
0x122792,
0x1227A0,
0x122795,
0x122784,
0x12277A,
0x1227AC,
0x1227A2,
0x122766,
0x122767,
0x122768,
0x122769,
0x12276A,
0x12276B,
0x12276D,
0x12277C,
0x122785,
0x122760,
0x12278F,
0x12278D,
0x122799,
0x122762,
0x1227AD,
0x122772,
0x122789,
0x1227A8,
0x1227A4,
0x12279B,
0x122781,
0x122777,
0x12278A,
0x12277F,
0x122770,
0x122798,
0x1227A3,
0x1227AB,
0x122773,
0x122761,
0x122797,
0x1227A7,
0x122794,
0x1227A9,
0x12279E,
0x12279A,
0x122774,
0x1227AA,
0x122791,
0x12278B,
0x12278E,
0x122783,
0x1227A1,
0x12277B,
0x122763,
0x122793,
0x122775,]

theDuelistGenesis=[
    0x1227F5,
0x1227F2,
0x1227F4,
0x1227F3,
0x1227F7,
0x1227D7,
0x122807,
0x1227FC,
0x122806,
0x1227DD,
0x1227F1,
0x1227D1,
0x1227D2,
0x1227D8,
0x1227E6,
0x1227E0,
0x1227F9,
0x1227F8,
0x1227DC,
0x122811,
0x1227FA,
0x1227D6,
0x1227DF,
0x1227FF,
0x12281A,
0x1227E4,
0x1227D4,
0x122809,
0x12280A,
0x1227BA,
0x122802,
0x1227EE,
0x1227FB,
0x1227EB,
0x122804,
0x12280B,
0x1227EC,
0x1227D9,
0x1227B2,
0x122800,
0x122805,
0x122814,
0x1227C0,
0x1227D3,
0x1227E7,
0x12280F,
0x1227DE,
0x1227BB,
0x1227E8,
0x122812,
0x1227DB,
0x1227ED,
0x1227E1,
0x1227EA,
0x122810,
0x122801,
0x1227FD,
0x1227F6,
0x1227E9,
0x12280E,
0x1227E2,
0x1227BF,
0x122815,
0x1227F0,
0x1227BE,
0x1227B9,
0x1227B1,
0x122818,
0x1227FE,
0x1227E3,
0x122813,
0x122803,
0x122808,
0x1227EF,
0x1227D5,
0x1227BD,
0x1227E5,
0x12280D,
0x1227D0,
0x1227DA,
]

crossroadOfChaos=[0x12286A,
0x122844,
0x122847,
0x122869,
0x122880,
0x122870,
0x1227B0,
0x122884,
0x12286F,
0x122888,
0x1227B5,
0x122862,
0x122868,
0x122865,
0x12287E,
0x122864,
0x12287B,
0x12285A,
0x12286B,
0x12285E,
0x122842,
0x12284F,
0x122872,
0x122855,
0x122856,
0x122845,
0x122882,
0x12286C,
0x122878,
0x12285B,
0x12287C,
0x122843,
0x12288A,
0x12286D,
0x122867,
0x12287F,
0x122851,
0x1227B7,
0x12288D,
0x122885,
0x122871,
0x122879,
0x122859,
0x12288F,
0x1227B3,
0x122841,
0x12288E,
0x12284D,
0x1227B6,
0x12285F,
0x122860,
0x12285D,
0x1227B8,
0x122886,
0x122852,
0x122858,
0x122873,
0x122854,
0x122874,
0x122853,
0x122887,
0x122857,
0x1227B4,
0x12287D,
0x122876,
0x12288B,
0x122875,
0x122889,
0x122861,
0x122863,
0x12285C,
0x122883,
0x12286E,
0x122881,
0x122877,
0x122846,
0x12287A,
0x12288C,
0x12284E,
0x122850,]

crimsonCrisis=[0x1228D0,
0x1228E1,
0x1228CE,
0x1228CF,
0x1228C4,
0x1228E3,
0x1227BC,
0x1228CA,
0x1228E4,
0x1228E0,
0x1228E2,
0x1228C1,
0x1228CB,
0x1228DF,
0x1228DE,
0x1228D3,
0x1228F7,
0x1228EC,
0x1228BF,
0x1228C2,
0x122819,
0x1228BD,
0x1228D5,
0x122908,
0x122904,
0x1228E8,
0x1228D8,
0x1228F8,
0x1228E7,
0x1228F2,
0x122907,
0x1228D1,
0x1228F5,
0x122903,
0x1228D2,
0x1228EB,
0x1228ED,
0x122902,
0x1228DC,
0x1228C9,
0x1228C8,
0x1228DB,
0x1228C7,
0x1228F9,
0x1228DA,
0x1228D9,
0x1228FD,
0x1228FF,
0x122891,
0x1228D6,
0x1228FB,
0x1228DD,
0x1228C3,
0x1228F0,
0x1228D7,
0x1228FE,
0x122905,
0x1228CC,
0x122900,
0x1228EA,
0x122901,
0x1228E9,
0x1228CD,
0x1228F6,
0x1228D4,
0x1228FC,
0x1228E5,
0x1228EE,
0x1228F1,
0x1228FA,
0x1228F3,
0x1228C0,
0x1228BC,
0x1228EF,
0x1228C5,
0x1228BE,
0x122906,
0x1228C6,
0x1228E6,
0x1228F4,]

synchroAwaken=[
0x122745,
0x121e44,
0x122317,
0x12234B,
0x122746,
0x12274A,
0x122748,
0x12273C,
0x122730,
0x1222ED,
0x12203E,
0x122404,
0x121FD8,
0x121E93,
0x122734,
0x1223D3,
0x122744,
0x12273A,
0x122749,
0x1220B7,
0x122043,
0x12274D,
0x122747,
0x121E7C,
0x122732,
0x12273D,
0x12273E,
0x12273F,
0x12274C,
0x122731,
0x12274B,
0x1224BC,
0x122736,
0x122737,
0x122738,
0x121ED6,
0x12208B,
0x121FA8,
0x122037,
0x12227B,
0x121FCB,
0x122735,
0x122089,
0x122733,
0x122740,
0x122741,
0x122742,
0x122743,
0x122739,
0x12273B,
]

invasionOfWorms=[0x12283C,
0x1225C7,
0x1227F5,
0x12283A,
0x1227F2,
0x1220DF,
0x122839,
0x12283B,
0x1227D7,
0x12282C,
0x122820,
0x122005,
0x1227D1,
0x122825,
0x122837,
0x122831,
0x122833,
0x122569,
0x121ECC,
0x1220A2,
0x12282A,
0x12281F,
0x1227DC,
0x122826,
0x122828,
0x122838,
0x12282E,
0x1221F9,
0x122832,
0x1225F0,
0x1227D9,
0x12282B,
0x122821,
0x122822,
0x122823,
0x1227D3,
0x122373,
0x122824,
0x12201F,
0x122054,
0x1220A9,
0x121FF1,
0x122827,
0x122829,
0x122834,
0x122835,
0x122836,
0x12282D,
0x12282F,
0x122830,]

justiceStrikesBack=[0x122840,
0x1228AF,
0x121F84,
0x1228AC,
0x122866,
0x12283F,
0x1228AB,
0x1228AD,
0x1228A7,
0x12219B,
0x1228AE,
0x12289C,
0x122894,
0x1224F6,
0x12289B,
0x1228A5,
0x1228A4,
0x1228A6,
0x1228A0,
0x122896,
0x12284F,
0x1222FE,
0x1222D3,
0x122899,
0x1228AA,
0x121FAA,
0x1222CD,
0x121F51,
0x1228A2,
0x1228A3,
0x122401,
0x1222F1,
0x12289F,
0x1228A1,
0x122859,
0x12289A,
0x122897,
0x122031,
0x121FBC,
0x12289D,
0x121F50,
0x122886,
0x122852,
0x122892,
0x122895,
0x122893,
0x1220C9,
0x122898,
0x122562,
0x12289E,
0x12284E,
0x1228A8,
0x1228A9,]

fiendRoarDeityRevival=[0x1220D0,
0x122927,
0x122928,
0x12292B,
0x12292A,
0x12291C,
0x122571,
0x12290F,
0x122915,
0x12286F,
0x1227DD,
0x122929,
0x1228CB,
0x122512,
0x122925,
0x122921,
0x121EC5,
0x122910,
0x122347,
0x122913,
0x122920,
0x122855,
0x122918,
0x122882,
0x121FBE,
0x122923,
0x12291D,
0x122922,
0x122530,
0x1220F5,
0x12291F,
0x12291E,
0x122911,
0x12290E,
0x12291A,
0x1221D1,
0x1228C3,
0x122576,
0x1228FE,
0x122914,
0x122912,
0x12247C,
0x1220B9,
0x122916,
0x122919,
0x122917,
0x121F86,
0x12291B,
0x122924,
0x122926,]

extraPack=[0x122753,
0x1225FE,
0x12275B,
0x122717,
0x122758,
0x12271E,
0x12269E,
0x122754,
0x122759,
0x12271D,
0x122719,
0x122699,
0x12275A,
0x122698,
0x122752,
0x122755,
0x12271A,
0x12271B,
0x12269B,
0x122695,
0x122718,
0x122757,
0x12269D,
0x122756,
0x12269A,
0x122696,
0x12269C,
0x122720,
0x122697,
0x12271C,
0x12271F,
0x122647,]

WC1=[0x12232A,
0x12274E,
0x121F23,
0x12232B,
0x1224B2,
0x121FB3,
0x122365,
0x122413,
0x1222A7,
0x12290B,
0x1222D6,
0x121FA3,
0x1226C7,
0x122470,
0x12217D,
0x12217C,
0x12206A,
0x121F83,
0x121F9D,
0x12217B,
0x12232D,
0x1222D4,
0x121EB0,
0x1226B6,
0x121EA4,
0x121EC9,
0x121EB9,
0x121EB6,
0x121ED8,
0x122478,
0x122479,
0x122477,
0x12247A,
0x121EA2,
0x121F24,
0x121EBF,
0x121EC4,
0x121EAC,
0x121ED0,
0x121EC1,
0x121ED1,
0x121EC8,
0x121EA9,
0x121EC7,
0x121ED9,
0x1223C9,
0x121EC6,
0x121EC2,
0x121F82,
0x121EAB,
0x121ED4,
0x121EAF,
0x121EB7,
0x121EBE,
0x121EA3,
0x121EB5,
0x121ECD,
0x121ECA,
0x121FAC,
0x121EBA,
0x121EB4,
0x121EBC,
0x121ECB,
0x121ED7,]

WC2=[0x1226CB,
0x1225D8,
0x12281E,
0x121F5A,
0x122436,
0x122724,
0x1224BD,
0x12257B,
0x1226C9,
0x122518,
0x1226BA,
0x121F94,
0x12257C,
0x12274F,
0x1226B5,
0x1226B8,
0x1226B9,
0x1226B7,
0x121F01,
0x121F73,
0x122750,
0x122259,
0x121F5F,
0x121F44,
0x121F5B,
0x121F0C,
0x121F58,
0x121EF7,
0x121F72,
0x12257E,
0x121FBA,
0x121F0B,
0x122101,
0x121F5E,
0x12257F,
0x121EF8,
0x121F0F,
0x121F61,
0x121F5C,
0x121F0D,
0x121F5D,
0x121F68,
0x122257,
0x121EF4,
0x121F4A,
0x121EFD,
0x121F4B,
0x121F3A,
0x121EF6,
0x121F47,
0x12257D,
0x121F0A,
0x121F0E,
0x121F63,
0x1226BB,
0x121F09,
0x12225A,
0x1220B8,
0x121F08,
0x121EFC,
0x121F3C,
0x122258,
0x121F59,
0x121EF5,]

WC3=[0x122484,
0x121FED,
0x12246F,
0x122482,
0x121F07,
0x122197,
0x122198,
0x122531,
0x121FB4,
0x1226A3,
0x1225BD,
0x1225BF,
0x1225BC,
0x1225B0,
0x122694,
0x122728,
0x12247D,
0x122398,
0x1226BD,
0x122187,
0x12264D,
0x1223C4,
0x121F95,
0x121F8A,
0x121F7F,
0x121F8B,
0x1220EF,
0x121FA0,
0x121F02,
0x12256B,
0x1225AF,
0x1225BE,
0x121F6F,
0x121F71,
0x121F67,
0x121F70,
0x121F66,
0x121FE6,
0x121FB1,
0x121F48,
0x121F81,
0x121F7B,
0x121F6E,
0x122065,
0x121F03,
0x121EE1,
0x121FA9,
0x121FB8,
0x121FE9,
0x121FE7,
0x122063,
0x121F76,
0x121F4D,
0x121FB2,
0x122010,
0x121F7E,
0x121FE2,
0x121F05,
0x121F87,
0x121FA2,
0x121FE8,
0x121F4C,
0x121EE0,
0x121F49,]

WC4=[0x1220EB,
0x122816,
0x122362,
0x1223FE,
0x1227AF,
0x12247B,
0x1222D7,
0x1222FD,
0x1226CC,
0x1226CD,
0x122328,
0x122053,
0x1225AD,
0x1225B2,
0x12232C,
0x1225B3,
0x1225AE,
0x12256A,
0x12235B,
0x122360,
0x12204D,
0x1226CA,
0x12272F,
0x12204E,
0x121F80,
0x122108,
0x1220DC,
0x122081,
0x121F92,
0x122075,
0x1222D5,
0x122301,
0x1220DD,
0x121ED2,
0x122046,
0x12206F,
0x1220D9,
0x122060,
0x122076,
0x122082,
0x121FA1,
0x121F06,
0x1222FF,
0x1220D1,
0x1220DB,
0x122088,
0x122087,
0x122122,
0x122073,
0x12207E,
0x122056,
0x122072,
0x12206E,
0x12206C,
0x1220E8,
0x1220E5,
0x121EC3,
0x122055,
0x12205B,
0x122070,
0x12204F,
0x12204C,
0x12205A,
0x1222D8,]

WC5=[0x12275C,
0x1220D7,
0x122751,
0x12290C,
0x12269F,
0x122722,
0x1222FC,
0x1225D3,
0x12240E,
0x1225D4,
0x1224EE,
0x1224ED,
0x1224EC,
0x12272E,
0x122201,
0x1228B1,
0x12275D,
0x1222A8,
0x1220DE,
0x122581,
0x122580,
0x12275E,
0x122123,
0x121FCE,
0x121FEA,
0x121FC2,
0x121FC8,
0x121FCC,
0x1221D4,
0x121FF6,
0x121FFE,
0x1220F4,
0x121FC5,
0x121FDE,
0x122145,
0x122159,
0x12218F,
0x121E8E,
0x121FC7,
0x122020,
0x121FC9,
0x12218E,
0x121E89,
0x121E8B,
0x121E8D,
0x121FDD,
0x121FEB,
0x122300,
0x121E90,
0x122157,
0x121FC3,
0x122194,
0x121FC0,
0x12213C,
0x122008,
0x121FEC,
0x1221CD,
0x12218B,
0x121FF2,
0x121FCA,
0x122434,
0x122435,
0x121FC1,
0x122109,]

WC6=[0x1225B1,
0x1226A2,
0x122817,
0x122050,
0x1226A1,
0x12281B,
0x122573,
0x1226A5,
0x1226C5,
0x1226A7,
0x1228B0,
0x1224B8,
0x1224B9,
0x1224BA,
0x1224BB,
0x122519,
0x12217E,
0x12280C,
0x12222F,
0x1226AC,
0x1226AB,
0x1224B1,
0x122027,
0x122022,
0x121E5D,
0x121E94,
0x121E9E,
0x121E97,
0x121EEB,
0x121EA1,
0x122021,
0x122544,
0x122472,
0x122546,
0x122476,
0x121EEE,
0x121EE9,
0x121E9A,
0x122471,
0x122498,
0x121E5C,
0x12203A,
0x121E63,
0x121E6D,
0x121E61,
0x12202F,
0x121E98,
0x121EE7,
0x121EEF,
0x12203B,
0x12247E,
0x121E5F,
0x122545,
0x121EE2,
0x122045,
0x121EEC,
0x12247F,
0x12202C,
0x121E66,
0x122497,
0x121E50,
0x121EE4,
0x121E9D,
0x121E60,]

WC7=[0x12292E,
0x122136,
0x122727,
0x1228B4,
0x1226B3,
0x1225D7,
0x1226B4,
0x1226A8,
0x1226C6,
0x1226A0,
0x1225FD,
0x1226C8,
0x1226A6,
0x12256C,
0x1226A9,
0x1228B3,
0x1227AE,
0x1226BE,
0x1226BF,
0x1226A4,
0x1225FC,
0x122909,
0x121F1E,
0x1220FD,
0x121F2B,
0x1226AA,
0x121F21,
0x1226C0,
0x1226C1,
0x1226C3,
0x1226C4,
0x122579,
0x121F37,
0x122574,
0x121F32,
0x121EDC,
0x121EDF,
0x12257A,
0x121F2A,
0x121F1F,
0x121F1B,
0x1226C2,
0x1226BC,
0x122575,
0x121F38,
0x122572,
0x121EDA,
0x121F1D,
0x122025,
0x121F12,
0x121E4C,
0x122024,
0x121EDD,
0x121EDB,
0x122578,
0x121E6E,
0x122577,
0x121E49,
0x121F35,
0x121F13,
0x121E4F,
0x121E4E,
0x122023,
0x121F11,]

WC8=[0x1228B7,
0x1228BA,
0x1222DA,
0x12290D,
0x1228B5,
0x12290A,
0x12281D,
0x1228B2,
0x1228B6,
0x1228BB,
0x122725,
0x122723,
0x12283D,
0x12292C,
0x12292D,
0x122726,
0x1225D6,
0x122890,
0x1223CE,
0x12281C,
0x1225D5,
0x12283E,
0x121FD1,
0x121E74,
0x121E73,
0x121F54,
0x121F56,
0x121FD5,
0x121FD0,
0x121F6C,
0x1223CD,
0x121F6B,
0x121E92,
0x1222D9,
0x121F53,
0x121F55,
0x121E88,
0x121E86,
0x121E79,
0x1228B8,
0x121E78,
0x121E7E,
0x121E70,
0x121FF4,
0x121E76,
0x1220A5,
0x121E77,
0x122113,
0x1228B9,
0x1223CB,
0x1223CC,
0x1223CA,
0x121F6D,
0x122178,
0x121F65,
0x121F69,
0x121F57,
0x121E71,
0x121F6A,
0x121F14,
0x122135,
0x121FCF,
0x121E7F,]

structureCards=[
    0x12256D,
0x122729,
0x121FB6,
0x121F52,
0x122473,
0x1225FF,
0x12292F,
0x1224B3,
0x122648,
0x122437,
0x1223FC,
0x1227CD,
0x12209E,
0x1225B4,
0x1223FD,
0x1223C7,
0x122848,
0x1224E9,
0x12206D,
0x1223C8,
0x12256E,
0x1227CF,
0x122483,
0x12264B,
0x122931,
0x12272A,
0x122930,
0x122439,
0x122606,
0x1227CE,
0x12235C,
0x122600,
0x122256,
0x122231,
0x122849,
0x12284A,
0x122601,
0x12235E,
0x12272B,
0x122132,
0x122369,
0x12252D,
0x12264C,
0x121FCD,
0x1223C3,
0x121F60,
0x12235F,
0x121F1C,
0x12253B,
0x12256F,
0x1224B5,
0x121EB8,
0x121F9F,
0x1220DA,
0x1225BA,
0x1224B4,
0x121F85,
0x122367,
0x122368,
0x1225B5,
0x122602,
0x122474,
0x12209A,
0x1225B9,
0x122329,
0x122366,
0x1224EA,
0x122107,
0x12240D,
0x121FEE,
0x122438,
0x1225BB,
0x12253D,
0x12253E,
0x12253C,
0x122570,
0x122051,
0x122481,
0x1223C5,
0x12272D,
0x1220A1,
0x12272C,
0x122649,
0x122167,
0x1227C7,
0x1225B7,
0x122188,
0x1225B6,
0x12264A,
0x12252E,
0x1224EB,
0x12284C,
0x1227C4,
0x122533,
0x121FDB,
0x1220BD,
0x122475,
0x122932,
0x1227C6,
0x122191,
0x122501,
0x121FB0,
0x1227CC,
0x122480,
0x1225B8,
0x1223C6,
0x122603,
0x122604,
0x1227CB,
0x122052,
0x122535,
0x1227C3,
0x122255,
0x1227C5,
0x122933,
0x12235D,
0x12252F,
0x122605,
0x1227C9,
0x1227C8,
0x1227CA,
0x122532,
0x1227C1,
0x122534,
0x1227C2,
0x12284B,
]

Packs={1:{"title":"Shadows Unveiled","points":5, "packName":"-Dark Beginning 1-", "packID":darkBeginning1},
2:{"title":"Eclipsed Horizons","points":5, "packName":"-Dark Beginning 2-", "packID":darkBeginning2},
3:{"title":"Cryptic Insights","points":5, "packName":"-Dark Revelations Volume 1-", "packID":darkRevelations1},
4:{"title":"Mysteries Revealed","points":5, "packName":"-Dark Revelations Volume 2-", "packID":darkRevelations2},
5:{"title":"Essence Convergence","points":5, "packName":"-Soul of the Duelist-", "packID":soulOfTheDuelist},
6:{"title":"Fateful Ascent","points":5, "packName":"-Rise of Destiny-", "packID":riseOfDestiny},
7:{"title":"Inferno Illumination","points":5, "packName":"-Flaming Eternity-", "packID":flamingEternity},
8:{"title":"Forgotten Realms","points":10, "packName":"-The Lost Millennium-", "packID":theLostMillennium},
9:{"title":"Mechanical Evolution","points":5, "packName":"-Cybernetic Revolution-", "packID":cyberneticRevolution},
10:{"title":"Nature's Resonance","points":5, "packName":"-Elemental Energy-", "packID":elementalEnergy},
11:{"title":"Eternal Shadows","points":5, "packName":"-Shadow of Infinity-", "packID":shadowOfInfinity},
12:{"title":"Heroic Opposition","points":10, "packName":"-Enemy of Justice-", "packID":enemyOfJustice},
13:{"title":"Duelist's Ascendance","points":5, "packName":"-Power of the Duelist-", "packID":powerOfTheDuelist},
14:{"title":"Techno Turmoil","points":5, "packName":"-Cyberdark Impact-", "packID":cyberdarkImpact},
15:{"title":"Aqua Surge","points":5, "packName":"-Strike of Neos-", "packID":strikeOfNeos},
16:{"title":"Elemental Fury","points":10, "packName":"-Force of the Breaker-", "packID":forceOfTheBreaker},
17:{"title":"Strategic Evolution","points":5, "packName":"-Tactical Evolution-", "packID":tacticalEvolution},
18:{"title":"Arena Annihilation","points":10, "packName":"-Gladiator's Assault-", "packID":gladiatorAssault},
19:{"title":"Ephemeral Shadows","points":5, "packName":"-Phantom Darkness-", "packID":phantomDarkness},
20:{"title":"Luminous Cataclysm","points":5, "packName":"-Light of Destruction-", "packID":lightOfDestruction},
21:{"title":"Genesis Unleashed","points":5, "packName":"-The Duelist Genesis-", "packID":theDuelistGenesis},
22:{"title":"Chaos Convergence","points":10, "packName":"-Crossroads of Chaos-", "packID":crossroadOfChaos},
23:{"title":"Scarlet Turmoil","points":5, "packName":"-Crimson Crisis-", "packID":crimsonCrisis},
24:{"title":"Synchronic Awakening","points":10, "packName":"-Synchro Awaken!!-", "packID":synchroAwaken},
25:{"title":"Wriggling Onslaught","points":5, "packName":"-Invasion of Worms!!-", "packID":invasionOfWorms},
26:{"title":"Judicial Retaliation","points":5, "packName":"-Justice Strikes Back!!-", "packID":justiceStrikesBack},
27:{"title":"Fiendish Resurgence","points":10, "packName":"-Fiend Roar Deity Revival!!-", "packID":fiendRoarDeityRevival},
28:{"title":"Supplementary Arsenal","points":10, "packName":"-Extra Pack-", "packID":extraPack},
29:{"title":"Global Showdown Series 1","points":10, "packName":"-World Championship Edition 1-", "packID":WC1},
30:{"title":"Global Showdown Series 2","points":10, "packName":"-World Championship Edition 2-", "packID":WC2},
31:{"title":"Global Showdown Series 3","points":10, "packName":"-World Championship Edition 3-", "packID":WC3},
32:{"title":"Global Showdown Series 4","points":10, "packName":"-World Championship Edition 4-", "packID":WC4},
33:{"title":"Global Showdown Series 5","points":10, "packName":"-World Championship Edition 5-", "packID":WC5},
34:{"title":"Global Showdown Series 6","points":10, "packName":"-World Championship Edition 6-", "packID":WC6},
35:{"title":"Global Showdown Series 7","points":25, "packName":"-World Championship Edition 7-", "packID":WC7},
36:{"title":"Global Showdown Series 8","points":25, "packName":"-World Championship Edition 8-", "packID":WC8},
37:{"title":"Structure Completion","points":10, "packName":"contained in structure decks", "packID":structureCards},
}




function PackCheck(array){
    sum = 0
    for card in array{
        sum = sum + bit0(card)
    }
    return measured(sum == length(array)) && prev(sum) < length(array)
}

function PackCheckTest(array){
    sum = 0
    for card in array{
        sum = sum + bit0(card)
    }
    return measured(sum == length(array))
}

for pack in Packs{
    achievement(
        title = Packs[pack]["title"],
        description = "Collect all cards in the " + Packs[pack]["packName"] + " booster pack",
        points = Packs[pack]["points"],
        trigger = 
        SaveProtection() &&
        PackCheck(Packs[pack]["packID"])
    )
}
notIncluded=[]

cardsStart =0x121e45
cardsEnd=0x122933

for cardRange in range(cardsStart,cardsEnd){
    isInPack=false
    for pack in Packs{   
        for cardPack in Packs[pack]["packID"]{
            if(cardRange==cardPack){
                isInPack=true
            }
        }
    }
    if(isInPack==true){
        array_push(notIncluded, cardRange)
    }
}

achievement(
    "Not Included",
    "test",
    0,
    PackCheckTest(notIncluded)
)


speedStart = 0x121dbf
speedEnd=0x121e14
speedCards=[]
for card in range(speedStart,speedEnd){
    array_push(speedCards, card)
}


achievement(
    "Speed Surge",
    "Collect all cards in the -Acceleration Pack- booster pack",
    10,
    SaveProtection() && PackCheck(speedCards)
)