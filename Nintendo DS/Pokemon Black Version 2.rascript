// Pokemon Black Version 2
// #ID = 5853

mapID = word(0x0023b444)
musicID = word(0x00243ae0)
inGame = word(0x00000034) == 1 && prev(word(0x00000034)) == 1

completedLeague = bit0(0x0022596e)

music_VictoryTrainer = 0x047D
music_badgeObtained = 0x051A
music_battleGymLeaderUnova = 0x046C
music_victoryGymLeader = 0x047E
music_battleHugh = 0x4ee
music_hallOfFame = 0x3f7
music_lowHealth = 0x047a

map_AspertiaCity = 0x01AB
map_champion = 0x0090
map_hallfOfFame = 0x0091

battlePointer = tbyte(0x001dd880)
slotOnePointer = tbyte(battlePointer + 0xec)
idone = word(slotOnePointer + 0x0c)
activeTurnsOne = word(slotOnePointer + 0x146)
levelOne = byte(slotOnePointer + 0x18)

setMode = bit6(0x0021e9e4)
totalPokemon = byte(0x0021e3e8)

battleData = tbyte(0x002572a4)
currentItemID = word(battleData + 0xDE)
currentBattleMenu = byte(battleData + 0xC4)
bag = 0x02


function winBattleRival(){
return
    inGame && mapID == map_AspertiaCity &&
    prev(musicID) == music_battleHugh && musicID == music_VictoryTrainer
}



achievement(
    "A Friend You Can Count On",
    "Defeat your rival at the start of the adventure",
    1,
    winBattleRival(),
    type = "missable"
)

badges = 0x002266e8

gymLeaders = {
    1:{"title":"The One Who Seeks the Right Path","description":"Earn the Basic Badge in Aspertia City", "points":5, "mapID":0x01e9, "trainerID":0,"type":"Progression"},
2:{"title":"Poison Days, Poison on the Stage!","description":"Earn the Toxic Badge in Virbank City", "points":5, "mapID":0x01f6, "trainerID":1,"type":"Progression"},
3:{"title":"Premier Insect Artist","description":"Earn the Insect Badge in Castelia City", "points":5, "mapID":0x01e8, "trainerID":2,"type":"Progression"},
4:{"title":"The Shining Beauty","description":"Earn the Bolt Badge in Nimbasa City", "points":5, "mapID":0x003f, "trainerID":3,"type":"Progression"},
5:{"title":"The Underground Boss","description":"Earn the Quake Badge in Driftveil City", "points":5, "mapID":0x0061, "trainerID":4,"type":"Progression"},
6:{"title":"The Highflying Girl","description":"Earn the Jet Badge in Mistralton City", "points":5, "mapID":0x006c, "trainerID":5,"type":"Progression"},
7:{"title":"The Spartan Mayor","description":"Earn the Legend Badge in Opelucid City", "points":5, "mapID":0x0079, "trainerID":6,"type":"Progression"},
8:{"title":"A Bigger Splash Than the Sea!","description":"Earn the Wave Badge in Humilau City", "points":5, "mapID":0x01d9, "trainerID":7,"type":"Progression"},
}

function winBadge(map, badge){
    return inGame && mapID == map && bit(badge, badges) > prev(bit(badge,badges))
}

for cheevo in gymLeaders{
achievement(
    title = gymLeaders[cheevo]["title"],
    description = gymLeaders[cheevo]["description"],
    points = gymLeaders[cheevo]["points"],
    trigger = winBadge(gymLeaders[cheevo]["mapID"], gymLeaders[cheevo]["trainerID"]),
    type = gymLeaders[cheevo]["type"]
    )
}
achievement(
    "The Girl Who Knows the Hearts of Dragons",
    "Defeat Iris and become the Pokémon League Champion",
    10,
    trigger = inGame && mapID == map_hallfOfFame && musicID == music_hallOfFame && prev(musicID) != music_hallOfFame && completedLeague == 0,
    type = "win_condition"
)

function gymChallenge(map, levelCap, pokemonQuantity){
    return 
    //Protections
    inGame &&
    battlePointer != 0 &&
    slotOnePointer != 0 &&
    battlePointer == prev(battlePointer) &&
    slotOnePointer == prev(slotOnePointer) &&
    //Base conditions
    mapID == map && 
    setMode == 1 &&
    //Resets
    never(battlePointer == 0 && prev(battlePointer) != 0) &&
    never(mapID != map)  &&
    never(setMode == 0) &&
    never(currentBattleMenu == bag && currentItemID != 0 && prev(currentItemID)== 0) &&
    never(tally(2,activeTurnsOne > prev(activeTurnsOne) && levelOne > levelCap)) &&
    never(totalPokemon > pokemonQuantity) &&
    //Starting Hit, need to double check if low health music breaks this
    once(musicID == music_battleGymLeaderUnova && prev(musicID) != music_battleGymLeaderUnova && prev(musicID) != music_lowHealth && prev(musicID) != 0x0515) &&
    //Win con
    trigger_when(musicID == music_victoryGymLeader && prev(musicID) != music_victoryGymLeader)
}

function eliteChallenge(levelCap, completed){
        return 
    //Protections
    inGame &&
    battlePointer == prev(battlePointer) &&
    //Base conditions
    setMode == 1 &&
    //Resets
    never(mapID < 0x89) &&
    never(mapID > 0x91) &&
    never(setMode == 0) &&
    never(battlePointer != 0 && currentBattleMenu == bag && currentItemID != 0 && prev(currentItemID)== 0) &&
    never(battlePointer != 0 &&  activeTurnsOne > prev(activeTurnsOne) && levelOne > levelCap) &&
    //Starting Hit, need to double check if low health music breaks this
    once(mapID == 0x89 && prev(mapID) == 0x88) &&
    //Win con
    trigger_when(mapID == map_hallfOfFame && musicID == music_hallOfFame && prev(musicID) != music_hallOfFame) && completedLeague == completed
    

}

function unovaOnly(){
    return
        inGame &&
    battlePointer == prev(battlePointer) &&
    //Base conditions
    setMode == 1 &&
    //Resets
    never(mapID < 0x89) &&
    never(mapID > 0x91) &&
    never(battlePointer != 0 && activeTurnsOne > prev(activeTurnsOne) && idone != 0 && (idone < 495 || idone > 637)) &&
    //never(setMode == 0) &&
    //never(battlePointer != 0 && currentBattleMenu == bag && currentItemID != 0 && prev(currentItemID)== 0) &&
    //Starting Hit, need to double check if low health music breaks this
    once(mapID == 0x89 && prev(mapID) == 0x88) &&
    //Win con
    trigger_when(mapID == map_hallfOfFame && musicID == music_hallOfFame && prev(musicID) != music_hallOfFame) && completedLeague == 1
    
}

achievement(
    "Faithful to your Homeland",
    "Defeat the whole Pokémon League in a rematch using a team of only non-legendary and non-mythical Unova Pokemon in one session",
    10,
    unovaOnly()


    
)

gymChallenges = {
  1:{"title":"The Student Has Become the Master","description":"Defeat Cheren in the Aspertia City Gym with set mode, without using items in battle, and only using a team of maximum 2 Pokémon at level 13 or less", "points":10, "mapID":0x01e9, "levelCap":13, "teamSize":2,"type":"Missable"},
2:{"title":"Knocked Some Sense Into Her","description":"Defeat Roxie in the Virbank City Gym with set mode, without using items in battle, and only using a team of maximum 2 Pokémon at level 18 or less", "points":10, "mapID":0x01f6, "levelCap":18, "teamSize":2,"type":"Missable"},
3:{"title":"Bug Squashed","description":"Defeat Burgh in the Castelia City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 24 or less", "points":10, "mapID":0x01e8, "levelCap":24, "teamSize":3,"type":"Missable"},
4:{"title":"Shocked Her Through and Through!","description":"Defeat Elesa in the Nimbasa City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 30 or less", "points":10, "mapID":0x003f, "levelCap":30, "teamSize":3,"type":"Missable"},
5:{"title":"You're Really Somethin'! Li'l Whippersnapper","description":"Defeat Clay in the Driftveil City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 33 or less", "points":10, "mapID":0x0061, "levelCap":33, "teamSize":3,"type":"Missable"},
6:{"title":"Sky's the Limit","description":"Defeat Skyla in the Mistralton City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 39 or less", "points":10, "mapID":0x006c, "levelCap":39, "teamSize":3,"type":"Missable"},
7:{"title":"Bright Future","description":"Defeat Drayden in the Opelucid City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 48 or less", "points":10, "mapID":0x0079, "levelCap":48, "teamSize":3,"type":"Missable"},
8:{"title":"Swept Him Away","description":"Defeat Marlon in the Humilau City Gym with set mode, without using items in battle, and only using a team of maximum 3 Pokémon at level 51 or less", "points":10, "mapID":0x01d9, "levelCap":51, "teamSize":3,"type":"Missable"},
}

for cheevo in gymLeaders{
    achievement(
        title = gymChallenges[cheevo]["title"],
        description = gymChallenges[cheevo]["description"],
        points = gymChallenges[cheevo]["points"],
        trigger = gymChallenge(gymChallenges[cheevo]["mapID"], gymChallenges[cheevo]["levelCap"], gymChallenges[cheevo]["teamSize"]),
        type = gymChallenges[cheevo]["type"]
    )
}

achievement(
    "We're Going to Keep Aiming Higher!",
    "Defeat the whole Pokémon League with set mode, without using items in battle, and only using a team of Pokémon at level 59 or less, in one session",
    25,
    eliteChallenge(59, 0),
    type = "Missable"
)

achievement(
    "Battling Is All About Having Fun!",
    "Defeat the Pokémon League in a rematch",
    10,
    trigger = inGame && mapID == map_hallfOfFame && musicID == music_hallOfFame && prev(musicID) != music_hallOfFame && completedLeague == 1
    
)


achievement(
    "Battle of the Century",
    "Defeat the whole Pokémon League in a rematch with set mode, without using items in battle, and only using a team of Pokémon at level 78 or less, in one session",
    25,
    eliteChallenge(78, 1)
)

test = [bit5(0x00226a3b), bit6(0x00226a3b), bit7(0x00226a3b)]

legendaries = {
1:{"title":"Sword of Justice","description":"Catch Cobalion, Virizion and Terrakion", "points":5, "pokemon":[bit5(0x00226a3b), bit6(0x00226a3b), bit7(0x00226a3b)], "mapid":0x0},
2:{"title":"Embodiment of Lightning","description":"Catch Zekrom", "points":5, "pokemon":[bit3(0x00226a3c)], "mapid":0x00d5},
3:{"title":"Cold Boundaries","description":"Catch Kyurem", "points":5, "pokemon":[bit5(0x00226a3c)], "mapid":0x025c},
4:{"title":"Soul Dew","description":"Catch Latios", "points":5, "pokemon":[bit4(0x00226a1b)], "mapid":0x0098},
5:{"title":"Lake Guardians","description":"Catch Uxie, Mesprit and Azelf", "points":5, "pokemon":[bit7(0x00226a27), bit0(0x00226a28), bit1(0x00226a28)], "mapid":0x4},
6:{"title":"Legendary Giants","description":"Catch Regirock and Registeel", "points":5, "pokemon":[bit0(0x00226a1b), bit2(0x00226a1b)], "mapid":0x5},
7:{"title":"Selene Crescent","description":"Catch Cresselia", "points":5, "pokemon":[bit7(0x00226a28)], "mapid":0x000107},
8:{"title":"Lava Dome","description":"Catch Heatran", "points":5, "pokemon":[bit4(0x00226a28)], "mapid":0x0216},
9:{"title":"Slither Wing","description":"Catch Volcarona in Relic Castle", "points":2, "pokemon":[bit3(0x00225874)], "mapid":0x00b6},

}

function legendaryCatch(flags, map){
    if(length(flags) == 1){
        return
        inGame && flags[0] > prev(flags[0]) && mapID == map
    }else{
        sum = 0
        length = length(flags)-1
        for flag in range(0, length){
            sum = sum + flags[flag]
            
        }
        return inGame && measured(sum == length(flags)) && prev(sum) == length(flags) - 1
    }
}
//Need to check the map ids 
for cheevo in legendaries{
    achievement(
        legendaries[cheevo]["title"],
        legendaries[cheevo]["description"],
        legendaries[cheevo]["points"],
        legendaryCatch( legendaries[cheevo]["pokemon"], legendaries[cheevo]["mapid"])
    )
}

flag = {
1:{"title":"N's Friend","description":"Receive N's Zorua from Rood in Driftveil City", "points":2, "flag":bit1(0x00225866), "mapid":[0x0068]},
2:{"title":"Story of Seasons","description":"Receive a Deerling in Route 6's Weather Institute", "points":2, "flag":bit2(0x00225877), "mapid":[0x014c]},
3:{"title":"Adapt, Overcome","description":"Receive an Eevee from Amanita in Castelia City", "points":2, "flag":bit2(0x00225873), "mapid":[0x01ee]},
4:{"title":"Happy and Round","description":"Receive a Happiny egg in Nacrene City east gate", "points":2, "flag":bit5(0x00225878), "mapid":[0x001b]},
5:{"title":"Shining Dragon","description":"Receive the shiny Gible after defeating Benga at Black Tower", "points":2, "flag":bit5(0x00225879), "mapid":[0x0013, 0011]},
6:{"title":"Ancient Restoration","description":"Receive a Plume or Cover Fossil in the Nacrene Museum at Nacrene City", "points":2, "flag":bit5(0x00225879), "mapid":[0x0013, 0x0011]},
7:{"title":"Scammed...","description":"Receive a Magikarp in the Marvelous Bridge", "points":2, "flag":bit2(0x00225861), "mapid":[0x0107]},
8:{"title":"Peculiar Petulia","description":"Trade a Cottonee for a Petilil at Route 4", "points":3, "flag":bit4(0x00225875), "mapid":[0x0208]},
9:{"title":"Compressed Rock","description":"Trade an Emolga for a Gigalith at Route 7", "points":3, "flag":bit0(0x00225862), "mapid":[0x0157]},
10:{"title":"Slick Tangles","description":"Trade a Mantine for a Tangrowth at Humilau City", "points":3, "flag":bit5(0x00225874), "mapid":[0x01d3]},
11:{"title":"Multifunctional Bucky","description":"Trade a Ditto for a Rotom at Route 15", "points":3, "flag":bit3(0x00225862), "mapid":[0x017e]},
12:{"title":"Nasty Ambidexter","description":"Trade an Excadrill for an Ambipom in Accumula Town ", "points":3, "flag":bit7(0x00225877), "mapid":[0x018f]},
13:{"title":"Beardy Psychic","description":"Trade a Hippowdown for an Alakazam in Accumula Town", "points":3, "flag":bit0(0x00225878), "mapid":[0x018f]},
14:{"title":"Inexhaustible Fighting Spirit","description":"Defeat Alder in Floccesy Town", "points":10, "flag":bit4(0x00225877), "mapid":[0x01b8]},
15:{"title":"The Meaning of Strength","description":"Defeat your rival in Driftveil City", "points":10, "flag":bit3(0x0022599d), "mapid":[0x0068]},
16:{"title":"True Potential","description":"Defeat Colress in the Plasma Frigate after becoming a champion", "points":10, "flag":bit1(0x0022599f), "mapid":[0x022b]},
}

function simpleFlag(flag, map){
logic = always_false()
for maps in map{
    logic = logic || mapID == maps
}
    
    return inGame && logic && flag > prev(flag)
}

for cheevo in flag{
    achievement(
        title=flag[cheevo]["title"],
        description = flag[cheevo]["description"],
        points = flag[cheevo]["points"],
        trigger = simpleFlag(flag[cheevo]["flag"], flag[cheevo]["mapid"])
    )
}

StartPokedex=0x2269ec
function PokemonBit(pokemonID){
    logic = always_true()
    StartTemp = StartPokedex
    PokemonAddress = 0
    Count = 0 
    AddOne = 0
    for number in range(0, pokemonID-1){            
        if(number == pokemonID-1){
            if((Count) == 0){
                PokemonAddress =  bit0(StartTemp)
            }
            if((Count) == 1){
                PokemonAddress =  bit1(StartTemp)
            }
            if((Count) == 2){
                PokemonAddress =  bit2(StartTemp)
            }
            if((Count) == 3){
               PokemonAddress =  bit3(StartTemp)
            }
            if((Count) == 4){
               PokemonAddress =  bit4(StartTemp)
            }
            if((Count) == 5){
               PokemonAddress =  bit5(StartTemp)
            }
            if((Count) == 6){
               PokemonAddress =  bit6(StartTemp)
            }
            if((Count) == 7){
               PokemonAddress =  bit7(StartTemp)
            }
         }
         Count = Count + 1
         if(Count == 8){
            Count = 0
            StartTemp = StartTemp + 0x01
         }

    }
    return 
    PokemonAddress 
}

function CatchedPokemon(startOffset, start, finish){
    logic = always_true()
    StartTemp = startOffset
    PokemonAddress = 0
    Count = 0 
    count = 0
    AddBitFlags = 1
    BitFlags = []
    for number in range(1, 1025){            
        if(number >= start && number < finish  ){
            if(finish - number > 8 && Count == 0){
                array_push(BitFlags, bitcount(StartTemp))
                AddBitFlags = 0
            }else if(AddBitFlags == 1 ){
                      
                if((Count) == 0){
                    array_push(BitFlags, bit0(StartTemp))
                }
                if((Count) == 1){
                    array_push(BitFlags, bit1(StartTemp))
                }
                if((Count) == 2){
                   array_push(BitFlags, bit2(StartTemp))
                }
                if((Count) == 3){
                  array_push(BitFlags, bit3(StartTemp))
                }
                if((Count) == 4){
                   array_push(BitFlags, bit4(StartTemp))
                }
                if((Count) == 5){
                   array_push(BitFlags, bit5(StartTemp))
                }
                if((Count) == 6){
                   array_push(BitFlags, bit6(StartTemp))
                }
                if((Count) == 7){
                   array_push(BitFlags, bit7(StartTemp))
                }
                
            }
         }
         Count = Count + 1
         if(Count == 8){
            Count = 0
            StartTemp = StartTemp + 0x01
            AddBitFlags = 1
         }
         count = count + 1
    }
    return 
    measured(sum_of(BitFlags, f => f) == finish-start) && sum_of(BitFlags, f => prev(f)) == finish-start-1 
}


pokedex = {
"Bulbasaur":1,
"Ivysaur":2,
"Venusaur":3,
"Charmander":4,
"Charmeleon":5,
"Charizard":6,
"Squirtle":7,
"Wartortle":8,
"Blastoise":9,
"Caterpie":10,
"Metapod":11,
"Butterfree":12,
"Weedle":13,
"Kakuna":14,
"Beedrill":15,
"Pidgey":16,
"Pidgeotto":17,
"Pidgeot":18,
"Rattata":19,
"Raticate":20,
"Spearow":21,
"Fearow":22,
"Ekans":23,
"Arbok":24,
"Pikachu":25,
"Raichu":26,
"Sandshrew":27,
"Sandslash":28,
"Nidoran♀":29,
"Nidorina":30,
"Nidoqueen":31,
"Nidoran♂":32,
"Nidorino":33,
"Nidoking":34,
"Clefairy":35,
"Clefable":36,
"Vulpix":37,
"Ninetales":38,
"Jigglypuff":39,
"Wigglytuff":40,
"Zubat":41,
"Golbat":42,
"Oddish":43,
"Gloom":44,
"Vileplume":45,
"Paras":46,
"Parasect":47,
"Venonat":48,
"Venomoth":49,
"Diglett":50,
"Dugtrio":51,
"Meowth":52,
"Persian":53,
"Psyduck":54,
"Golduck":55,
"Mankey":56,
"Primeape":57,
"Growlithe":58,
"Arcanine":59,
"Poliwag":60,
"Poliwhirl":61,
"Poliwrath":62,
"Abra":63,
"Kadabra":64,
"Alakazam":65,
"Machop":66,
"Machoke":67,
"Machamp":68,
"Bellsprout":69,
"Weepinbell":70,
"Victreebel":71,
"Tentacool":72,
"Tentacruel":73,
"Geodude":74,
"Graveler":75,
"Golem":76,
"Ponyta":77,
"Rapidash":78,
"Slowpoke":79,
"Slowbro":80,
"Magnemite":81,
"Magneton":82,
"Farfetch'd":83,
"Doduo":84,
"Dodrio":85,
"Seel":86,
"Dewgong":87,
"Grimer":88,
"Muk":89,
"Shellder":90,
"Cloyster":91,
"Gastly":92,
"Haunter":93,
"Gengar":94,
"Onix":95,
"Drowzee":96,
"Hypno":97,
"Krabby":98,
"Kingler":99,
"Voltorb":100,
"Electrode":101,
"Exeggcute":102,
"Exeggutor":103,
"Cubone":104,
"Marowak":105,
"Hitmonlee":106,
"Hitmonchan":107,
"Lickitung":108,
"Koffing":109,
"Weezing":110,
"Rhyhorn":111,
"Rhydon":112,
"Chansey":113,
"Tangela":114,
"Kangaskhan":115,
"Horsea":116,
"Seadra":117,
"Goldeen":118,
"Seaking":119,
"Staryu":120,
"Starmie":121,
"Mr. Mime":122,
"Scyther":123,
"Jynx":124,
"Electabuzz":125,
"Magmar":126,
"Pinsir":127,
"Tauros":128,
"Magikarp":129,
"Gyarados":130,
"Lapras":131,
"Ditto":132,
"Eevee":133,
"Vaporeon":134,
"Jolteon":135,
"Flareon":136,
"Porygon":137,
"Omanyte":138,
"Omastar":139,
"Kabuto":140,
"Kabutops":141,
"Aerodactyl":142,
"Snorlax":143,
"Articuno":144,
"Zapdos":145,
"Moltres":146,
"Dratini":147,
"Dragonair":148,
"Dragonite":149,
"Mewtwo":150,
"Mew":151,
"Chikorita":152,
"Bayleef":153,
"Meganium":154,
"Cyndaquil":155,
"Quilava":156,
"Typhlosion":157,
"Totodile":158,
"Croconaw":159,
"Feraligatr":160,
"Sentret":161,
"Furret":162,
"Hoothoot":163,
"Noctowl":164,
"Ledyba":165,
"Ledian":166,
"Spinarak":167,
"Ariados":168,
"Crobat":169,
"Chinchou":170,
"Lanturn":171,
"Pichu":172,
"Cleffa":173,
"Igglybuff":174,
"Togepi":175,
"Togetic":176,
"Natu":177,
"Xatu":178,
"Mareep":179,
"Flaaffy":180,
"Ampharos":181,
"Bellossom":182,
"Marill":183,
"Azumarill":184,
"Sudowoodo":185,
"Politoed":186,
"Hoppip":187,
"Skiploom":188,
"Jumpluff":189,
"Aipom":190,
"Sunkern":191,
"Sunflora":192,
"Yanma":193,
"Wooper":194,
"Quagsire":195,
"Espeon":196,
"Umbreon":197,
"Murkrow":198,
"Slowking":199,
"Misdreavus":200,
"Unown":201,
"Wobbuffet":202,
"Girafarig":203,
"Pineco":204,
"Forretress":205,
"Dunsparce":206,
"Gligar":207,
"Steelix":208,
"Snubbull":209,
"Granbull":210,
"Qwilfish":211,
"Scizor":212,
"Shuckle":213,
"Heracross":214,
"Sneasel":215,
"Teddiursa":216,
"Ursaring":217,
"Slugma":218,
"Magcargo":219,
"Swinub":220,
"Piloswine":221,
"Corsola":222,
"Remoraid":223,
"Octillery":224,
"Delibird":225,
"Mantine":226,
"Skarmory":227,
"Houndour":228,
"Houndoom":229,
"Kingdra":230,
"Phanpy":231,
"Donphan":232,
"Porygon2":233,
"Stantler":234,
"Smeargle":235,
"Tyrogue":236,
"Hitmontop":237,
"Smoochum":238,
"Elekid":239,
"Magby":240,
"Miltank":241,
"Blissey":242,
"Raikou":243,
"Entei":244,
"Suicune":245,
"Larvitar":246,
"Pupitar":247,
"Tyranitar":248,
"Lugia":249,
"Ho-Oh":250,
"Celebi":251,
"Treecko":252,
"Grovyle":253,
"Sceptile":254,
"Torchic":255,
"Combusken":256,
"Blaziken":257,
"Mudkip":258,
"Marshtomp":259,
"Swampert":260,
"Poochyena":261,
"Mightyena":262,
"Zigzagoon":263,
"Linoone":264,
"Wurmple":265,
"Silcoon":266,
"Beautifly":267,
"Cascoon":268,
"Dustox":269,
"Lotad":270,
"Lombre":271,
"Ludicolo":272,
"Seedot":273,
"Nuzleaf":274,
"Shiftry":275,
"Taillow":276,
"Swellow":277,
"Wingull":278,
"Pelipper":279,
"Ralts":280,
"Kirlia":281,
"Gardevoir":282,
"Surskit":283,
"Masquerain":284,
"Shroomish":285,
"Breloom":286,
"Slakoth":287,
"Vigoroth":288,
"Slaking":289,
"Nincada":290,
"Ninjask":291,
"Shedinja":292,
"Whismur":293,
"Loudred":294,
"Exploud":295,
"Makuhita":296,
"Hariyama":297,
"Azurill":298,
"Nosepass":299,
"Skitty":300,
"Delcatty":301,
"Sableye":302,
"Mawile":303,
"Aron":304,
"Lairon":305,
"Aggron":306,
"Meditite":307,
"Medicham":308,
"Electrike":309,
"Manectric":310,
"Plusle":311,
"Minun":312,
"Volbeat":313,
"Illumise":314,
"Roselia":315,
"Gulpin":316,
"Swalot":317,
"Carvanha":318,
"Sharpedo":319,
"Wailmer":320,
"Wailord":321,
"Numel":322,
"Camerupt":323,
"Torkoal":324,
"Spoink":325,
"Grumpig":326,
"Spinda":327,
"Trapinch":328,
"Vibrava":329,
"Flygon":330,
"Cacnea":331,
"Cacturne":332,
"Swablu":333,
"Altaria":334,
"Zangoose":335,
"Seviper":336,
"Lunatone":337,
"Solrock":338,
"Barboach":339,
"Whiscash":340,
"Corphish":341,
"Crawdaunt":342,
"Baltoy":343,
"Claydol":344,
"Lileep":345,
"Cradily":346,
"Anorith":347,
"Armaldo":348,
"Feebas":349,
"Milotic":350,
"Castform":351,
"Kecleon":352,
"Shuppet":353,
"Banette":354,
"Duskull":355,
"Dusclops":356,
"Tropius":357,
"Chimecho":358,
"Absol":359,
"Wynaut":360,
"Snorunt":361,
"Glalie":362,
"Spheal":363,
"Sealeo":364,
"Walrein":365,
"Clamperl":366,
"Huntail":367,
"Gorebyss":368,
"Relicanth":369,
"Luvdisc":370,
"Bagon":371,
"Shelgon":372,
"Salamence":373,
"Beldum":374,
"Metang":375,
"Metagross":376,
"Regirock":377,
"Regice":378,
"Registeel":379,
"Latias":380,
"Latios":381,
"Kyogre":382,
"Groudon":383,
"Rayquaza":384,
"Jirachi":385,
"Deoxys":386,
"Turtwig":387,
"Grotle":388,
"Torterra":389,
"Chimchar":390,
"Monferno":391,
"Infernape":392,
"Piplup":393,
"Prinplup":394,
"Empoleon":395,
"Starly":396,
"Staravia":397,
"Staraptor":398,
"Bidoof":399,
"Bibarel":400,
"Kricketot":401,
"Kricketune":402,
"Shinx":403,
"Luxio":404,
"Luxray":405,
"Budew":406,
"Roserade":407,
"Cranidos":408,
"Rampardos":409,
"Shieldon":410,
"Bastiodon":411,
"Burmy":412,
"Wormadam":413,
"Mothim":414,
"Combee":415,
"Vespiquen":416,
"Pachirisu":417,
"Buizel":418,
"Floatzel":419,
"Cherubi":420,
"Cherrim":421,
"Shellos":422,
"Gastrodon":423,
"Ambipom":424,
"Drifloon":425,
"Drifblim":426,
"Buneary":427,
"Lopunny":428,
"Mismagius":429,
"Honchkrow":430,
"Glameow":431,
"Purugly":432,
"Chingling":433,
"Stunky":434,
"Skuntank":435,
"Bronzor":436,
"Bronzong":437,
"Bonsly":438,
"Mime Jr.":439,
"Happiny":440,
"Chatot":441,
"Spiritomb":442,
"Gible":443,
"Gabite":444,
"Garchomp":445,
"Munchlax":446,
"Riolu":447,
"Lucario":448,
"Hippopotas":449,
"Hippowdon":450,
"Skorupi":451,
"Drapion":452,
"Croagunk":453,
"Toxicroak":454,
"Carnivine":455,
"Finneon":456,
"Lumineon":457,
"Mantyke":458,
"Snover":459,
"Abomasnow":460,
"Weavile":461,
"Magnezone":462,
"Lickilicky":463,
"Rhyperior":464,
"Tangrowth":465,
"Electivire":466,
"Magmortar":467,
"Togekiss":468,
"Yanmega":469,
"Leafeon":470,
"Glaceon":471,
"Gliscor":472,
"Mamoswine":473,
"Porygon-Z":474,
"Gallade":475,
"Probopass":476,
"Dusknoir":477,
"Froslass":478,
"Rotom":479,
"Uxie":480,
"Mesprit":481,
"Azelf":482,
"Dialga":483,
"Palkia":484,
"Heatran":485,
"Regigigas":486,
"Giratina":487,
"Cresselia":488,
"Phione":489,
"Manaphy":490,
"Darkrai":491,
"Shaymin":492,
"Arceus":493,
"Victini":494,
"Snivy":495,
"Servine":496,
"Serperior":497,
"Tepig":498,
"Pignite":499,
"Emboar":500,
"Oshawott":501,
"Dewott":502,
"Samurott":503,
"Patrat":504,
"Watchog":505,
"Lillipup":506,
"Herdier":507,
"Stoutland":508,
"Purrloin":509,
"Liepard":510,
"Pansage":511,
"Simisage":512,
"Pansear":513,
"Simisear":514,
"Panpour":515,
"Simipour":516,
"Munna":517,
"Musharna":518,
"Pidove":519,
"Tranquill":520,
"Unfezant":521,
"Blitzle":522,
"Zebstrika":523,
"Roggenrola":524,
"Boldore":525,
"Gigalith":526,
"Woobat":527,
"Swoobat":528,
"Drilbur":529,
"Excadrill":530,
"Audino":531,
"Timburr":532,
"Gurdurr":533,
"Conkeldurr":534,
"Tympole":535,
"Palpitoad":536,
"Seismitoad":537,
"Throh":538,
"Sawk":539,
"Sewaddle":540,
"Swadloon":541,
"Leavanny":542,
"Venipede":543,
"Whirlipede":544,
"Scolipede":545,
"Cottonee":546,
"Whimsicott":547,
"Petilil":548,
"Lilligant":549,
"Basculin":550,
"Sandile":551,
"Krokorok":552,
"Krookodile":553,
"Darumaka":554,
"Darmanitan":555,
"Maractus":556,
"Dwebble":557,
"Crustle":558,
"Scraggy":559,
"Scrafty":560,
"Sigilyph":561,
"Yamask":562,
"Cofagrigus":563,
"Tirtouga":564,
"Carracosta":565,
"Archen":566,
"Archeops":567,
"Trubbish":568,
"Garbodor":569,
"Zorua":570,
"Zoroark":571,
"Minccino":572,
"Cinccino":573,
"Gothita":574,
"Gothorita":575,
"Gothitelle":576,
"Solosis":577,
"Duosion":578,
"Reuniclus":579,
"Ducklett":580,
"Swanna":581,
"Vanillite":582,
"Vanillish":583,
"Vanilluxe":584,
"Deerling":585,
"Sawsbuck":586,
"Emolga":587,
"Karrablast":588,
"Escavalier":589,
"Foongus":590,
"Amoonguss":591,
"Frillish":592,
"Jellicent":593,
"Alomomola":594,
"Joltik":595,
"Galvantula":596,
"Ferroseed":597,
"Ferrothorn":598,
"Klink":599,
"Klang":600,
"Klinklang":601,
"Tynamo":602,
"Eelektrik":603,
"Eelektross":604,
"Elgyem":605,
"Beheeyem":606,
"Litwick":607,
"Lampent":608,
"Chandelure":609,
"Axew":610,
"Fraxure":611,
"Haxorus":612,
"Cubchoo":613,
"Beartic":614,
"Cryogonal":615,
"Shelmet":616,
"Accelgor":617,
"Stunfisk":618,
"Mienfoo":619,
"Mienshao":620,
"Druddigon":621,
"Golett":622,
"Golurk":623,
"Pawniard":624,
"Bisharp":625,
"Bouffalant":626,
"Rufflet":627,
"Braviary":628,
"Vullaby":629,
"Mandibuzz":630,
"Heatmor":631,
"Durant":632,
"Deino":633,
"Zweilous":634,
"Hydreigon":635,
"Larvesta":636,
"Volcarona":637,
"Cobalion":638,
"Terrakion":639,
"Virizion":640,
"Tornadus":641,
"Thundurus":642,
"Reshiram":643,
"Zekrom":644,
"Landorus":645,
"Kyurem":646,
"Keldeo":647,
"Meloetta":648,
"Genesect":649,
}

items = {
1:{"bit":4, "location":"Aspertia City","address":0x2258cb},
2:{"bit":7, "location":"Route 19","address":0x2258f3},
3:{"bit":5, "location":"Route 19","address":0x2258cb},
4:{"bit":6, "location":"Route 19","address":0x2258cb},
5:{"bit":4, "location":"Route 19","address":0x2259ba},
6:{"bit":0, "location":"Floccesy Town","address":0x2259bd},
7:{"bit":7, "location":"Floccesy Town","address":0x2258cc},
8:{"bit":7, "location":"Route 20","address":0x2258cb},
9:{"bit":7, "location":"Route 20","address":0x2259bc},
10:{"bit":0, "location":"Route 20","address":0x2258cc},
11:{"bit":5, "location":"Route 20","address":0x2258cc},
12:{"bit":1, "location":"Route 20","address":0x2258cc},
13:{"bit":2, "location":"Route 20","address":0x2258cc},
14:{"bit":5, "location":"Route 20","address":0x2259ba},
15:{"bit":4, "location":"Route 20","address":0x2258cc},
16:{"bit":3, "location":"Route 20","address":0x2258cc},
17:{"bit":6, "location":"Route 20","address":0x2259ba},
18:{"bit":6, "location":"Route 20","address":0x2258cc},
19:{"bit":3, "location":"Floccesy Ranch","address":0x2258cd},
20:{"bit":1, "location":"Floccesy Ranch","address":0x2258cd},
21:{"bit":2, "location":"Floccesy Ranch","address":0x2258cd},
22:{"bit":2, "location":"Virbank City","address":0x2258ce},
23:{"bit":4, "location":"Virbank City","address":0x2259a7},
24:{"bit":4, "location":"Virbank City","address":0x2258cd},
25:{"bit":7, "location":"Virbank Complex","address":0x2258cd},
26:{"bit":5, "location":"Virbank Complex","address":0x2258cd},
27:{"bit":0, "location":"Virbank Complex","address":0x2259ad},
28:{"bit":1, "location":"Virbank Complex","address":0x2258ce},
29:{"bit":1, "location":"Virbank Complex","address":0x2259ad},
30:{"bit":0, "location":"Virbank Complex","address":0x002258ce},
31:{"bit":2, "location":"Virbank Complex","address":0x2259ad},
32:{"bit":7, "location":"Castelia City","address":0x2258ce},
33:{"bit":3, "location":"Castelia City","address":0x2258ce},
34:{"bit":4, "location":"Castelia City","address":0x2258ce},
35:{"bit":5, "location":"Castelia City","address":0x2258ce},
36:{"bit":6, "location":"Castelia City","address":0x2258ce},
37:{"bit":0, "location":"Castelia City","address":0x2258cf},
38:{"bit":2, "location":"Castelia City","address":0x002258cf},
39:{"bit":1, "location":"Castelia City","address":0x2258cf},
40:{"bit":4, "location":"Castelia Sewers","address":0x2258cf},
41:{"bit":6, "location":"Castelia Sewers","address":0x2258cf},
42:{"bit":5, "location":"Castelia Sewers","address":0x2258cf},
43:{"bit":0, "location":"Castelia Sewers","address":0x2258d0},
44:{"bit":3, "location":"Castelia Sewers","address":0x2258cf},
45:{"bit":1, "location":"Castelia Sewers","address":0x2258d0},
46:{"bit":7, "location":"Castelia Sewers","address":0x2258cf},
47:{"bit":6, "location":"Castelia Sewers","address":0x2259ac},
48:{"bit":3, "location":"Castelia Sewers","address":0x2259ac},
49:{"bit":3, "location":"Castelia Sewers","address":0x2258d0},
50:{"bit":5, "location":"Castelia Sewers","address":0x2259ac},
51:{"bit":4, "location":"Castelia Sewers","address":0x2259ac},
52:{"bit":2, "location":"Castelia Sewers","address":0x2259ac},
53:{"bit":2, "location":"Castelia Sewers","address":0x2258d0},
54:{"bit":1, "location":"Route 4","address":0x2258d2},
55:{"bit":7, "location":"Route 4","address":0x2258d1},
56:{"bit":5, "location":"Route 4","address":0x2259b3},
57:{"bit":6, "location":"Route 4","address":0x2259b3},
58:{"bit":4, "location":"Route 4","address":0x2258d1},
59:{"bit":3, "location":"Route 4","address":0x2258d1},
60:{"bit":7, "location":"Route 4","address":0x2259b3},
61:{"bit":0, "location":"Route 4","address":0x2259b4},
62:{"bit":5, "location":"Route 4","address":0x2258d1},
63:{"bit":1, "location":"Route 4","address":0x2259b4},
64:{"bit":2, "location":"Desert Resort","address":0x2259a9},
65:{"bit":3, "location":"Desert Resort","address":0x2258d2},
66:{"bit":1, "location":"Desert Resort","address":0x2259a9},
67:{"bit":7, "location":"Desert Resort","address":0x2259a8},
68:{"bit":2, "location":"Desert Resort","address":0x2258d2},
69:{"bit":0, "location":"Desert Resort","address":0x2259a9},
70:{"bit":4, "location":"Desert Resort","address":0x2258d2},
71:{"bit":4, "location":"Desert Resort","address":0x2259a9},
72:{"bit":1, "location":"Desert Resort","address":0x2258d3},
73:{"bit":0, "location":"Desert Resort","address":0x2258d3},
74:{"bit":7, "location":"Desert Resort","address":0x2258d2},
75:{"bit":6, "location":"Desert Resort","address":0x2258d2},
76:{"bit":5, "location":"Desert Resort","address":0x2258d2},
77:{"bit":3, "location":"Desert Resort","address":0x2259a9},
78:{"bit":6, "location":"Nimbasa City","address":0x2259a2},
79:{"bit":7, "location":"Nimbasa City","address":0x2259a2},
80:{"bit":2, "location":"Nimbasa City","address":0x2258d3},
81:{"bit":7, "location":"Nimbasa City","address":0x225895},
82:{"bit":1, "location":"Route 5","address":0x2258d4},
83:{"bit":0, "location":"Route 5","address":0x2258d4},
84:{"bit":7, "location":"Route 5","address":0x2259b4},
85:{"bit":4, "location":"Route 16","address":0x2258d3},
86:{"bit":3, "location":"Route 16","address":0x2258d3},
87:{"bit":3, "location":"Lostlorn Forest","address":0x2259b9},
88:{"bit":6, "location":"Lostlorn Forest","address":0x2258d3},
89:{"bit":5, "location":"Lostlorn Forest","address":0x2258d3},
90:{"bit":4, "location":"Lostlorn Forest","address":0x2259b9},
91:{"bit":7, "location":"Lostlorn Forest","address":0x2258d3},
92:{"bit":5, "location":"Lostlorn Forest","address":0x2259b9},
93:{"bit":0, "location":"Driftveil City","address":0x2259a3},
94:{"bit":2, "location":"Driftveil City","address":0x2258d4},
95:{"bit":3, "location":"Driftveil City","address":0x2258fa},
96:{"bit":1, "location":"Driftveil City","address":0x2259a3},
97:{"bit":5, "location":"Route 6","address":0x2258d4},
98:{"bit":4, "location":"Route 6","address":0x2258d4},
99:{"bit":0, "location":"Route 6","address":0x2259b5},
100:{"bit":6, "location":"Route 6","address":0x2258d4},
101:{"bit":2, "location":"Route 6","address":0x2259b5},
102:{"bit":0, "location":"Route 6","address":0x2258d5},
103:{"bit":1, "location":"Route 6","address":0x2258d5},
104:{"bit":2, "location":"Route 6","address":0x2258d5},
105:{"bit":1, "location":"Route 6","address":0x2259b5},
106:{"bit":3, "location":"Relic Passage","address":0x2258fb},
107:{"bit":2, "location":"Relic Passage","address":0x2259b0},
108:{"bit":4, "location":"Relic Passage","address":0x2258d0},
109:{"bit":5, "location":"Relic Passage","address":0x2258d0},
110:{"bit":2, "location":"Relic Passage","address":0x2258d1},
111:{"bit":5, "location":"Relic Passage","address":0x2259b0},
112:{"bit":4, "location":"Relic Passage","address":0x2259b0},
113:{"bit":3, "location":"Relic Passage","address":0x2259b0},
114:{"bit":6, "location":"Relic Passage","address":0x2259b0},
115:{"bit":7, "location":"Relic Passage","address":0x2259b0},
116:{"bit":0, "location":"Relic Passage","address":0x2259b1},
117:{"bit":0, "location":"Relic Passage","address":0x2258d1},
118:{"bit":7, "location":"Relic Passage","address":0x2258d0},
119:{"bit":6, "location":"Relic Passage","address":0x2258d0},
120:{"bit":1, "location":"Relic Passage","address":0x2258d1},
121:{"bit":5, "location":"Relic Castle","address":0x2259a9},
122:{"bit":2, "location":"Relic Castle","address":0x2258f3},
123:{"bit":6, "location":"Relic Castle","address":0x2259a9},
124:{"bit":1, "location":"Relic Castle","address":0x2258ec},
125:{"bit":7, "location":"Mistralton City","address":0x2258d7},
126:{"bit":0, "location":"Mistralton City","address":0x2258d8},
127:{"bit":2, "location":"Mistralton City","address":0x2259a3},
128:{"bit":3, "location":"Mistralton City","address":0x2259a3},
129:{"bit":1, "location":"Chargestone Cave","address":0x2258d7},
130:{"bit":4, "location":"Chargestone Cave","address":0x2258d6},
131:{"bit":1, "location":"Chargestone Cave","address":0x2259aa},
132:{"bit":6, "location":"Chargestone Cave","address":0x2258d6},
133:{"bit":2, "location":"Chargestone Cave","address":0x2259aa},
134:{"bit":5, "location":"Chargestone Cave","address":0x2258d6},
135:{"bit":4, "location":"Chargestone Cave","address":0x2259aa},
136:{"bit":3, "location":"Chargestone Cave","address":0x2259aa},
137:{"bit":0, "location":"Chargestone Cave","address":0x2258d7},
138:{"bit":2, "location":"Chargestone Cave","address":0x2258d7},
139:{"bit":3, "location":"Chargestone Cave","address":0x2258d7},
140:{"bit":5, "location":"Chargestone Cave","address":0x2258d7},
141:{"bit":4, "location":"Chargestone Cave","address":0x2258d7},
142:{"bit":6, "location":"Chargestone Cave","address":0x2258d7},
143:{"bit":5, "location":"Chargestone Cave","address":0x2259aa},
144:{"bit":4, "location":"Mistralton Cave","address":0x2258d5},
145:{"bit":3, "location":"Mistralton Cave","address":0x2258d5},
146:{"bit":3, "location":"Mistralton Cave","address":0x2259b5},
147:{"bit":0, "location":"Mistralton Cave","address":0x2258d6},
148:{"bit":4, "location":"Mistralton Cave","address":0x2259b5},
149:{"bit":5, "location":"Mistralton Cave","address":0x2259b5},
150:{"bit":2, "location":"Mistralton Cave","address":0x2258d6},
151:{"bit":6, "location":"Mistralton Cave","address":0x2258d5},
152:{"bit":6, "location":"Mistralton Cave","address":0x2259b5},
153:{"bit":5, "location":"Mistralton Cave","address":0x2258d5},
154:{"bit":7, "location":"Mistralton Cave","address":0x2259b5},
155:{"bit":2, "location":"Route 7","address":0x2258d8},
156:{"bit":1, "location":"Route 7","address":0x2258d8},
157:{"bit":3, "location":"Route 7","address":0x2258d8},
158:{"bit":4, "location":"Route 7","address":0x2258d8},
159:{"bit":0, "location":"Route 7","address":0x2259b6},
160:{"bit":1, "location":"Route 7","address":0x2259b6},
161:{"bit":5, "location":"Celestial Tower","address":0x2258d8},
162:{"bit":6, "location":"Celestial Tower","address":0x2258d8},
163:{"bit":7, "location":"Celestial Tower","address":0x002258d8},
164:{"bit":0, "location":"Celestial Tower","address":0x2258d9},
165:{"bit":1, "location":"Celestial Tower","address":0x2258d9},
166:{"bit":2, "location":"Celestial Tower","address":0x2259b6},
167:{"bit":2, "location":"Lentimas Town","address":0x2258d9},
168:{"bit":0, "location":"Reversal Mountain","address":0x2258da},
169:{"bit":2, "location":"Reversal Mountain","address":0x2258fb},
170:{"bit":1, "location":"Reversal Mountain","address":0x2258da},
171:{"bit":7, "location":"Reversal Mountain","address":0x2258d9},
172:{"bit":2, "location":"Reversal Mountain","address":0x2258da},
173:{"bit":4, "location":"Reversal Mountain","address":0x2258da},
174:{"bit":5, "location":"Reversal Mountain","address":0x2259ad},
175:{"bit":7, "location":"Reversal Mountain","address":0x2258da},
176:{"bit":6, "location":"Reversal Mountain","address":0x2259ad},
177:{"bit":5, "location":"Reversal Mountain","address":0x2258da},
178:{"bit":3, "location":"Reversal Mountain","address":0x2258da},
179:{"bit":7, "location":"Reversal Mountain","address":0x2259ad},
180:{"bit":6, "location":"Reversal Mountain","address":0x2258da},
181:{"bit":0, "location":"Reversal Mountain","address":0x2259ae},
182:{"bit":4, "location":"Reversal Mountain","address":0x2259ad},
183:{"bit":0, "location":"Reversal Mountain","address":0x2258db},
184:{"bit":3, "location":"Reversal Mountain","address":0x2259ad},
185:{"bit":3, "location":"Strange House","address":0x2258d9},
186:{"bit":6, "location":"Strange House","address":0x2258d9},
187:{"bit":5, "location":"Strange House","address":0x2258d9},
188:{"bit":3, "location":"Strange House","address":0x2258b2},
189:{"bit":4, "location":"Strange House","address":0x2258d9},
190:{"bit":5, "location":"Undella Town","address":0x2259bb},
191:{"bit":2, "location":"Undella Town","address":0x2258db},
192:{"bit":6, "location":"Undella Town","address":0x2259bb},
193:{"bit":7, "location":"Undella Town","address":0x2259bb},
194:{"bit":0, "location":"Undella Town","address":0x2259bc},
195:{"bit":4, "location":"Undella Bay","address":0x2258db},
196:{"bit":7, "location":"Undella Bay","address":0x2259ac},
197:{"bit":3, "location":"Undella Bay","address":0x2258db},
198:{"bit":1, "location":"Route 13","address":0x2258fa},
199:{"bit":4, "location":"Route 13","address":0x2258dc},
200:{"bit":0, "location":"Route 13","address":0x2259b8},
201:{"bit":6, "location":"Route 13","address":0x2259b7},
202:{"bit":2, "location":"Route 13","address":0x2258dc},
203:{"bit":7, "location":"Route 13","address":0x2259b7},
204:{"bit":1, "location":"Route 13","address":0x2258dc},
205:{"bit":1, "location":"Route 13","address":0x2259b8},
206:{"bit":6, "location":"Route 13","address":0x2258dc},
207:{"bit":3, "location":"Route 13","address":0x2258dc},
208:{"bit":7, "location":"Route 13","address":0x2258dc},
209:{"bit":0, "location":"Route 13","address":0x2258dd},
210:{"bit":5, "location":"Route 13","address":0x2258dc},
211:{"bit":2, "location":"Route 13","address":0x2259b8},
212:{"bit":5, "location":"Route 14","address":0x2258db},
213:{"bit":7, "location":"Route 14","address":0x2258db},
214:{"bit":6, "location":"Route 14","address":0x2258db},
215:{"bit":4, "location":"Route 14","address":0x2259b8},
216:{"bit":0, "location":"Route 14","address":0x2258dc},
217:{"bit":3, "location":"Route 14","address":0x2259b8},
218:{"bit":6, "location":"Abundant Shrine","address":0x2259b8},
219:{"bit":7, "location":"Abundant Shrine","address":0x2259b8},
220:{"bit":4, "location":"Abundant Shrine","address":0x2258eb},
221:{"bit":3, "location":"Abundant Shrine","address":0x2258eb},
222:{"bit":2, "location":"Abundant Shrine","address":0x2258eb},
223:{"bit":5, "location":"Abundant Shrine","address":0x2259b8},
224:{"bit":5, "location":"Abundant Shrine","address":0x2258eb},
225:{"bit":0, "location":"Abundant Shrine","address":0x2259b9},
226:{"bit":1, "location":"Abundant Shrine","address":0x2258eb},
227:{"bit":1, "location":"Lacunosa Town","address":0x2258dd},
228:{"bit":2, "location":"Lacunosa Town","address":0x002258dd},
229:{"bit":4, "location":"Route 12","address":0x2259b7},
230:{"bit":3, "location":"Route 12","address":0x2259b7},
231:{"bit":5, "location":"Route 12","address":0x2259b7},
232:{"bit":2, "location":"Route 12","address":0x2258fa},
233:{"bit":5, "location":"Route 12","address":0x2258dd},
234:{"bit":4, "location":"Route 12","address":0x2258dd},
235:{"bit":7, "location":"Route 12","address":0x2258dd},
236:{"bit":6, "location":"Route 12","address":0x2258dd},
237:{"bit":3, "location":"Village Bridge","address":0x2258de},
238:{"bit":4, "location":"Village Bridge","address":0x2258de},
239:{"bit":3, "location":"Village Bridge","address":0x2259b2},
240:{"bit":2, "location":"Village Bridge","address":0x2258de},
241:{"bit":2, "location":"Village Bridge","address":0x2259b2},
242:{"bit":1, "location":"Village Bridge","address":0x2259b2},
243:{"bit":0, "location":"Village Bridge","address":0x2258de},
244:{"bit":1, "location":"Village Bridge","address":0x2258de},
245:{"bit":5, "location":"Village Bridge","address":0x2258de},
246:{"bit":0, "location":"Route 11","address":0x2258df},
247:{"bit":2, "location":"Route 11","address":0x2259b7},
248:{"bit":7, "location":"Route 11","address":0x2258de},
249:{"bit":1, "location":"Route 11","address":0x2259b7},
250:{"bit":6, "location":"Route 11","address":0x2258de},
251:{"bit":4, "location":"Route 9","address":0x002258df},
252:{"bit":2, "location":"Route 9","address":0x002258df},
253:{"bit":5, "location":"Route 9","address":0x002258df},
254:{"bit":3, "location":"Route 9","address":0x002258df},
255:{"bit":0, "location":"Route 9","address":0x002259b7},
256:{"bit":1, "location":"Route 9","address":0x002258df},
257:{"bit":0, "location":"Humilau City","address":0x2258e0},
258:{"bit":4, "location":"Humilau City","address":0x2259bc},
259:{"bit":4, "location":"Humilau City","address":0x2258f1},
260:{"bit":7, "location":"Humilau City","address":0x2258e0},
261:{"bit":4, "location":"Humilau City","address":0x2259a3},
262:{"bit":3, "location":"Seaside Cave","address":0x2258e0},
263:{"bit":1, "location":"Seaside Cave","address":0x2258e0},
264:{"bit":0, "location":"Seaside Cave","address":0x2259b2},
265:{"bit":7, "location":"Seaside Cave","address":0x2258df},
266:{"bit":2, "location":"Seaside Cave","address":0x2258e0},
267:{"bit":7, "location":"Seaside Cave","address":0x2259b1},
268:{"bit":4, "location":"Seaside Cave","address":0x2258e0},
269:{"bit":6, "location":"Seaside Cave","address":0x2258df},
270:{"bit":5, "location":"Route 21","address":0x2258e0},
271:{"bit":6, "location":"Route 21","address":0x002258e0},
272:{"bit":7, "location":"Route 22","address":0x2259ba},
273:{"bit":6, "location":"Route 22","address":0x2258f9},
274:{"bit":0, "location":"Route 22","address":0x2259bb},
275:{"bit":2, "location":"Route 22","address":0x2258e1},
276:{"bit":1, "location":"Route 22","address":0x2258e1},
277:{"bit":3, "location":"Route 22","address":0x2258e1},
278:{"bit":0, "location":"Route 22","address":0x2258e1},
279:{"bit":7, "location":"Route 22","address":0x2258f9},
280:{"bit":3, "location":"Giant Chasm","address":0x2258dd},
281:{"bit":6, "location":"Giant Chasm","address":0x2259ab},
282:{"bit":5, "location":"Giant Chasm","address":0x2259ab},
283:{"bit":4, "location":"Giant Chasm","address":0x2258e1},
284:{"bit":0, "location":"Giant Chasm","address":0x2259ac},
285:{"bit":5, "location":"Giant Chasm","address":0x2258e1},
286:{"bit":1, "location":"Giant Chasm","address":0x2259ac},
287:{"bit":7, "location":"Giant Chasm","address":0x2259ab},
288:{"bit":6, "location":"Giant Chasm","address":0x2258e1},
289:{"bit":5, "location":"Giant Chasm","address":0x2258e2},
290:{"bit":4, "location":"Giant Chasm","address":0x2258e2},
291:{"bit":3, "location":"Giant Chasm","address":0x2258e2},
292:{"bit":6, "location":"Giant Chasm","address":0x2258e2},
293:{"bit":2, "location":"Giant Chasm","address":0x2258e2},
294:{"bit":7, "location":"Giant Chasm","address":0x2258e1},
295:{"bit":1, "location":"Giant Chasm","address":0x2258e2},
296:{"bit":1, "location":"Route 23","address":0x2258e4},
297:{"bit":2, "location":"Route 23","address":0x2259bb},
298:{"bit":7, "location":"Route 23","address":0x2258e3},
299:{"bit":1, "location":"Route 23","address":0x2259bb},
300:{"bit":6, "location":"Route 23","address":0x2258e3},
301:{"bit":0, "location":"Route 23","address":0x2258e4},
302:{"bit":0, "location":"Route 23","address":0x2259af},
303:{"bit":2, "location":"Route 23","address":0x2258e4},
304:{"bit":5, "location":"Route 23","address":0x2258e4},
305:{"bit":3, "location":"Route 23","address":0x002258e4},
306:{"bit":4, "location":"Route 23","address":0x2258e4},
307:{"bit":7, "location":"Route 23","address":0x2259ae},
308:{"bit":0, "location":"Route 23","address":0x2258fa},
309:{"bit":6, "location":"Route 23","address":0x002258e4},
310:{"bit":1, "location":"Route 23","address":0x2259af},
311:{"bit":7, "location":"Route 23","address":0x2258e4},
312:{"bit":7, "location":"Victory Road","address":0x2258d6},
313:{"bit":6, "location":"Victory Road","address":0x2258cd},
314:{"bit":3, "location":"Victory Road","address":0x2259af},
315:{"bit":2, "location":"Victory Road","address":0x2259af},
316:{"bit":0, "location":"Victory Road","address":0x002258cd},
317:{"bit":6, "location":"Victory Road","address":0x2258e5},
318:{"bit":2, "location":"Victory Road","address":0x2258e5},
319:{"bit":7, "location":"Victory Road","address":0x2258e5},
320:{"bit":0, "location":"Victory Road","address":0x2258e5},
321:{"bit":0, "location":"Victory Road","address":0x2258e6},
322:{"bit":4, "location":"Victory Road","address":0x2258e5},
323:{"bit":4, "location":"Victory Road","address":0x2259af},
324:{"bit":5, "location":"Victory Road","address":0x2258e5},
325:{"bit":6, "location":"Victory Road","address":0x2258e6},
326:{"bit":3, "location":"Victory Road","address":0x2258e6},
327:{"bit":5, "location":"Victory Road","address":0x2259af},
328:{"bit":6, "location":"Victory Road","address":0x2259af},
329:{"bit":3, "location":"Victory Road","address":0x2258e5},
330:{"bit":1, "location":"Victory Road","address":0x2258e6},
331:{"bit":7, "location":"Victory Road","address":0x2259af},
332:{"bit":2, "location":"Victory Road","address":0x2258e6},
333:{"bit":0, "location":"Victory Road","address":0x2259b0},
334:{"bit":6, "location":"Victory Road","address":0x2258f3},
335:{"bit":1, "location":"Victory Road","address":0x2259b0},
336:{"bit":1, "location":"Victory Road","address":0x2258e5},
337:{"bit":2, "location":"Route 8","address":0x002258e7},
338:{"bit":1, "location":"Route 8","address":0x002258e7},
339:{"bit":3, "location":"Route 8","address":0x002259b6},
340:{"bit":4, "location":"Route 8","address":0x002259b6},
341:{"bit":0, "location":"Route 8","address":0x002258e7},
342:{"bit":5, "location":"Moor of Icirrus","address":0x002258e7},
343:{"bit":7, "location":"Moor of Icirrus","address":0x002259b6},
344:{"bit":5, "location":"Moor of Icirrus","address":0x002259b6},
345:{"bit":0, "location":"Moor of Icirrus","address":0x002258e8},
346:{"bit":6, "location":"Moor of Icirrus","address":0x002259b6},
347:{"bit":4, "location":"Moor of Icirrus","address":0x002258e7},
348:{"bit":6, "location":"Moor of Icirrus","address":0x002258e7},
349:{"bit":7, "location":"Moor of Icirrus","address":0x002258e7},
350:{"bit":3, "location":"Icirrus City","address":0x002258e7},
351:{"bit":3, "location":"Icirrus City","address":0x002258e9},
352:{"bit":2, "location":"Dragonspiral Tower","address":0x002258e9},
353:{"bit":1, "location":"Dragonspiral Tower","address":0x002258e8},
354:{"bit":3, "location":"Dragonspiral Tower","address":0x002259ab},
355:{"bit":4, "location":"Dragonspiral Tower","address":0x002258e8},
356:{"bit":0, "location":"Dragonspiral Tower","address":0x002258e9},
357:{"bit":7, "location":"Dragonspiral Tower","address":0x002258e8},
358:{"bit":5, "location":"Dragonspiral Tower","address":0x002258e8},
359:{"bit":0, "location":"Dragonspiral Tower","address":0x002258e2},
360:{"bit":1, "location":"Dragonspiral Tower","address":0x002258fb},
361:{"bit":0, "location":"Dragonspiral Tower","address":0x002258fb},
362:{"bit":6, "location":"Dragonspiral Tower","address":0x002258e8},
363:{"bit":3, "location":"Dragonspiral Tower","address":0x002258e8},
364:{"bit":2, "location":"Dragonspiral Tower","address":0x002258e8},
365:{"bit":1, "location":"Dragonspiral Tower","address":0x002258e9},
366:{"bit":4, "location":"Dragonspiral Tower","address":0x002259ab},
367:{"bit":5, "location":"Twist Mountain","address":0x002258ea},
368:{"bit":1, "location":"Twist Mountain","address":0x002258ea},
369:{"bit":2, "location":"Twist Mountain","address":0x002258ea},
370:{"bit":6, "location":"Twist Mountain","address":0x002258e9},
371:{"bit":3, "location":"Twist Mountain","address":0x002258ea},
372:{"bit":2, "location":"Twist Mountain","address":0x002259ab},
373:{"bit":7, "location":"Twist Mountain","address":0x002258e9},
374:{"bit":6, "location":"Twist Mountain","address":0x002259aa},
375:{"bit":5, "location":"Twist Mountain","address":0x002258e9},
376:{"bit":4, "location":"Twist Mountain","address":0x002258e9},
377:{"bit":6, "location":"Twist Mountain","address":0x002258ea},
378:{"bit":1, "location":"Twist Mountain","address":0x002259ab},
379:{"bit":7, "location":"Twist Mountain","address":0x002259aa},
380:{"bit":4, "location":"Twist Mountain","address":0x002258ea},
381:{"bit":0, "location":"Twist Mountain","address":0x002259ab},
382:{"bit":0, "location":"Twist Mountain","address":0x002258ea},
383:{"bit":3, "location":"Clay Tunnel","address":0x002258d6},
384:{"bit":1, "location":"Clay Tunnel","address":0x002259b1},
385:{"bit":1, "location":"Clay Tunnel","address":0x002258d6},
386:{"bit":2, "location":"Clay Tunnel","address":0x002259b1},
387:{"bit":7, "location":"Clay Tunnel","address":0x002258d5},
388:{"bit":4, "location":"Clay Tunnel","address":0x002259b1},
389:{"bit":7, "location":"Clay Tunnel","address":0x002258d4},
390:{"bit":3, "location":"Clay Tunnel","address":0x002258f3},
391:{"bit":3, "location":"Clay Tunnel","address":0x002259b1},
392:{"bit":4, "location":"Clay Tunnel","address":0x002258f3},
393:{"bit":5, "location":"Clay Tunnel","address":0x002258f3},
394:{"bit":6, "location":"Clay Tunnel","address":0x002259b1},
395:{"bit":5, "location":"Clay Tunnel","address":0x002259b1},
396:{"bit":7, "location":"Route 15","address":0x002258ea},
397:{"bit":2, "location":"Route 15","address":0x002259b9},
398:{"bit":0, "location":"Route 15","address":0x002258eb},
399:{"bit":1, "location":"Route 15","address":0x002259b9},
400:{"bit":5, "location":"Nacrene City","address":0x002259a2},
401:{"bit":0, "location":"Pinwheel Forest","address":0x002259a8},
402:{"bit":7, "location":"Pinwheel Forest","address":0x002258ec},
403:{"bit":2, "location":"Pinwheel Forest","address":0x002258ed},
404:{"bit":7, "location":"Pinwheel Forest","address":0x002259a7},
405:{"bit":3, "location":"Pinwheel Forest","address":0x002258ed},
406:{"bit":1, "location":"Pinwheel Forest","address":0x002259a8},
407:{"bit":0, "location":"Pinwheel Forest","address":0x002258ed},
408:{"bit":1, "location":"Pinwheel Forest","address":0x002258ed},
409:{"bit":2, "location":"Pinwheel Forest","address":0x002258ec},
410:{"bit":4, "location":"Pinwheel Forest","address":0x002259a8},
411:{"bit":6, "location":"Pinwheel Forest","address":0x002259a8},
412:{"bit":5, "location":"Pinwheel Forest","address":0x002258ec},
413:{"bit":0, "location":"Pinwheel Forest","address":0x002258ec},
414:{"bit":6, "location":"Pinwheel Forest","address":0x002258ec},
415:{"bit":7, "location":"Pinwheel Forest","address":0x002258eb},
416:{"bit":3, "location":"Pinwheel Forest","address":0x002259a8},
417:{"bit":4, "location":"Pinwheel Forest","address":0x002258ec},
418:{"bit":5, "location":"Pinwheel Forest","address":0x002259a8},
419:{"bit":2, "location":"Pinwheel Forest","address":0x002259a8},
420:{"bit":3, "location":"Pinwheel Forest","address":0x002258ec},
421:{"bit":6, "location":"Pinwheel Forest","address":0x002258eb},
422:{"bit":5, "location":"Striaton City","address":0x002258ef},
423:{"bit":6, "location":"Striaton City","address":0x002258ef},
424:{"bit":4, "location":"Striaton City","address":0x002259a2},
425:{"bit":5, "location":"Striaton City","address":0x002259bc},
426:{"bit":2, "location":"Striaton City","address":0x002258f0},
427:{"bit":4, "location":"Striaton City","address":0x002258ef},
428:{"bit":7, "location":"Route 3","address":0x002258ed},
429:{"bit":2, "location":"Route 3","address":0x002258ee},
430:{"bit":6, "location":"Route 3","address":0x002258ed},
431:{"bit":3, "location":"Route 3","address":0x002258ee},
432:{"bit":1, "location":"Route 3","address":0x002259b3},
433:{"bit":1, "location":"Route 3","address":0x002258ee},
434:{"bit":0, "location":"Route 3","address":0x002258ee},
435:{"bit":6, "location":"Route 3","address":0x002259bc},
436:{"bit":0, "location":"Route 3","address":0x002259b3},
437:{"bit":4, "location":"Route 3","address":0x002258ee},
438:{"bit":1, "location":"Wellspring Cave","address":0x002258ef},
439:{"bit":5, "location":"Wellspring Cave","address":0x002258ee},
440:{"bit":3, "location":"Wellspring Cave","address":0x002258ef},
441:{"bit":0, "location":"Wellspring Cave","address":0x002258ef},
442:{"bit":2, "location":"Wellspring Cave","address":0x002259b3},
443:{"bit":6, "location":"Wellspring Cave","address":0x002258ee},
444:{"bit":7, "location":"Wellspring Cave","address":0x002258ee},
445:{"bit":3, "location":"Wellspring Cave","address":0x002259b3},
446:{"bit":4, "location":"Wellspring Cave","address":0x002259b3},
447:{"bit":3, "location":"Dreamyard","address":0x002258f0},
448:{"bit":7, "location":"Dreamyard","address":0x002258ef},
449:{"bit":0, "location":"Dreamyard","address":0x002258f0},
450:{"bit":1, "location":"Dreamyard","address":0x00225880},
451:{"bit":1, "location":"Dreamyard","address":0x002258f0},
452:{"bit":5, "location":"Dreamyard","address":0x002259a7},
453:{"bit":4, "location":"Dreamyard","address":0x002258f0},
454:{"bit":5, "location":"Dreamyard","address":0x002258f0},
455:{"bit":7, "location":"Dreamyard","address":0x002258f0},
456:{"bit":6, "location":"Dreamyard","address":0x002258f0},
457:{"bit":6, "location":"Dreamyard","address":0x002259a7},
458:{"bit":4, "location":"Accumula Town","address":0x002259bb},
459:{"bit":0, "location":"Route 2","address":0x002258f1},
460:{"bit":5, "location":"Route 2","address":0x002258f1},
461:{"bit":2, "location":"Route 2","address":0x002258f1},
462:{"bit":7, "location":"Route 2","address":0x002259b2},
463:{"bit":6, "location":"Route 2","address":0x002258f1},
464:{"bit":6, "location":"Route 2","address":0x002259b2},
465:{"bit":3, "location":"Route 2","address":0x002258f1},
466:{"bit":1, "location":"Route 2","address":0x002258f1},
467:{"bit":3, "location":"Nuvema Town","address":0x002259bb},
468:{"bit":1, "location":"Nuvema Town","address":0x002258f2},
469:{"bit":4, "location":"Route 1","address":0x002259b2},
470:{"bit":7, "location":"Route 1","address":0x002258f1},
471:{"bit":0, "location":"Route 1","address":0x002258f2},
472:{"bit":5, "location":"Route 1","address":0x002259b2},
473:{"bit":1, "location":"Route 17","address":0x002259bc},
474:{"bit":2, "location":"Route 17","address":0x002258f2},
475:{"bit":3, "location":"Route 17","address":0x002258f2},
476:{"bit":4, "location":"Route 17","address":0x002258f2},
477:{"bit":2, "location":"Route 17","address":0x002259bc},
478:{"bit":3, "location":"Route 17","address":0x002259bc},
479:{"bit":3, "location":"Route 18","address":0x002259ba},
480:{"bit":2, "location":"Route 18","address":0x002259ba},
481:{"bit":7, "location":"Route 18","address":0x002258f2},
482:{"bit":7, "location":"Route 18","address":0x002259b9},
483:{"bit":6, "location":"Route 18","address":0x002258f2},
484:{"bit":0, "location":"Route 18","address":0x002258f3},
485:{"bit":7, "location":"Route 18","address":0x002258b7},
486:{"bit":1, "location":"Route 18","address":0x002259ba},
487:{"bit":5, "location":"Route 18","address":0x002258f2},
488:{"bit":1, "location":"Route 18","address":0x002258f3},
489:{"bit":6, "location":"Route 18","address":0x002259b9},
490:{"bit":0, "location":"Route 18","address":0x002259ba},
491:{"bit":5, "location":"P2 Laboratory","address":0x002258fa},
492:{"bit":6, "location":"Plasma Frigate","address":0x2258fa},
493:{"bit":7, "location":"Plasma Frigate","address":0x2258fa},
494:{"bit":3, "location":"Plasma Frigate","address":0x2258e3},
495:{"bit":7, "location":"Plasma Frigate","address":0x2258e2},
496:{"bit":2, "location":"Plasma Frigate","address":0x2258e3},
497:{"bit":0, "location":"Plasma Frigate","address":0x2258e3},
498:{"bit":4, "location":"Plasma Frigate","address":0x2258e3},
499:{"bit":7, "location":"N Castle","address":0x002258e6},
500:{"bit":4, "location":"N Castle","address":0x002258e6},
501:{"bit":5, "location":"N Castle","address":0x002258e6},
}

trainers = {
1:{"bit":4, "location":"Route 20","address":0x225914},
2:{"bit":0, "location":"Route 20","address":0x225931},
3:{"bit":5, "location":"Route 20","address":0x225914},
5:{"bit":5, "location":"Route 20","address":0x225915},
6:{"bit":6, "location":"Route 20","address":0x225915},
7:{"bit":7, "location":"Route 20","address":0x225915},
8:{"bit":0, "location":"Route 20","address":0x225916},
9:{"bit":2, "location":"Route 20","address":0x225930},
10:{"bit":5, "location":"Route 20","address":0x225930},
11:{"bit":4, "location":"Route 20","address":0x225930},
12:{"bit":3, "location":"Route 20","address":0x225930},
13:{"bit":5, "location":"Floccesy Ranch","address":0x225916},
14:{"bit":6, "location":"Floccesy Ranch","address":0x225916},
15:{"bit":4, "location":"Floccesy Ranch","address":0x225916},
16:{"bit":1, "location":"Virbank Complex","address":0x22595d},
17:{"bit":4, "location":"Virbank Complex","address":0x225868},
18:{"bit":2, "location":"Virbank Complex","address":0x22595d},
19:{"bit":5, "location":"Virbank Complex","address":0x225868},
20:{"bit":3, "location":"Virbank Complex","address":0x225868},
21:{"bit":2, "location":"Virbank Complex","address":0x22595c},
22:{"bit":2, "location":"Castelia City","address":0x22585c},
23:{"bit":2, "location":"Castelia City","address":0x22586f},
24:{"bit":3, "location":"Castelia City","address":0x225956},
25:{"bit":4, "location":"Castelia City","address":0x225956},
26:{"bit":0, "location":"Castelia City","address":0x2256de},
27:{"bit":2, "location":"Castelia City","address":0x22595e},
28:{"bit":3, "location":"Castelia City","address":0x22595e},
29:{"bit":4, "location":"Castelia City","address":0x22595e},
30:{"bit":5, "location":"Castelia Sewers","address":0x225939},
31:{"bit":7, "location":"Castelia Sewers","address":0x225954},
32:{"bit":1, "location":"Castelia Sewers","address":0x22593a},
33:{"bit":2, "location":"Castelia Sewers","address":0x22593a},
34:{"bit":0, "location":"Castelia Sewers","address":0x22593a},
35:{"bit":7, "location":"Castelia Sewers","address":0x225939},
36:{"bit":6, "location":"Castelia Sewers","address":0x00225939},
37:{"bit":0, "location":"Route 4","address":0x225925},
38:{"bit":3, "location":"Route 4","address":0x22591a},
39:{"bit":2, "location":"Route 4","address":0x22591a},
40:{"bit":4, "location":"Route 4","address":0x22591a},
41:{"bit":6, "location":"Route 4","address":0x22591a},
42:{"bit":7, "location":"Route 4","address":0x22591a},
43:{"bit":1, "location":"Route 4","address":0x22591b},
44:{"bit":0, "location":"Route 4","address":0x22591b},
45:{"bit":4, "location":"Route 4","address":0x225923},
46:{"bit":2, "location":"Route 4","address":0x22591b},
47:{"bit":4, "location":"Route 4","address":0x22591b},
48:{"bit":6, "location":"Desert Resort","address":0x225953},
49:{"bit":2, "location":"Desert Resort","address":0x225953},
50:{"bit":7, "location":"Desert Resort","address":0x225952},
51:{"bit":0, "location":"Desert Resort","address":0x225953},
52:{"bit":6, "location":"Desert Resort","address":0x225952},
53:{"bit":5, "location":"Desert Resort","address":0x225953},
54:{"bit":4, "location":"Desert Resort","address":0x225953},
55:{"bit":3, "location":"Desert Resort","address":0x225953},
56:{"bit":1, "location":"Desert Resort","address":0x225953},
57:{"bit":5, "location":"Route 5","address":0x22591f},
58:{"bit":6, "location":"Route 5","address":0x22591f},
59:{"bit":5, "location":"Route 5","address":0x225924},
60:{"bit":7, "location":"Route 5","address":0x22591f},
61:{"bit":4, "location":"Route 5","address":0x22591f},
62:{"bit":0, "location":"Route 5","address":0x225920},
63:{"bit":3, "location":"Lostlorn Forest","address":0x225925},
64:{"bit":1, "location":"Lostlorn Forest","address":0x225925},
65:{"bit":2, "location":"Lostlorn Forest","address":0x225925},
66:{"bit":6, "location":"Lostlorn Forest","address":0x225911},
67:{"bit":6, "location":"Route 16","address":0x225920},
68:{"bit":4, "location":"Route 16","address":0x225920},
69:{"bit":2, "location":"Route 16","address":0x225920},
70:{"bit":1, "location":"Route 16","address":0x225920},
71:{"bit":5, "location":"Route 16","address":0x225920},
72:{"bit":3, "location":"Route 16","address":0x225920},
73:{"bit":0, "location":"Route 6","address":0x22595e},
74:{"bit":3, "location":"Route 6","address":0x225921},
75:{"bit":2, "location":"Route 6","address":0x225921},
76:{"bit":6, "location":"Route 6","address":0x225920},
77:{"bit":0, "location":"Route 6","address":0x225921},
78:{"bit":1, "location":"Route 6","address":0x225921},
79:{"bit":4, "location":"Route 6","address":0x225921},
80:{"bit":4, "location":"Route 6","address":0x225924},
81:{"bit":7, "location":"Relic Passage","address":0x225946},
82:{"bit":0, "location":"Relic Passage","address":0x225947},
83:{"bit":3, "location":"Relic Passage","address":0x225946},
84:{"bit":6, "location":"Relic Passage","address":0x225946},
85:{"bit":2, "location":"Relic Passage","address":0x225946},
86:{"bit":4, "location":"Relic Passage","address":0x225946},
87:{"bit":1, "location":"Relic Passage","address":0x225946},
88:{"bit":1, "location":"Relic Passage","address":0x225947},
89:{"bit":5, "location":"Relic Passage","address":0x225946},
90:{"bit":2, "location":"Relic Passage","address":0x225947},
91:{"bit":7, "location":"Relic Castle","address":0x22593f},
92:{"bit":6, "location":"Relic Castle","address":0x22593f},
93:{"bit":0, "location":"Relic Castle","address":0x225940},
94:{"bit":1, "location":"Chargestone Cave","address":0x225943},
95:{"bit":5, "location":"Chargestone Cave","address":0x225943},
96:{"bit":2, "location":"Chargestone Cave","address":0x225944},
97:{"bit":0, "location":"Chargestone Cave","address":0x225944},
98:{"bit":4, "location":"Chargestone Cave","address":0x225944},
99:{"bit":3, "location":"Chargestone Cave","address":0x225943},
100:{"bit":7, "location":"Chargestone Cave","address":0x225943},
101:{"bit":7, "location":"Chargestone Cave","address":0x225953},
102:{"bit":6, "location":"Chargestone Cave","address":0x225943},
103:{"bit":2, "location":"Chargestone Cave","address":0x225943},
104:{"bit":3, "location":"Chargestone Cave","address":0x225944},
105:{"bit":4, "location":"Chargestone Cave","address":0x225943},
106:{"bit":1, "location":"Chargestone Cave","address":0x225944},
107:{"bit":0, "location":"Mistralton Cave","address":0x225955},
108:{"bit":1, "location":"Mistralton Cave","address":0x225955},
109:{"bit":2, "location":"Mistralton Cave","address":0x225955},
110:{"bit":3, "location":"Mistralton Cave","address":0x225955},
111:{"bit":6, "location":"Route 7","address":0x225925},
112:{"bit":6, "location":"Route 7","address":0x225921},
113:{"bit":5, "location":"Route 7","address":0x225921},
114:{"bit":7, "location":"Route 7","address":0x225921},
115:{"bit":0, "location":"Route 7","address":0x225922},
116:{"bit":1, "location":"Route 7","address":0x225922},
117:{"bit":2, "location":"Route 7","address":0x225922},
118:{"bit":3, "location":"Route 7","address":0x225922},
119:{"bit":4, "location":"Route 7","address":0x225922},
120:{"bit":2, "location":"Celestial Tower","address":0x225945},
121:{"bit":5, "location":"Celestial Tower","address":0x22586c},
122:{"bit":5, "location":"Celestial Tower","address":0x225944},
123:{"bit":6, "location":"Celestial Tower","address":0x225944},
124:{"bit":1, "location":"Celestial Tower","address":0x225945},
125:{"bit":3, "location":"Celestial Tower","address":0x225945},
126:{"bit":1, "location":"Celestial Tower","address":0x225954},
127:{"bit":0, "location":"Celestial Tower","address":0x225945},
128:{"bit":7, "location":"Celestial Tower","address":0x225944},
129:{"bit":4, "location":"Celestial Tower","address":0x225945},
130:{"bit":4, "location":"Reversal Mountain","address":0x22593a},
131:{"bit":3, "location":"Reversal Mountain","address":0x22593a},
132:{"bit":2, "location":"Reversal Mountain","address":0x225941},
133:{"bit":1, "location":"Reversal Mountain","address":0x225940},
134:{"bit":0, "location":"Reversal Mountain","address":0x225954},
135:{"bit":5, "location":"Reversal Mountain","address":0x225962},
136:{"bit":1, "location":"Reversal Mountain","address":0x225941},
137:{"bit":2, "location":"Reversal Mountain","address":0x225962},
138:{"bit":0, "location":"Reversal Mountain","address":0x225941},
139:{"bit":3, "location":"Reversal Mountain","address":0x225941},
140:{"bit":4, "location":"Reversal Mountain","address":0x225941},
141:{"bit":5, "location":"Reversal Mountain","address":0x225940},
142:{"bit":3, "location":"Reversal Mountain","address":0x225940},
143:{"bit":6, "location":"Strange House","address":0x225930},
144:{"bit":7, "location":"Strange House","address":0x225930},
145:{"bit":2, "location":"Undella Bay","address":0x225927},
146:{"bit":5, "location":"Undella Bay","address":0x225927},
147:{"bit":1, "location":"Undella Bay","address":0x225927},
148:{"bit":3, "location":"Undella Bay","address":0x225927},
149:{"bit":6, "location":"Undella Bay","address":0x225927},
150:{"bit":4, "location":"Undella Bay","address":0x225927},
151:{"bit":2, "location":"Route 13","address":0x22595b},
152:{"bit":3, "location":"Route 13","address":0x22595b},
153:{"bit":6, "location":"Route 13","address":0x225910},
154:{"bit":0, "location":"Route 13","address":0x225924},
155:{"bit":2, "location":"Route 13","address":0x225924},
156:{"bit":1, "location":"Route 13","address":0x225924},
157:{"bit":7, "location":"Route 13","address":0x225923},
158:{"bit":6, "location":"Route 13","address":0x225923},
159:{"bit":5, "location":"Route 13","address":0x225910},
160:{"bit":6, "location":"Route 13","address":0x225924},
161:{"bit":7, "location":"Route 13","address":0x225924},
162:{"bit":6, "location":"Route 14","address":0x225922},
163:{"bit":5, "location":"Route 14","address":0x225922},
164:{"bit":2, "location":"Route 14","address":0x225923},
165:{"bit":0, "location":"Route 14","address":0x225923},
166:{"bit":3, "location":"Route 14","address":0x225923},
167:{"bit":7, "location":"Route 14","address":0x225922},
168:{"bit":5, "location":"Route 14","address":0x225923},
169:{"bit":1, "location":"Route 14","address":0x225923},
170:{"bit":7, "location":"Abundant Shrine","address":0x225945},
171:{"bit":0, "location":"Abundant Shrine","address":0x225946},
172:{"bit":6, "location":"Abundant Shrine","address":0x225945},
173:{"bit":5, "location":"Abundant Shrine","address":0x225945},
174:{"bit":5, "location":"Route 12","address":0x225925},
175:{"bit":4, "location":"Route 12","address":0x225925},
176:{"bit":3, "location":"Route 12","address":0x225924},
177:{"bit":7, "location":"Village Bridge","address":0x22595a},
178:{"bit":0, "location":"Village Bridge","address":0x22595b},
179:{"bit":0, "location":"Village Bridge","address":0x22568c},
180:{"bit":2, "location":"Village Bridge","address":0x22592a},
181:{"bit":0, "location":"Village Bridge","address":0x22592a},
182:{"bit":7, "location":"Village Bridge","address":0x225929},
183:{"bit":5, "location":"Village Bridge","address":0x22592b},
184:{"bit":1, "location":"Village Bridge","address":0x22595b},
185:{"bit":6, "location":"Village Bridge","address":0x22595a},
186:{"bit":7, "location":"Route 11","address":0x225925},
187:{"bit":1, "location":"Route 11","address":0x225926},
188:{"bit":0, "location":"Route 11","address":0x225926},
189:{"bit":1, "location":"Route 9","address":0x00225929},
190:{"bit":3, "location":"Route 9","address":0x22591b},
191:{"bit":3, "location":"Route 9","address":0x00225929},
192:{"bit":0, "location":"Route 9","address":0x00225929},
193:{"bit":2, "location":"Route 9","address":0x00225929},
194:{"bit":6, "location":"Seaside Cave","address":0x22593a},
195:{"bit":2, "location":"Seaside Cave","address":0x22593b},
196:{"bit":1, "location":"Seaside Cave","address":0x22593b},
197:{"bit":5, "location":"Seaside Cave","address":0x22593a},
198:{"bit":3, "location":"Seaside Cave","address":0x2258ae},
199:{"bit":0, "location":"Seaside Cave","address":0x22593b},
200:{"bit":7, "location":"Seaside Cave","address":0x22593a},
201:{"bit":7, "location":"Route 21","address":0x225926},
202:{"bit":5, "location":"Route 21","address":0x225926},
203:{"bit":6, "location":"Route 21","address":0x225926},
204:{"bit":6, "location":"Route 21","address":0x225928},
205:{"bit":4, "location":"Route 21","address":0x225926},
206:{"bit":7, "location":"Route 21","address":0x225928},
207:{"bit":0, "location":"Route 21","address":0x00225927},
208:{"bit":4, "location":"Route 22","address":0x225905},
209:{"bit":2, "location":"Route 22","address":0x225926},
210:{"bit":6, "location":"Route 22","address":0x225929},
211:{"bit":5, "location":"Route 22","address":0x225929},
212:{"bit":3, "location":"Route 22","address":0x225926},
213:{"bit":3, "location":"Route 22","address":0x225905},
214:{"bit":6, "location":"Route 23","address":0x22593b},
215:{"bit":0, "location":"Route 23","address":0x22593c},
216:{"bit":3, "location":"Route 23","address":0x22593b},
217:{"bit":7, "location":"Route 23","address":0x22593b},
218:{"bit":5, "location":"Route 23","address":0x22593b},
219:{"bit":4, "location":"Route 23","address":0x22593c},
220:{"bit":3, "location":"Route 23","address":0x22593c},
221:{"bit":4, "location":"Route 23","address":0x22593b},
222:{"bit":6, "location":"Route 23","address":0x22593c},
223:{"bit":1, "location":"Route 23","address":0x22593c},
224:{"bit":5, "location":"Route 23","address":0x22593c},
225:{"bit":2, "location":"Route 23","address":0x22593c},
226:{"bit":2, "location":"Victory Road","address":0x22594a},
227:{"bit":4, "location":"Victory Road","address":0x22594a},
228:{"bit":3, "location":"Victory Road","address":0x22594a},
229:{"bit":5, "location":"Victory Road","address":0x22594a},
230:{"bit":6, "location":"Victory Road","address":0x22594c},
231:{"bit":7, "location":"Victory Road","address":0x22594c},
232:{"bit":3, "location":"Victory Road","address":0x22594c},
233:{"bit":0, "location":"Victory Road","address":0x22594b},
234:{"bit":1, "location":"Victory Road","address":0x22594b},
235:{"bit":5, "location":"Victory Road","address":0x22594c},
236:{"bit":2, "location":"Victory Road","address":0x22594c},
237:{"bit":6, "location":"Victory Road","address":0x22594a},
238:{"bit":7, "location":"Victory Road","address":0x22594a},
239:{"bit":1, "location":"Victory Road","address":0x225952},
240:{"bit":3, "location":"Victory Road","address":0x22594b},
241:{"bit":2, "location":"Victory Road","address":0x22594b},
242:{"bit":2, "location":"Victory Road","address":0x225952},
243:{"bit":3, "location":"Victory Road","address":0x225952},
244:{"bit":4, "location":"Victory Road","address":0x22594c},
245:{"bit":7, "location":"Victory Road","address":0x22594b},
246:{"bit":1, "location":"Victory Road","address":0x22594c},
247:{"bit":0, "location":"Victory Road","address":0x22594c},
248:{"bit":6, "location":"Victory Road","address":0x22594b},
249:{"bit":5, "location":"Victory Road","address":0x22594b},
250:{"bit":4, "location":"Victory Road","address":0x22594b},
251:{"bit":5, "location":"Route 8","address":0x00225947},
252:{"bit":4, "location":"Route 8","address":0x00225947},
253:{"bit":7, "location":"Route 8","address":0x00225947},
254:{"bit":6, "location":"Route 8","address":0x00225947},
255:{"bit":3, "location":"Route 8","address":0x00225947},
256:{"bit":3, "location":"Moor of Icirrus","address":0x00225948},
257:{"bit":2, "location":"Moor of Icirrus","address":0x00225948},
258:{"bit":0, "location":"Moor of Icirrus","address":0x00225948},
259:{"bit":1, "location":"Moor of Icirrus","address":0x00225948},
260:{"bit":5, "location":"Twist Mountain","address":0x00225941},
261:{"bit":6, "location":"Twist Mountain","address":0x00225942},
262:{"bit":5, "location":"Twist Mountain","address":0x00225942},
263:{"bit":3, "location":"Twist Mountain","address":0x00225942},
264:{"bit":6, "location":"Twist Mountain","address":0x00225941},
265:{"bit":0, "location":"Twist Mountain","address":0x00225942},
266:{"bit":5, "location":"Twist Mountain","address":0x0022595a},
267:{"bit":7, "location":"Twist Mountain","address":0x00225942},
268:{"bit":4, "location":"Twist Mountain","address":0x0022593d},
269:{"bit":2, "location":"Twist Mountain","address":0x00225942},
270:{"bit":7, "location":"Twist Mountain","address":0x00225941},
271:{"bit":1, "location":"Twist Mountain","address":0x00225942},
272:{"bit":4, "location":"Twist Mountain","address":0x00225942},
273:{"bit":7, "location":"Clay Tunnel","address":0x0022593c},
274:{"bit":1, "location":"Clay Tunnel","address":0x0022593d},
275:{"bit":0, "location":"Clay Tunnel","address":0x0022593d},
276:{"bit":2, "location":"Clay Tunnel","address":0x0022593d},
277:{"bit":3, "location":"Clay Tunnel","address":0x0022593d},
278:{"bit":4, "location":"Clay Tunnel","address":0x0022593f},
279:{"bit":3, "location":"Clay Tunnel","address":0x0022593f},
280:{"bit":2, "location":"Clay Tunnel","address":0x0022593f},
281:{"bit":5, "location":"Clay Tunnel","address":0x0022593f},
282:{"bit":4, "location":"Route 15","address":0x00225951},
283:{"bit":7, "location":"Route 15","address":0x00225951},
284:{"bit":0, "location":"Route 15","address":0x00225952},
285:{"bit":6, "location":"Route 15","address":0x00225951},
286:{"bit":5, "location":"Route 15","address":0x00225951},
287:{"bit":0, "location":"Pinwheel Forest","address":0x225951},
288:{"bit":7, "location":"Pinwheel Forest","address":0x225950},
289:{"bit":2, "location":"Pinwheel Forest","address":0x225951},
290:{"bit":1, "location":"Pinwheel Forest","address":0x00225951},
291:{"bit":3, "location":"Pinwheel Forest","address":0x225951},
292:{"bit":6, "location":"Pinwheel Forest","address":0x00225962},
293:{"bit":7, "location":"Pinwheel Forest","address":0x00225962},
294:{"bit":2, "location":"Pinwheel Forest","address":0x00225950},
295:{"bit":0, "location":"Pinwheel Forest","address":0x00225950},
296:{"bit":5, "location":"Pinwheel Forest","address":0x00225950},
297:{"bit":7, "location":"Pinwheel Forest","address":0x0022594f},
298:{"bit":4, "location":"Pinwheel Forest","address":0x00225950},
299:{"bit":3, "location":"Pinwheel Forest","address":0x00225950},
300:{"bit":1, "location":"Pinwheel Forest","address":0x00225963},
301:{"bit":0, "location":"Pinwheel Forest","address":0x00225963},
302:{"bit":1, "location":"Pinwheel Forest","address":0x00225950},
303:{"bit":6, "location":"Pinwheel Forest","address":0x00225950},
304:{"bit":2, "location":"Pinwheel Forest","address":0x0022594f},
305:{"bit":3, "location":"Pinwheel Forest","address":0x0022594f},
306:{"bit":4, "location":"Pinwheel Forest","address":0x0022594f},
307:{"bit":5, "location":"Pinwheel Forest","address":0x0022594f},
308:{"bit":6, "location":"Pinwheel Forest","address":0x0022594f},
309:{"bit":1, "location":"Pinwheel Forest","address":0x0022594f},
310:{"bit":2, "location":"Striaton City","address":0x002256d6},
311:{"bit":2, "location":"Route 3","address":0x00225931},
312:{"bit":0, "location":"Route 3","address":0x00225932},
313:{"bit":7, "location":"Route 3","address":0x00225931},
314:{"bit":1, "location":"Route 3","address":0x00225931},
315:{"bit":1, "location":"Route 3","address":0x0022595e},
316:{"bit":1, "location":"Route 3","address":0x0022592a},
317:{"bit":3, "location":"Route 3","address":0x00225931},
318:{"bit":5, "location":"Route 3","address":0x00225931},
319:{"bit":6, "location":"Route 3","address":0x00225931},
320:{"bit":4, "location":"Route 3","address":0x00225931},
321:{"bit":2, "location":"Wellspring Cave","address":0x00225954},
322:{"bit":3, "location":"Wellspring Cave","address":0x00225954},
323:{"bit":6, "location":"Wellspring Cave","address":0x00225954},
324:{"bit":4, "location":"Wellspring Cave","address":0x00225954},
325:{"bit":5, "location":"Wellspring Cave","address":0x00225954},
326:{"bit":2, "location":"Wellspring Cave","address":0x00225905},
327:{"bit":6, "location":"Dreamyard","address":0x0022595c},
328:{"bit":7, "location":"Dreamyard","address":0x0022595c},
329:{"bit":5, "location":"Dreamyard","address":0x0022595c},
330:{"bit":0, "location":"Dreamyard","address":0x0022595d},
331:{"bit":3, "location":"Dreamyard","address":0x0022595c},
332:{"bit":1, "location":"Dreamyard","address":0x0022594a},
333:{"bit":4, "location":"Dreamyard","address":0x0022595c},
334:{"bit":7, "location":"Route 2","address":0x00225932},
335:{"bit":0, "location":"Route 2","address":0x00225933},
336:{"bit":1, "location":"Route 2","address":0x00225932},
337:{"bit":4, "location":"Route 2","address":0x00225932},
338:{"bit":2, "location":"Route 2","address":0x00225932},
339:{"bit":3, "location":"Route 2","address":0x00225932},
340:{"bit":6, "location":"Route 1","address":0x00225932},
341:{"bit":5, "location":"Route 1","address":0x00225932},
342:{"bit":3, "location":"Route 1","address":0x00225933},
343:{"bit":4, "location":"Route 1","address":0x00225933},
344:{"bit":2, "location":"Route 1","address":0x00225933},
345:{"bit":1, "location":"Route 1","address":0x00225933},
346:{"bit":5, "location":"Route 17","address":0x00225933},
347:{"bit":0, "location":"Route 17","address":0x00225934},
348:{"bit":1, "location":"Route 17","address":0x00225934},
349:{"bit":6, "location":"Route 17","address":0x00225933},
350:{"bit":7, "location":"Route 17","address":0x00225933},
351:{"bit":2, "location":"Route 17","address":0x00225934},
352:{"bit":7, "location":"Route 18","address":0x00225934},
353:{"bit":0, "location":"Route 18","address":0x00225935},
354:{"bit":3, "location":"Route 18","address":0x00225934},
355:{"bit":4, "location":"Route 18","address":0x00225934},
356:{"bit":6, "location":"Route 18","address":0x00225934},
357:{"bit":5, "location":"Route 18","address":0x00225934},
358:{"bit":1, "location":"Route 18","address":0x00225935},
}

function itemCount(){
    sum = 0
    count = 0
    for item in items{
        sum = sum + bit(items[item]["bit"], items[item]["address"])
        count = count + 1
    }
    for trainer in trainers{
        sum = sum + bit(trainers[trainer]["bit"], trainers[trainer]["address"])
        count = count + 1
    }
    
    return measured(sum == count)
}

achievement(
    "completion",
    "",
    0,
    itemCount()
    
)


completion = {
1:{"title":"Starting Cities","description":"Obtain all overworld items and complete the habitat list in Aspertia City, Route 19 and Floccesy Town", "points":5, "trainer":[], "pokemon":["Basculin", "Goldeen", "Seaking", "Purrloin", "Patrat", "Poliwag", "Poliwhirl", "Politoed",], "items":["Aspertia City", "Route 19", "Floccesy Town"]},
2:{"title":"Calm Ranch","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 20 and Floccesy Ranch", "points":5, "trainer":["Route 20","Floccesy Ranch"], "pokemon":["Sewaddle", "Basculin", "Pidove", "Azurill", "Poliwag", "Dunsparce", "Marill", "Poliwhirl", "Audino", "Azumarill", "Purrloin", "Patrat", "Venipede", "Sunkern", "Lillipup", "Riolu", "Mareep", "Psyduck",], "items":["Route 20","Floccesy Ranch"]},
3:{"title":"Covered by Clouds and Smoke","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Virbank City and Virbank Complex", "points":5, "trainer":["Virbank Complex"], "pokemon":["Alomomola", "Krabby", "Frillish", "Kingler", "Jellicent", "Qwilfish", "Finneon", "Lumineon", "Pidove", "Magby", "Growlithe", "Audino", "Patrat", "Magnemite", "Koffing",], "items":["Virbank Complex", "Virbank City"]},
4:{"title":"A City of Grandeur","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Castelia City and Castelia Sewers", "points":10, "trainer":["Castelia City","Castelia Sewers"], "pokemon":["Eevee", "Pidove", "Rattata", "Audino", "Buneary", "Lopunny", "Cottonee", "Whimsicott", "Grimer", "Zubat", "Muk",], "items":["Castelia City","Castelia Sewers"]},
5:{"title":"Deep Sand","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 4 and Desert Resort", "points":10, "trainer":["Route 4", "Desert Resort"], "pokemon":["Minccino", "Alomomola", "Frillish", "Finneon", "Scraggy", "Jellicent", "Relicanth", "Darumaka", "Lumineon", "Trubbish", "Qwilfish", "Clamperl", "Huntail", "Sandshrew", "Sigilyph", "Maractus", "Sandile", "Dwebble", "Trapinch",], "items":["Route 4", "Desert Resort"]},
6:{"title":"Lit by the Flash of Lightning!","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Nimbasa City, Route 5, Route 16 and Lostlorn Forest", "points":10, "trainer":["Route 5", "Route 16" ,"Lostlorn Forest"], "pokemon":["Minccino", "Trubbish", "Gothita", "Audino", "Emolga", "Liepard", "Cinccino", "Buizel", "Basculin", "Heracross", "Poliwag", "Roselia", "Floatzel", "Poliwhirl", "Combee", "Politoed", "Swadloon", "Venipede", "Cottonee", "Pansage", "Pansear", "Panpour", "Whirlipede", "Roserade", "Vespiquen", "Leavanny", "Whimsicott",], "items":["Nimbasa City", "Route 5", "Route 16" ,"Lostlorn Forest"]},
7:{"title":"Billowing Sails","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Driftveil City, Route 6, Relic Castle and Relic Passage", "points":10, "trainer":["Route 6", "Relic Castle" ,"Relic Passage"], "pokemon":["Karrablast", "Basculin", "Shelmet", "Marill", "Politoed", "Sandshrew", "Azumarill", "Poliwhirl", "Sandslash", "Foongus", "Poliwag", "Yamask", "Swadloon", "Sandile", "Krokorok", "Deerling", "Baltoy", "Dunsparce", "Leavanny", "Audino", "Tranquill", "Unfezant", "Emolga", "Castform", "Gurdurr", "Poliwrath", "Drilbur", "Roggenrola", "Onix", "Rattata", "Boldore", "Raticate", "Timburr", "Woobat",], "items":["Driftveil City", "Route 6", "Relic Castle" ,"Relic Passage"]},
8:{"title":"Windswept Prospect","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Mistralton City, Chargestone Cave, Mistralton Cave and Route 7", "points":10, "trainer":["Mistralton City", "Chargestone Cave", "Mistralton Cave","Route 7"], "pokemon":["Axew", "Drilbur", "Aron", "Boldore", "Woobat", "Klink", "Joltik", "Nosepass", "Tynamo", "Ferroseed", "Zangoose", "Seviper", "Zebstrika", "Foongus", "Deerling", "Audino", "Tranquill", "Unfezant", "Emolga", "Watchog", "Cubchoo",], "items":["Mistralton City", "Chargestone Cave", "Mistralton Cave","Route 7"]},
9:{"title":"Spirit Purifying","description":"Defeat all non-side quest trainers, obtain all overworld items and complete the habitat list in Celestial Tower", "points":5, "trainer":["Celestial Tower"], "pokemon":["Elgyem", "Litwick", "Golbat",], "items":["Celestial Tower"]},
10:{"title":"Mountain Trail","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Lentimas Town, Reversal Mountain and Strange House", "points":10, "trainer":["Reversal Mountain", "Strange House"], "pokemon":["Skorupi", "Spoink", "Grumpig", "Skarmory", "Excadrill", "Boldore", "Drifblim", "Audino", "Trapinch", "Woobat", "Vibrava", "Banette", "Gothita", "Gothorita", "Litwick", "Golbat", "Raticate",], "items":["Lentimas Town", "Reversal Mountain", "Strange House"]},
11:{"title":"Rippling Waves","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Undella Town, Undella Bay and Route 13", "points":10, "trainer":["Undella Town", "Undella Bay","Route 13"], "pokemon":["Starmie", "Shellder", "Basculin", "Cloyster", "Frillish", "Luvdisc", "Jellicent", "Staryu", "Absol", "Lunatone", "Solrock", "Drifblim", "Tangrowth", "Audino", "Emolga", "Pelipper", "Tangela", "Mantine", "Remoraid", "Spheal", "Octillery", "Sealeo", "Chinchou", "Walrein", "Lanturn", "Wailmer", "Mantyke", "Wailord",], "items":["Undella Town", "Undella Bay","Route 13"]},
12:{"title":"Abandoned Village","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 14 and Abundant Shrine", "points":10, "trainer":["Route 14","Abundant Shrine"], "pokemon":["Golduck", "Buizel", "Basculin", "Absol", "Goldeen", "Drifblim", "Floatzel", "Seaking", "Audino", "Mienfoo", "Swablu", "Emolga", "Altaria", "Marill", "Azumarill", "Bronzor", "Bronzong", "Cottonee", "Whimsicott", "Vulpix", "Ninetales",], "items":["Route 14","Abundant Shrine"]},
13:{"title":"Methodical and Orderly","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Lacunosa Town, Route 12 and Village Bridge", "points":10, "trainer":["Lacunosa Town", "Route 12", "Village Bridge"], "pokemon":["Heracross", "Roserade", "Sewaddle", "Roselia", "Dunsparce", "Combee", "Leavanny", "Audino", "Tranquill", "Vespiquen", "Unfezant", "Emolga", "Zangoose", "Basculin", "Sharpedo", "Golduck", "Marill", "Seviper", "Azumarill", "Carvanha", "Lapras",], "items":["Lacunosa Town", "Route 12", "Village Bridge"]},
14:{"title":"Time's Dividing Line","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 9 and Route 11", "points":10, "trainer":["Route 9", "Route 11"], "pokemon":["Karrablast", "Buizel", "Basculin", "Zangoose", "Goldeen", "Golduck", "Floatzel", "Seaking", "Shelmet", "Seviper", "Marill", "Azumarill", "Amoonguss", "Audino", "Gligar", "Emolga", "Gliscor", "Minccino", "Cinccino", "Muk", "Pawniard", "Garbodor", "Gothorita", "Gothitelle", "Liepard",], "items":["Route 9", "Route 11"]},

15:{"title":"Sparkling Seas","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Humilau City, Seaside Cave and Route 21", "points":10, "trainer":["Humilau City", "Seaside Cave","Route 21"], "pokemon":["Golduck", "Frillish", "Shellder", "Starmie", "Excadrill", "Seel", "Cloyster", "Basculin", "Tynamo", "Dewgong", "Luvdisc", "Corsola", "Boldore", "Jellicent", "Eelektrik", "Staryu", "Shuckle", "Woobat", "Alomomola", "Remoraid", "Mantine", "Octillery", "Mantyke",], "items":["Humilau City", "Seaside Cave","Route 21"]},
16:{"title":"Ups and Downs","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 22, Giant Chasm and Route 23", "points":10, "trainer":["Route 22", "Giant Chasm", "Route 23"], "pokemon":["Delibird", "Basculin", "Golduck", "Marill", "Goldeen", "Azumarill", "Seaking", "Lunatone", "Solrock", "Amoonguss", "Audino", "Mienfoo", "Emolga", "Pelipper", "Vanillish", "Seel", "Poliwrath", "Mamoswine", "Dewgong", "Poliwhirl", "Ditto", "Poliwag", "Sneasel", "Vanilluxe", "Metang", "Piloswine", "Excadrill", "Metagross", "Clefairy", "Tangrowth", "Clefable", "Tangela", "Sawk", "Buizel", "Floatzel", "Mienshao", "Gligar", "Gliscor", "Throh", "Bouffalant", "Vullaby",], "items":["Route 22", "Giant Chasm", "Route 23"]},
17:{"title":"Champion Road","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Victory Road", "points":10, "trainer":["Victory Road"], "pokemon":["Gurdurr", "Buizel", "Basculin", "Druddigon", "Poliwag", "Sawk", "Floatzel", "Poliwhirl", "Roserade", "Marill", "Poliwrath", "Golurk", "Azumarill", "Politoed", "Roselia", "Zweilous", "Onix", "Banette", "Excadrill", "Dunsparce", "Boldore", "Tranquill", "Audino", "Unfezant", "Altaria", "Throh", "Cottonee", "Whimsicott",], "items":["Victory Road"]},
18:{"title":"Flowers of Snow","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Icirrus City, Route 8 and Moor of Icirrus", "points":10, "trainer":["Icirrus City", "Route 8", "Moor of Icirrus"], "pokemon":["Stunfisk", "Karrablast", "Palpitoad", "Barboach", "Shelmet", "Seismitoad", "Whiscash", "Croagunk",], "items":["Icirrus City", "Route 8", "Moor of Icirrus"]},
19:{"title":"Lost History","description":"Obtain all overworld items and complete the habitat list in Dragonspiral Tower", "points":5, "trainer":["Dragonspiral Tower"], "pokemon":["Druddigon", "Basculin", "Golurk", "Dratini", "Audino", "Dragonair", "Sawsbuck", "Dragonite", "Tranquill", "Unfezant", "Emolga", "Mienshao", "Mienfoo", "Beartic", "Vanillish", "Vanilluxe",], "items":["Dragonspiral Tower"]},
20:{"title":"Constant Mining","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Twist Mountain, Clay Tunnel", "points":10, "trainer":["Twist Mountain", "Clay Tunnel"], "pokemon":["Durant", "Basculin", "Gurdurr", "Onix", "Poliwrath", "Excadrill", "Poliwhirl", "Nosepass", "Poliwag", "Boldore", "Lairon", "Beartic", "Heatmor", "Steelix", "Woobat", "Cryogonal",], "items":["Twist Mountain", "Clay Tunnel"]},
21:{"title":"Sharp Cliffs","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 15", "points":5, "trainer":["Route 15"], "pokemon":["Pupitar", "Sawk", "Tyranitar", "Sandslash", "Audino", "Gligar", "Emolga", "Gliscor", "Throh", "Scrafty",], "items":["Route 15"]},
22:{"title":"Pearl of a Place","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Nacrene City and Pinwheel Forest", "points":10, "trainer":["Pinwheel Forest", "Nacrene City"], "pokemon":["Pansage", "Basculin", "Whirlipede", "Marill", "Goldeen", "Gurdurr", "Azumarill", "Seaking", "Sawk", "Scolipede", "Yanma", "Pansear", "Yanmega", "Vigoroth", "Swadloon", "Palpitoad", "Slaking", "Audino", "Toxicroak", "Panpour", "Seismitoad", "Throh", "Cottonee", "Whimsicott",], "items":["Pinwheel Forest", "Nacrene City"]},
23:{"title":"Together as One","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Striaton City, Route 3, Wellspring Cave, and Dreamyard", "points":10, "trainer":["Route 3", "Wellspring Cave", "Striaton City", "Dreamyard"], "pokemon":["Yanma", "Basculin", "Zebstrika", "Corphish", "Herdier", "Crawdaunt", "Goldeen", "Seaking", "Yanmega", "Stoutland", "Audino", "Purrloin", "Tranquill", "Unfezant", "Watchog", "Excadrill", "Boldore", "Poliwag", "Woobat", "Poliwhirl", "Poliwrath", "Munna", "Jigglypuff", "Musharna", "Wigglytuff", "Dunsparce", "Golbat", "Raticate", "Crobat", "Liepard",], "items":["Route 3", "Wellspring Cave", "Striaton City", "Dreamyard"]},
24:{"title":"Fast-Growing","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Accumula Town and Route 2", "points":5, "trainer":["Accumula Town","Route 2"], "pokemon":["Jigglypuff", "Lickilicky", "Herdier", "Wigglytuff", "Stoutland", "Dunsparce", "Audino", "Lickitung", "Liepard", "Watchog",], "items":["Accumula Town","Route 2"]},
25:{"title":"Rural Town","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Nuvema Town and Route 1", "points":5, "trainer":["Nuvema Town", "Route 1"], "pokemon":["Jigglypuff", "Basculin", "Basculin", "Herdier", "Feebas", "Wigglytuff", "Milotic", "Stoutland", "Dunsparce", "Audino", "Scrafty", "Watchog",], "items":["Nuvema Town", "Route 1"]},
26:{"title":"Fast Currents","description":"Defeat all trainers, obtain all overworld items and complete the habitat list in Route 17, Route 18, P2 Laboratory", "points":10, "trainer":["Route 17", "Route 18", "P2 Laboratory"], "pokemon":["Alomomola", "Finneon", "Frillish", "Lumineon", "Jellicent", "Horsea", "Seadra", "Kingdra", "Tropius", "Sawk", "Dunsparce", "Crustle", "Audino", "Carnivine", "Corsola", "Throh", "Watchog", "Scrafty", "Magneton", "Magnezone", "Weezing", "Klang", "Herdier", "Klinklang", "Stoutland",], "items":["Route 17", "Route 18", "P2 Laboratory"]},
27:{"title":"Ice Powered","description":"Obtain all overworld items in Plasma Frigate", "points":3, "trainer":["Plasma Frigate"], "pokemon":[], "items":["Plasma Frigate"]},
28:{"title":"King's Past","description":"Obtain all overworld items in N's Castle ", "points":2, "trainer":["N Castle"], "pokemon":[], "items":["N Castle"]},
}

function addCompletion(element){
sum = 0
total = 0
//trainers
if(length(completion[element]["trainer"]) > 0 ){
    for place in completion[element]["trainer"]{
        for trainer in trainers{
            if(place == trainers[trainer]["location"]){
                sum = sum + bit(trainers[trainer]["bit"], trainers[trainer]["address"])
                total = total + 1
            }
        }
    }
}
//Items
if(length(completion[element]["items"]) > 0 ){
    for place in completion[element]["items"]{
        for item in items{
            if(place == items[item]["location"]){
                sum = sum + bit(items[item]["bit"], items[item]["address"])
                total = total + 1
            }
        }
    }
}
//Habitat
if(length(completion[element]["pokemon"]) > 0 ){
    for pokemon in completion[element]["pokemon"]{
        sum = sum + PokemonBit(pokedex[pokemon])
        total = total + 1
    }
}

return inGame && measured(sum == total) && prev(sum) < total
}

function addPokedex(array, minus){
    sum = 0 
    total = 0
        for pokemon in array{
        sum = sum + PokemonBit(pokedex[pokemon])
        total = total + 1
    }
    
    return measured(sum == (total-minus)) && prev(sum) < (total-minus)
}

for cheevo in completion{
    achievement(
        title = completion[cheevo]["title"],
        description = completion[cheevo]["description"],
        points = completion[cheevo]["points"],
        trigger = addCompletion(cheevo)
    )
}

nishino = bit2(0x0022599b)
morimoto = bit3(0x00225998)
gameFreak = 0x0030

achievement(
"Snorlax Inspiration",
"Defeat Game Freak Nishino after becoming a champion",
10,
simpleFlag(nishino, [gameFreak]) && completedLeague == 1
)

achievement(
"Mew's True Father",
"Defeat Game Freak Morimoto after becoming a champion",
10,
simpleFlag(morimoto, [gameFreak]) && completedLeague == 1
)

tournaments = {
    1:{"title":"Truth and Ideals","description":"Win the Unova Leaders Tournament", "points":10, "flag":0x228d66, "mapid":[]},
2:{"title":"Where the Adventure Truly Began","description":"Win the Kanto Leaders Tournament", "points":10, "flag":0x228d68, "mapid":[]},
3:{"title":"Tradition and Change","description":"Win the Johto Leaders Tournament", "points":10, "flag":0x228d6a, "mapid":[]},
4:{"title":"Land, Sea, and Sky","description":"Win the Hoenn Leaders Tournament", "points":10, "flag":0x228d6c, "mapid":[]},
5:{"title":"Distorted Space and Time","description":"Win the Sinnoh Leaders Tournament", "points":10, "flag":0x228d6e, "mapid":[]},
6:{"title":"Great at their Work","description":"Win the World Leaders Tournament", "points":10, "flag":0x228d70, "mapid":[]},
7:{"title":"The Best of the Best","description":"Win the Champions Tournament", "points":25, "flag":0x00228d62, "mapid":[]},
8:{"title":"Lend Me Your Strength","description":"Win the Rental Masters Tournament", "points":10, "flag":0x228d74, "mapid":[]},
9:{"title":"Mix, Mix, Swirl, Mix","description":"Win the Mix Master Tournament", "points":10, "flag":0x00228d78, "mapid":[]},
}

function tournamentWin(address){
    return inGame && mapID == 0x00c0 && word(address) == (prev(word(address)) + 1)
}

for cheevo in tournaments{
    achievement(
        tournaments[cheevo]["title"],
        tournaments[cheevo]["description"],
        tournaments[cheevo]["points"],
        tournamentWin(tournaments[cheevo]["flag"])
    )
}

typeStart = 0x228d40
typeEnd = 0x228d60

function typesTournament(){
    sum = 0
    count = 0
    for type in range(typeStart, typeEnd, 2){
        sum = sum + (word(type)/word(type))
        count = count +1
    }
    return
    measured(sum == count) && prev(sum) == (count-1)
}

achievement(
    "The Avatar: Master of All 17 Types",
    "Win all of the Type Expert Tournaments",
    50,
    inGame && typesTournament()
)

subwayPointer = tbyte(0x0023b5f4)
subwayType = byte(subwayPointer + 0x09)
subwayWins = word(subwayPointer + 0x0e)
superSingle = 0x05
superDouble = 0x06
superMulti = 0x07

function subwayCheevo(type){
    return
    inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayType == type && subwayWins == 49 && prev(subwayWins) == 48
}


    leaderboard(
    title = "Super Single Train", 
    description="Best streak in one session", 
    start= inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayWins == 1 && prev(subwayWins) == 0 && subwayType == superSingle, 
    cancel= always_false(), 
    submit= !inGame || subwayPointer == 0 || (subwayPointer != 0 && subwayWins == 0), 
    value=prev(subwayWins), 
    format="VALUE", 
    lower_is_better=false)
    
        leaderboard(
    title = "Super Double Train", 
    description="Best streak in one session", 
    start= inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayWins == 1 && prev(subwayWins) == 0 && subwayType == superDouble, 
    cancel= always_false(), 
    submit= !inGame || subwayPointer == 0 || (subwayPointer != 0 && subwayWins == 0), 
    value=prev(subwayWins), 
    format="VALUE", 
    lower_is_better=false)
    
            leaderboard(
    title = "Super Multi Train", 
    description="Best streak in one session", 
    start= inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayWins == 1 && prev(subwayWins) == 0 && subwayType == superMulti, 
    cancel= always_false(), 
    submit= !inGame || subwayPointer == 0 || (subwayPointer != 0 && subwayWins == 0), 
    value=prev(subwayWins), 
    format="VALUE", 
    lower_is_better=false)



achievement(
    "Single but Winning",
    "Obtain a streak of 49 on the Super Single Train",
    25,
    subwayCheevo(superSingle)
)

achievement(
    "Double Trouble",
    "Obtain a streak of 49 on the Super Double Train",
    25,
    subwayCheevo(superDouble)
)

achievement(
    "Better with Friends",
    "Obtain a streak of 49 on the Super Multi Train",
    25,
    subwayCheevo(superMulti)
)

achievement(
    "Critical Langsat",
    "Obtain a streak of 105 on any Super Train to obtain a Lansat Berry",
    50,
    inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayWins == 105 && prev(subwayWins) == 104
    && (subwayType == superSingle || subwayType == superDouble || subwayType == superMulti)
)

achievement(
    "I Went to the Subway and All I Got Was This Lousy Berry",
    "Obtain a streak of 203 on any Super Train to obtain a Starf Berry",
    100,
    inGame && subwayPointer == prev(subwayPointer) && subwayPointer != 0 && subwayWins == 203 && prev(subwayWins) == 202
    && (subwayType == superSingle || subwayType == superDouble || subwayType == superMulti)
)

battleInstitute = 0x005d
battletestScore = word(0x00228ce6)

achievement(
    "Limit Testing",
    "Obtain a Master Rank in the Battle Institute by obtaining a score deserving of 7 stars",
    10,
    inGame && mapID == battleInstitute && battletestScore >= 6000 && battletestScore != prev(battletestScore) 
)

cynthia = byte(0x00225614)
cynthiaPlace = 0x01a0

achievement(
    "You Picked the Wrong House Fool!",
    "Defeat Cynthia in Undella Town",
    10,
    inGame && mapID == cynthiaPlace && cynthia == 0x03 && prev(cynthia) < 0x03 && prev(cynthia) > 0x00
)

pokedexCatchAll = ["Weedle",
"Kakuna",
"Beedrill",
"Rattata",
"Raticate",
"Spearow",
"Fearow",
"Sandshrew",
"Sandslash",
"Nidoran♀",
"Nidorina",
"Nidoqueen",
"Nidoran♂",
"Nidorino",
"Nidoking",
"Clefairy",
"Clefable",
"Vulpix",
"Ninetales",
"Jigglypuff",
"Wigglytuff",
"Zubat",
"Golbat",
"Venonat",
"Venomoth",
"Psyduck",
"Golduck",
"Growlithe",
"Arcanine",
"Poliwag",
"Poliwhirl",
"Poliwrath",
"Abra",
"Kadabra",
"Alakazam",
"Slowpoke",
"Slowbro",
"Magnemite",
"Magneton",
"Farfetch'd",
"Doduo",
"Dodrio",
"Seel",
"Dewgong",
"Grimer",
"Muk",
"Shellder",
"Cloyster",
"Onix",
"Drowzee",
"Hypno",
"Krabby",
"Kingler",
"Lickitung",
"Koffing",
"Weezing",
"Chansey",
"Tangela",
"Horsea",
"Seadra",
"Goldeen",
"Seaking",
"Staryu",
"Starmie",
"Magmar",
"Pinsir",
"Magikarp",
"Gyarados",
"Lapras",
"Ditto",
"Eevee",
"Vaporeon",
"Jolteon",
"Flareon",
"Omanyte",
"Omastar",
"Kabuto",
"Kabutops",
"Aerodactyl",
"Dratini",
"Dragonair",
"Dragonite",
"Sentret",
"Furret",
"Spinarak",
"Ariados",
"Crobat",
"Chinchou",
"Lanturn",
"Cleffa",
"Igglybuff",
"Natu",
"Xatu",
"Mareep",
"Flaaffy",
"Ampharos",
"Marill",
"Azumarill",
"Sudowoodo",
"Politoed",
"Hoppip",
"Skiploom",
"Jumpluff",
"Aipom",
"Sunkern",
"Sunflora",
"Yanma",
"Wooper",
"Quagsire",
"Espeon",
"Umbreon",
"Murkrow",
"Pineco",
"Forretress",
"Dunsparce",
"Gligar",
"Steelix",
"Snubbull",
"Granbull",
"Qwilfish",
"Shuckle",
"Heracross",
"Sneasel",
"Swinub",
"Piloswine",
"Corsola",
"Remoraid",
"Octillery",
"Delibird",
"Mantine",
"Skarmory",
"Kingdra",
"Magby",
"Blissey",
"Larvitar",
"Pupitar",
"Tyranitar",
"Lotad",
"Lombre",
"Ludicolo",
"Taillow",
"Swellow",
"Wingull",
"Pelipper",
"Surskit",
"Masquerain",
"Shroomish",
"Breloom",
"Slakoth",
"Vigoroth",
"Slaking",
"Makuhita",
"Hariyama",
"Azurill",
"Nosepass",
"Aron",
"Lairon",
"Aggron",
"Meditite",
"Medicham",
"Electrike",
"Manectric",
"Plusle",
"Volbeat",
"Illumise",
"Roselia",
"Gulpin",
"Swalot",
"Carvanha",
"Sharpedo",
"Wailmer",
"Wailord",
"Spoink",
"Grumpig",
"Trapinch",
"Vibrava",
"Flygon",
"Cacnea",
"Cacturne",
"Swablu",
"Altaria",
"Zangoose",
"Seviper",
"Lunatone",
"Solrock",
"Barboach",
"Whiscash",
"Corphish",
"Crawdaunt",
"Baltoy",
"Claydol",
"Lileep",
"Cradily",
"Anorith",
"Armaldo",
"Feebas",
"Milotic",
"Castform",
"Shuppet",
"Banette",
"Tropius",
"Absol",
"Spheal",
"Sealeo",
"Walrein",
"Clamperl",
"Huntail",
"Relicanth",
"Luvdisc",
"Bagon",
"Shelgon",
"Salamence",
"Beldum",
"Metang",
"Metagross",
"Regirock",
"Registeel",
"Latios",
"Bidoof",
"Bibarel",
"Budew",
"Roserade",
"Cranidos",
"Rampardos",
"Shieldon",
"Bastiodon",
"Combee",
"Vespiquen",
"Pachirisu",
"Buizel",
"Floatzel",
"Ambipom",
"Drifloon",
"Drifblim",
"Buneary",
"Lopunny",
"Honchkrow",
"Stunky",
"Skuntank",
"Bronzor",
"Bronzong",
"Bonsly",
"Happiny",
"Chatot",
"Gible",
"Gabite",
"Garchomp",
"Riolu",
"Lucario",
"Hippopotas",
"Hippowdon",
"Skorupi",
"Drapion",
"Croagunk",
"Toxicroak",
"Carnivine",
"Finneon",
"Lumineon",
"Mantyke",
"Weavile",
"Magnezone",
"Lickilicky",
"Tangrowth",
"Yanmega",
"Leafeon",
"Glaceon",
"Gliscor",
"Mamoswine",
"Probopass",
"Rotom",
"Uxie",
"Mesprit",
"Azelf",
"Heatran",
"Cresselia",
"Patrat",
"Watchog",
"Lillipup",
"Herdier",
"Stoutland",
"Purrloin",
"Liepard",
"Pansage",
"Simisage",
"Pansear",
"Simisear",
"Panpour",
"Simipour",
"Munna",
"Musharna",
"Pidove",
"Tranquill",
"Unfezant",
"Blitzle",
"Zebstrika",
"Roggenrola",
"Boldore",
"Gigalith",
"Woobat",
"Swoobat",
"Drilbur",
"Excadrill",
"Audino",
"Timburr",
"Gurdurr",
"Tympole",
"Palpitoad",
"Seismitoad",
"Throh",
"Sawk",
"Sewaddle",
"Swadloon",
"Leavanny",
"Venipede",
"Whirlipede",
"Scolipede",
"Cottonee",
"Whimsicott",
"Petilil",
"Lilligant",
"Basculin",
"Sandile",
"Krokorok",
"Krookodile",
"Darumaka",
"Darmanitan",
"Maractus",
"Dwebble",
"Crustle",
"Scraggy",
"Scrafty",
"Sigilyph",
"Yamask",
"Cofagrigus",
"Tirtouga",
"Carracosta",
"Archen",
"Archeops",
"Trubbish",
"Garbodor",
"Zorua",
"Zoroark",
"Minccino",
"Cinccino",
"Gothita",
"Gothorita",
"Gothitelle",
"Ducklett",
"Swanna",
"Vanillite",
"Vanillish",
"Vanilluxe",
"Deerling",
"Sawsbuck",
"Emolga",
"Karrablast",
"Foongus",
"Amoonguss",
"Frillish",
"Jellicent",
"Alomomola",
"Joltik",
"Galvantula",
"Ferroseed",
"Ferrothorn",
"Klink",
"Klang",
"Klinklang",
"Tynamo",
"Eelektrik",
"Eelektross",
"Elgyem",
"Beheeyem",
"Litwick",
"Lampent",
"Chandelure",
"Axew",
"Fraxure",
"Haxorus",
"Cubchoo",
"Beartic",
"Cryogonal",
"Shelmet",
"Stunfisk",
"Mienfoo",
"Mienshao",
"Druddigon",
"Golett",
"Golurk",
"Pawniard",
"Bisharp",
"Bouffalant",
"Vullaby",
"Mandibuzz",
"Heatmor",
"Durant",
"Deino",
"Zweilous",
"Hydreigon",
"Larvesta",
"Volcarona",
"Cobalion",
"Terrakion",
"Virizion",
"Zekrom",
"Kyurem",
"Snivy",
"Servine",
"Serperior",
"Tepig",
"Pignite",
"Emboar",
"Oshawott",
"Dewott",
"Samurott",]

achievement(
    "Gotta Catch' em All - Black 2",
    "Catch all 409 Pokemon possible without external means (Except for Dropped Item Quest exclusive ones)",
    50,
    inGame && addPokedex(pokedexCatchAll, 6)
)

gender = byte(0x0023b481)
male = 0x00
female = 0x01

yancy = ["Meowth",
"Persian",
"Teddiursa",
"Ursaring",
"Mawile",
"Wynaut",
"Wobbuffet",
"Rhyhorn",
"Rhydon",
"Snorlax",
"Munchlax",
"Togepi",
"Togetic",
"Togekiss",
"Ralts",
"Kirlia",
"Gardevoir",
"Gallade",
"Spinda",
"Shellos",
"Gastrodon",
"Spiritomb",]

curtis = [
    "Mankey",
"Primeape",
"Phanpy",
"Donphan",
"Sableye",
"Wynaut",
"Wobbuffet",
"Rhyhorn",
"Rhydon",
"Snorlax",
"Munchlax",
"Togepi",
"Togetic",
"Togekiss",
"Ralts",
"Kirlia",
"Gardevoir",
"Gallade",
"Spinda",
"Shellos",
"Gastrodon",
"Spiritomb",
]

grottos = ["Beedrill",  
"Nidoran♀",  
"Nidoran♂",  
"Venonat",  
"Pinsir",  
"Murkrow",  
"Granbull",  
"Lombre",  
"Breloom",  
"Hariyama",  
"Medicham",  
"Manectric",  
"Bibarel",  
"Pachirisu",  
"Drifloon",  
"Stunky",  
"Chatot",]

achievement(
    "Friends with Trading Benefits",
    "Obtain all 22 Pokemon (Including Evolutions and Pre-evolved forms) exclusive to the Dropped Item Sidequest",
    10,
    inGame && ((gender == male && addPokedex(yancy,0)) || (gender == female && addPokedex(curtis,0)))
)

achievement(
    "I Love RNG",
    "Obtain all 17 Pokemon exclusive to Hidden Grottos",
    25,
    inGame && addPokedex(grottos,0)
)

medals = {
    1:{"title":"Rookie Medalist","description":"Obtain the medal given for collecting 50 medals", "points":5, "flag":0x22a8ec, "mapid":[]},
2:{"title":"Elite Medalist","description":"Obtain the medal given for collecting 100 medals", "points":10, "flag":0x22a8f0, "mapid":[]},
3:{"title":"Honored Footprints","description":"Obtain the medal given for taking 100,000 steps on the land of Unova", "points":2, "flag":0x22a90c, "mapid":[]},
4:{"title":"Wonder Writer","description":"Obtain the medal given for saving the game 100 times", "points":2, "flag":0x22a91c, "mapid":[]},
5:{"title":"Pokémon Center Fan","description":"Obtain the medal given for healing at a Pokémon Center 10 times", "points":2, "flag":0x22a920, "mapid":[]},
6:{"title":"Signboard Savvy","description":"Obtain the medal given for checking 15 Trainer Tips signs", "points":2, "flag":0x22a928, "mapid":[]},
7:{"title":"Graffiti Gazer","description":"Obtain the medal given for finding a graffiti behind a sign in Route 2", "points":2, "flag":0x22a92c, "mapid":[]},
8:{"title":"Pedaling Legend","description":"Obtain the medal given for having ridden your bicycle 500 times", "points":3, "flag":0x22a93c, "mapid":[]},
9:{"title":"Mighty Fisher","description":"Obtain the medal given for having fished 100 Pokémon", "points":3, "flag":0x22a94c, "mapid":[]},
10:{"title":"Boxes Max","description":"Obtain the medal given for fully filling your PC boxes with Pokémon", "points":5, "flag":0x22a9a8, "mapid":[]},
11:{"title":"Capturing Spree","description":"Obtain the medal given for catching 50 Pokémon in a single day", "points":5, "flag":0x22a9ac, "mapid":[]},
12:{"title":"Vending Virtuoso","description":"Obtain the medal given for having bought 10 or more drinks at vending machines", "points":3, "flag":0x22a9b0, "mapid":[]},
13:{"title":"Lucky Drink","description":"Obtain the medal given for getting a bonus drink from a vending machine", "points":2, "flag":0x22a9b4, "mapid":[]},
14:{"title":"Evolution Authority","description":"Obtain the medal given for having evolved Pokémon 100 times", "points":5, "flag":0x22a9c4, "mapid":[]},
15:{"title":"Ace Pilot","description":"Obtain the medal given for travelling using Fly 20 times", "points":3, "flag":0x22a9c8, "mapid":[]},
16:{"title":"Hustle Muscle","description":"Obtain the medal given for using Strength to drop a large boulder 20 times", "points":2, "flag":0x22a9cc, "mapid":[]},
17:{"title":"Trash Master","description":"Obtain the medal given for checking empty trash cans 10 times", "points":2, "flag":0x22a9d0, "mapid":[]},
18:{"title":"Dowsing Wizard","description":"Obtain the medal given for having found 150 hidden items", "points":5, "flag":0x22a9e0, "mapid":[]},
19:{"title":"Naming Champ","description":"Obtain the medal given for giving nicknames to Pokémon 10 times", "points":2, "flag":0x22a9e4, "mapid":[]},
20:{"title":"Television Kid","description":"Obtain the medal given for watching television 10 times", "points":2, "flag":0x22a9e8, "mapid":[]},
21:{"title":"Regular Customer","description":"Obtain the medal given for making 100 purchases at shops", "points":2, "flag":0x22a9ec, "mapid":[]},
22:{"title":"Super Rich","description":"Obtain the medal given for spending 10,000,000$ at various shops", "points":5, "flag":0x22a9fc, "mapid":[]},
23:{"title":"Smart Shopper","description":"Obtain the medal given for buying 10 or more Poké Balls at once and receiving a Premier Ball", "points":1, "flag":0x22aa00, "mapid":[]},
24:{"title":"Sweet Home","description":"Obtain the medal given for taking a rest at home", "points":1, "flag":0x22aa04, "mapid":[]},
25:{"title":"Pass Power MAX","description":"Obtain the medal given for using 100 Pass Powers", "points":5, "flag":0x22aa24, "mapid":[]},
26:{"title":"Hidden Grotto Adept","description":"Obtain the medal given for finding all the Hidden Grottoes", "points":10, "flag":0x22aa38, "mapid":[]},
27:{"title":"Hatching Aficionado","description":"Obtain the medal given for having hatched 100 Pokémon Eggs", "points":5, "flag":0x22aa48, "mapid":[]},
28:{"title":"Day-Care Faithful","description":"Obtain the medal given for leaving 100 Pokémon at the Pokémon Day Care on Unova", "points":5, "flag":0x22aa4c, "mapid":[]},
29:{"title":"Archeology Lover","description":"Obtain the medal given for having a Pokémon Fossil restored at the Nacrene Museum", "points":1, "flag":0x22aa50, "mapid":[]},
30:{"title":"Rail Enthusiast","description":"Obtain the medal given for having heard information on all the trains in Anville Town", "points":3, "flag":0x22aa64, "mapid":[]},
31:{"title":"Wailord Watcher","description":"Obtain the medal given for the rare sight of a Wailord swimming past the Marine Tube", "points":3, "flag":0x22aa68, "mapid":[]},
32:{"title":"Face Board Memorial","description":"Obtain the medal given for taking a commemorative photo at the face board in Humilau City", "points":2, "flag":0x22aa6c, "mapid":[]},
33:{"title":"Heavy Machinery Pro","description":"Obtain the medal given for correctly answering the Heavy Machinery Pro's five questions in Twist Mountain", "points":5, "flag":0x22aa70, "mapid":[]},
34:{"title":"Ruins Raider","description":"Obtain the medal given for reaching the deepest part of the Abyssal Ruins", "points":5, "flag":0x22aa74, "mapid":[]},
35:{"title":"Diamond Dust","description":"Obtain the medal given for watching the rare diamond dust in Icirrus City", "points":5, "flag":0x22aa78, "mapid":[]},
36:{"title":"Bridge Enthusiast","description":"Obtain the medal given for visiting all the bridges in the Unova region", "points":5, "flag":0x22aa7c, "mapid":[]},
37:{"title":"Battle Virtuoso","description":"Obtain the medal given for having fought 2,000 battles", "points":10, "flag":0x22aa94, "mapid":[]},
38:{"title":"Magikarp Award","description":"Obtain the medal given for using Splash in battle", "points":1, "flag":0x22aaa8, "mapid":[]},
39:{"title":"Never Give Up","description":"Obtain the medal given for using Struggle in battle", "points":1, "flag":0x22aaac, "mapid":[]},
40:{"title":"Noneffective Artist","description":"Obtain the medal given for using a move that has no effect on a Pokémon", "points":1, "flag":0x22aab0, "mapid":[]},
41:{"title":"Supereffective Savant","description":"Obtain the medal given for using a super-effective move a total of 100 times", "points":5, "flag":0x22aab4, "mapid":[]},
42:{"title":"Exam Genius","description":"Obtain the medal given for taking 50 Battle Tests", "points":10, "flag":0x22aae0, "mapid":[]},
43:{"title":"Exp. Millionaire","description":"Obtain the medal given for earning 1,000,000 Exp. Points in a single day", "points":5, "flag":0x22aae4, "mapid":[]},
44:{"title":"BP Wealthy","description":"Obtain the medal given for earning 100 BP", "points":5, "flag":0x22aae8, "mapid":[]},
45:{"title":"Superb Locator","description":"Obtain the medal given for meeting 10 Pokémon who appear in special conditions", "points":5, "flag":0x22aaec, "mapid":[]},
46:{"title":"Battle Repeater","description":"Obtain the medal given for battling 30 Trainers in Big Stadium and Small Court", "points":5, "flag":0x22aaf0, "mapid":[]},
47:{"title":"Cruise Connoisseur","description":"Obtain the medal given for taking 10 cruises on the Royal Unova", "points":5, "flag":0x22aaf4, "mapid":[]},
48:{"title":"1,000 Wins","description":"Obtain the medal given for beating 1,000 Trainers in Black Tower", "points":10, "flag":0x22ab48, "mapid":[]},
49:{"title":"Undefeated: Hard","description":"Obtain the medal given for defeating all trainers in area 6, 7, 8, 9, or 10 of Black Tower", "points":5, "flag":0x22ab50, "mapid":[]},
50:{"title":"Pinpoint: Hard","description":"Obtain the medal given for clearing Area 6, 7, 8, 9, or 10 of Black Tower in six battles or less", "points":5, "flag":0x22ab58, "mapid":[]},
51:{"title":"Quick Clear: Hard","description":"Obtain the medal given for clearing Area 6, 7, 8, 9, or 10 of Black Tower within 1,000 steps", "points":5, "flag":0x22ab60, "mapid":[]},
52:{"title":"Pen Pal","description":"Obtain the medal given for writing mail and having a Pokémon hold it", "points":1, "flag":0x22ab7c, "mapid":[]},
53:{"title":"Musical Star","description":"Obtain the medal given for receiving 30 good reviews in Musicals", "points":10, "flag":0x22ab90, "mapid":[]},
54:{"title":"10 Followers","description":"Obtain the medal given for having 10 followers in a Musical", "points":10, "flag":0x22ab98, "mapid":[]},
55:{"title":"Ferris Wheel Fan","description":"Obtain the medal given for riding the ferris wheel with all nine possible guests", "points":5, "flag":0x22abb8, "mapid":[]},
56:{"title":"Guiding Champ","description":"Obtain the medal given for guiding 100 customers in Join Avenue", "points":5, "flag":0x22abc8, "mapid":[]},
57:{"title":"Extreme Developer","description":"Obtain the medal given for creating 50 shops in Join Avenue", "points":5, "flag":0x22abd8, "mapid":[]},
58:{"title":"Tycoon of Souvenirs","description":"Obtain the medal given for receiving 100 souvenirs in Join Avenue", "points":25, "flag":0x22abe8, "mapid":[]},
59:{"title":"Avenue of Fame","description":"Obtain the medal given for raising Join Avenue to rank 10 and naming it", "points":10, "flag":0x22abec, "mapid":[]},
60:{"title":"Popular Movie Star","description":"Obtain the medal given for releasing all movies in Pokéstar Studios", "points":25, "flag":0x22ac44, "mapid":[]},
61:{"title":"Masterpiece Star","description":"Obtain the medal given for releasing all movies with good endings in Pokéstar Studios", "points":25, "flag":0x22ac48, "mapid":[]},
62:{"title":"Blockbuster Star","description":"Obtain the medal given for having reached box sales of 100 billion $ in Pokéstar Studios", "points":10, "flag":0x22ac4c, "mapid":[]},
63:{"title":"Cult Classic Star","description":"Obtain the medal given for releasing all movies with strange endings in Pokéstar Studios", "points":25, "flag":0x22ac54, "mapid":[]},
64:{"title":"Funfest Complete","description":"Obtain the medal given for completing all the Funfest Missions", "points":50, "flag":0x22ac80, "mapid":[]},
65:{"title":"Supreme Challenger","description":"Obtain the medal for having collected all the Challenge Medals", "points":50, "flag":0x22acdc, "mapid":[]},
}

function badgeFlag(address){
    trueAddress = address + 0x02
    sum = bit0(trueAddress) + (bit1(trueAddress)*2) + (bit2(trueAddress)*4)
    return inGame && sum == 0x04 && prev(sum) < 0x04
}

for cheevo in medals{
    achievement(
        title = medals[cheevo]["title"],
        description = medals[cheevo]["description"],
        points = medals[cheevo]["points"],
        trigger = badgeFlag(medals[cheevo]["flag"])
    )
}

tmQuantityStart = 0x0021e00a
tmQuantityEnd = 0x0021e1ba

function tms(){
    sum = 0
    for tm in range(tmQuantityStart, tmQuantityEnd, 4){
        sum = sum + word(tm)
    }
    return
    measured(sum == 101) && prev(sum) == 100
}

achievement(
    "Collecting Machine",
    "Obtain all 6 HMs and 95 TMs",
    25,
    inGame && tms()
)



