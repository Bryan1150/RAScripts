// Yu-Gi-Oh! GX Tag Force
// #ID = 7532

GameState = byte(0x00a65330)

function SaveProtection(){
    return prev(bit5(0xA74990)) == 1 && (GameState == 0x02 || GameState == 0x06)
}

MainProgression = {
    1:{"title":"Energetic Bonds","description":"Become tag partners with ", "character":"Jaden Yuki", "address":0x00a654a4},
2:{"title":"Jaden's Tag Team Triumph","description":"Win the tag duel championship with ", "character":"Jaden Yuki", "address":0x00a654a4},
3:{"title":"Elemental Hero's Final Stand","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Jaden Yuki", "address":0x00a654a4},
4:{"title":"Loyal Brotherhood","description":"Become tag partners with ", "character":"Syrus Truesdale", "address":0x00a654b6},
5:{"title":"Syrus and the Tag Duel Glory","description":"Win the tag duel championship with ", "character":"Syrus Truesdale", "address":0x00a654b6},
6:{"title":"Cogs of Destiny Unite","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Syrus Truesdale", "address":0x00a654b6},
7:{"title":"Culinary Collaboration","description":"Become tag partners with ", "character":"Chumley Huffington", "address":0x00a654c8},
8:{"title":"Chumley's Recipe for Victory","description":"Win the tag duel championship with ", "character":"Chumley Huffington", "address":0x00a654c8},
9:{"title":"Friendship Forged in Battle","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Chumley Huffington", "address":0x00a654c8},
10:{"title":"Skilled Companions","description":"Become tag partners with ", "character":"Alexis Rhodes", "address":0x00a654da},
11:{"title":"Alexis and the Duelist Duo","description":"Win the tag duel championship with ", "character":"Alexis Rhodes", "address":0x00a654da},
12:{"title":"Radiant Warrior's Triumph","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Alexis Rhodes", "address":0x00a654da},
13:{"title":"Rivalry Reignited","description":"Become tag partners with ", "character":"Chazz Princeton", "address":0x00a654ec},
14:{"title":"Chazz's Path to Tag Duel Victory","description":"Win the tag duel championship with ", "character":"Chazz Princeton", "address":0x00a654ec},
15:{"title":"Ojama Overdrive","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Chazz Princeton", "address":0x00a654ec},
16:{"title":"Academic Collaboration","description":"Become tag partners with ", "character":"Bastion Misawa", "address":0x00a654fe},
17:{"title":"Bastion's Academic Tag Mastery","description":"Win the tag duel championship with ", "character":"Bastion Misawa", "address":0x00a654fe},
18:{"title":"Enlightened Duelist's Triumph","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Bastion Misawa", "address":0x00a654fe},
19:{"title":"Lone Warrior's Alliance","description":"Become tag partners with ", "character":"Zane Truesdale", "address":0x00a65510},
20:{"title":"Zane's Dominance in Tag Duels","description":"Win the tag duel championship with ", "character":"Zane Truesdale", "address":0x00a65510},
21:{"title":"Cyber Dragons vs. Shadows","description":"Defeat the Shadowriders and Kagemaru with ", "character":"Zane Truesdale", "address":0x00a65510},
}

SideProgression = {
    1:{"title":"Academic Ascendancy","description":"Complete the game with ", "character":"Vellian Crowler", "address":0xA65522},
2:{"title":"Scholastic Supremacy","description":"Complete the game with ", "character":"Lyman Banner", "address":0xA65534},
3:{"title":"Heroic Journey","description":"Complete the game with ", "character":"Atticus Rhodes", "address":0xA65546},
4:{"title":"Vampiric Reign","description":"Complete the game with ", "character":"Camula", "address":0xA65558},
5:{"title":"Enigmatic Triumph","description":"Complete the game with ", "character":"Tania", "address":0xA6556A},
6:{"title":"Shadow Syndicate","description":"Complete the game with ", "character":"Don Zaloog", "address":0xA6557C},
7:{"title":"Ancient Power","description":"Complete the game with ", "character":"Abidos the Third", "address":0xA6558E},
8:{"title":"Colossal Conquest","description":"Complete the game with ", "character":"Titan", "address":0xA655A0},
9:{"title":"Duelist Revelation","description":"Complete the game with ", "character":"Amnael", "address":0xA655B2},
10:{"title":"Shadow Realm Conquest","description":"Complete the game with ", "character":"Kagemaru", "address":0xA655C4},
11:{"title":"Fiery Duelist Legacy","description":"Complete the game with ", "character":"Damon", "address":0xA655D6},
12:{"title":"Nature's Harmony","description":"Complete the game with ", "character":"Jasmine", "address":0x00a655fa},
13:{"title":"Mystic Spells","description":"Complete the game with ", "character":"Mindy", "address":0x00a6560c},
14:{"title":"Spirit Summoning","description":"Complete the game with ", "character":"Blair", "address":0x00a65630},
15:{"title":"Tag Team Tactics","description":"Complete the game with ", "character":"Para", "address":0x00a65642},
16:{"title":"Tag Team Strategy","description":"Complete the game with ", "character":"Dox", "address":0x00a65654},
17:{"title":"Mystical Mastery","description":"Complete the game with ", "character":"Dark Magician Girl", "address":0x00a65666},
18:{"title":"Machine Domination","description":"Complete the game with ", "character":"Jinzo", "address":0x00a65678},
19:{"title":"Elegant Duels","description":"Complete the game with ", "character":"Sadie", "address":0x00a6569c},
20:{"title":"Whimsical Challenges","description":"Complete the game with ", "character":"Dorothy", "address":0x00a656ae},
21:{"title":"Duelist Family Reunion","description":"Complete the game with ", "character":"Slade Princeton", "address":0x00a656c0},
22:{"title":"Rhythmic Duels","description":"Complete the game with ", "character":"Jagger Princeton", "address":0x00a656d2},
23:{"title":"Fashionable Duels","description":"Complete the game with ", "character":"Fonda Fontaine", "address":0x00a65708},
24:{"title":"Risky Triumph","description":"Complete the game with ", "character":"The Gambler", "address":0x00a6571a},
25:{"title":"Mirage Duels","description":"Complete the game with ", "character":"Yasmin", "address":0x00a6572c},
26:{"title":"Shadow of Darkness","description":"Complete the game with ", "character":"Nightshroud", "address":0x00a65750},
}

FillerProgression = [0xA65762	,
0xA65774	,
0xA65786	,
0xA65798	,
0xA657AA	,
0xA657BC	,
0xA65804	,
0xA65816	,
0xA65828	,
0xA6583A	,
0xA6584C	,
0xA6585E	,
0xA65870	,
0xA65882	,
0xA65894	,
0xA658A6	,
0xA658B8	,
0xA658CA	,
0xA658DC	,
0xA658EE	,
0xA65900	,
0xA65912	,
0xA65924	,
0xA65936	,
0xA65948	,
0xA6595A	,
0xA6596C	,
0xA6597E	,
0xA65990	,
0xA659A2	,
0xA659B4	,
0xA659C6	,
0xA659D8	,
0xA659EA	,
0xA659FC	,
0xA65A0E	,
0xA65A20	,
0xA65A32	,
0xA65A44	,
0xA65A56	,
0xA65A68	,
0xA65A7A	,
0xA65A8C	,
0xA65A9E	,
0xA65AB0
	,
0xa65bac	,
0xa65bbe	,
0xa65bd0	,
0xa65be2	,
0xa65bf4	,
0xa65c06	,
0xa65c2a	,
0xa65c3c	,
0xa65c4e	,
0xa65c60	,
0xa65c72	,
0xa65c84	,
0xa65c96	,
0xa65cba	,
0xa65ccc	,
0xa65cde	,
0xa65cf0	,
0xa65d02	,
0xa65d26	,
0xa65d4a	,
0xa65d5c	,
0xa65d6e	,
0xa65d92	,
0xa65db6	,
0xa65e10	,
0xa65e22	,
0xa65e34	,
0xa65e46	,
0xa65e58	,
0xa65e6a	,
0xa65e7c	,]
FillerTitles = {
1:{"title":"Master Duelist Extraordinaire","quantity":5},
2:{"title":"Supreme Tournament Champion","quantity":10},
3:{"title":"Tag Team Triumph","quantity":15},
4:{"title":"Unleashing Deck Mastery","quantity":20},
5:{"title":"Unyielding Strategies","quantity":25},
6:{"title":"Conqueror of Challenges","quantity":30},
7:{"title":"Rising Star of the Duel Ranks","quantity":35},
8:{"title":"Legendary Duelist Legacy","quantity":40},
9:{"title":"Grand Tournament Success","quantity":45},
10:{"title":"Diverse Duelists","quantity":50},
11:{"title":"Unlocked Potential Unleashed","quantity":55},
12:{"title":"Unleashing the Hidden Power","quantity":60},
13:{"title":"Victory in the Shadows","quantity":65},
14:{"title":"Duelist of Legends","quantity":70},
}

Partner = 0x01
Tourney = 0x02
BeatGame = 0x03

function CompletedStage(address, stage){
    return SaveProtection() && word(address) == stage && prev(word(address)) == stage -1
}
counterProgression = 0

//Main Characters
for cheevo in MainProgression{
    counterProgression = counterProgression + 1
    achievement(
        title = MainProgression[cheevo]["title"],
        description = MainProgression[cheevo]["description"] +  MainProgression[cheevo]["character"],
        points = 10,
        trigger = CompletedStage(MainProgression[cheevo]["address"], counterProgression)
    )
    if(counterProgression == 3){
        counterProgression = 0
    }
}

//Side Characters
for cheevo in SideProgression{
    achievement(
        title = SideProgression[cheevo]["title"],
        description = SideProgression[cheevo]["description"] +  SideProgression[cheevo]["character"],
        points = 25,
        trigger = CompletedStage(SideProgression[cheevo]["address"], BeatGame)
    )
}



//Filler Characters
function SumFiller(quantity){
    sum = 0 
    for filler in FillerProgression{
        sum = sum + (bit0(filler) * bit1(filler))
    }
    return measured(sum == quantity) && prev(sum) == quantity - 1
}

for cheevo in FillerTitles{
    achievement(
        title = FillerTitles[cheevo]["title"],
        description = "Complete the game with " + FillerTitles[cheevo]["quantity"] + " 'Duelist 3' characters",
        points = 50,
        trigger = SaveProtection() && SumFiller(FillerTitles[cheevo]["quantity"])
    )
}

achievement(
    title = "Tag Duel Legend",
    description = "Complete the game with all the 'Duelist 3' characters",
    points = 25,
    trigger = SaveProtection() && SumFiller(length(FillerProgression))
)

BonusStart = 0x00a668a8
BonusEnd = 0x00a668fa

function BonusCheck(quantity){
    sum = 0
    for bonus in range(BonusStart,BonusEnd){
        if(bonus != 0x00a668af){
        sum = sum + byte(bonus) / byte(bonus)
        }
    }
    return measured(sum == quantity) && prev(sum) < quantity
}

achievement(
    "Bonus Bounty",
    "Obtain 82 of the Duel Bonus",
    50,
    SaveProtection() && BonusCheck(82)
)

//Packs

FirstMonster = [0xA66979,
0xA66A01,
0xA66ABD,
0xA669CD,
0xA68211,
0xA66A0D,
0xA66A9D,
0xA684A1,
0xA66F1D,
0xA686A1,
0xA67FA1,
0xA68155,
0xA66CC9,
0xA66A11,
0xA67AF1,
0xA67EB9,
0xA679E5,
0xA67F9D,
0xA66D71,
0xA686A5,
0xA67FA5,
0xA66FB9,
0xA66C11,
0xA6734D,
0xA66DB9,
0xA67171,
0xA669E1,
0xA66A39,
0xA66FF5,
0xA67205,
0xA66DF9,
0xA66C19,
0xA66B61,
0xA66F75,
0xA6708D,
0xA68599,
0xA67155,
0xA67101,
0xA66A51,
0xA68591,
0xA686A9,
0xA66FFD,
0xA67925,
0xA66A2D,
0xA67ADD,
0xA66A91,
0xA6707D,
0xA67141,
0xA66AC9,
0xA66A7D,
0xA6716D,
0xA66A61,
0xA6792D,
0xA672C9,
0xA67481,
0xA669FD,
0xA66999,
0xA66B59,
0xA679F1,
0xA66DE5,
0xA66B85,
0xA67AF9,
0xA67AD9,
0xA66C09,
0xA67AD5,
0xA66F69,
0xA66A31,
0xA66C79,
0xA66AB5,
0xA66D59,
0xA66A69,
0xA6724D,]

FirstSpellTrap = [0xA6797D,
0xA66EE5,
0xA67689,
0xA68045,
0xA68861,
0xA67795,
0xA68445,
0xA67695,
0xA67585,
0xA6895D,
0xA67659,
0xA67999,
0xA67D7D,
0xA67811,
0xA68025,
0xA6757D,
0xA67411,
0xA66E75,
0xA67835,
0xA68379,
0xA67C65,
0xA67605,
0xA67D65,
0xA675FD,
0xA67939,
0xA67F41,
0xA676A9,
0xA67E5D,
0xA676C9,
0xA66EED,
0xA67B7D,
0xA67CCD,
0xA68E85,
0xA682A5,
0xA68381,
0xA67AD1,
0xA676CD,
0xA676B5,
0xA68881,
0xA680E5,
0xA675E9,
0xA67F25,
0xA679A9,
0xA68431,
0xA68F01,
0xA6779D,
0xA6793D,
0xA67591,
0xA68545,
0xA68885,
0xA67971,
0xA67F59,
0xA68601,
0xA68661,
0xA68B69,
0xA675F9,
0xA68209,
0xA6785D,
0xA68C85,
0xA67599,
0xA676F1,
0xA67825,
0xA67CBD,
0xA675F5,
0xA68625,
0xA67D51,
0xA68631,
0xA68635,]

FirstFusion = [0xA675C9,
0xA67651,
0xA67B39,
0xA669B1,
0xA66FBD,
0xA670B9,
0xA672BD,
0xA67371,
0xA66C25,
0xA66ACD,
0xA66D1D,
0xA6720D,
0xA67365,
0xA66B89,
0xA66C15,
0xA67251,
0xA67049,
0xA67069,
0xA66E0D,
0xA66D61,
0xA6698D,
0xA66BE9,
0xA66E01,
0xA66BAD,
0xA67385,
0xA67111,
0xA66C69,
0xA66F89,
0xA66DC1,
0xA66A45,
0xA66CBD,
0xA6709D,
0xA66A21,
0xA670F5,
0xA671C9,
0xA67239,
0xA66AA1,
0xA67319,
0xA66DB5,
0xA671D9,
0xA66FD9,
0xA66BF5,
0xA66AE1,
0xA66DDD,
0xA671DD,
0xA66FA5,
0xA66E15,
0xA66CB5,
0xA66C95,
0xA670FD,
0xA66DD5,
0xA66AE5,
0xA66D0D,
0xA66BD1,
0xA66989,
0xA66A79,
0xA67199,
0xA66E21,
0xA67229,
0xA67289,
0xA66BBD,
0xA671F1,
0xA6725D,
0xA669A9,
0xA670D9,
0xA6731D,
0xA66B09,]

FirstEffectMonster = [0xA68CAD,
0xA68999,
0xA66A35,
0xA67B15,
0xA66D75,
0xA67505,
0xA66A5D,
0xA669B5,
0xA67809,
0xA680D1,
0xA678E5,
0xA679C1,
0xA683D5,
0xA6751D,
0xA683E1,
0xA67525,
0xA67671,
0xA66B3D,
0xA6791D,
0xA678A9,
0xA68175,
0xA67725,
0xA67BE5,
0xA67731,
0xA670F1,
0xA66AF1,
0xA67211,
0xA67AFD,
0xA66B55,
0xA67529,
0xA672FD,
0xA687ED,
0xA686F9,
0xA685F9,
0xA68679,
0xA67709,
0xA67FE9,
0xA674B9,
0xA66F31,
0xA6770D,
0xA6787D,
0xA6721D,
0xA68705,
0xA67185,
0xA674CD,
0xA66C91,
0xA67C01,
0xA66F9D,
0xA669A5,
0xA66FB1,
0xA66BFD,
0xA67C45,
0xA66D8D,
0xA67549,
0xA66D21,
0xA67139,
0xA66F99,]

StepUpSpellTrap = [0xA676C1,
0xA676E9,
0xA67685,
0xA677C1,
0xA6843D,
0xA6864D,
0xA67B0D,
0xA6877D,
0xA68529,
0xA67F11,
0xA67619,
0xA6865D,
0xA68931,
0xA68361,
0xA69011,
0xA67DE1,
0xA67F95,
0xA67F99,
0xA675B5,
0xA6837D,
0xA68651,
0xA6897D,
0xA677B5,
0xA67E91,
0xA68961,
0xA6803D,
0xA67855,
0xA68B8D,
0xA679A5,
0xA67559,
0xA67E19,
0xA6801D,
0xA68739,
0xA68375,
0xA68B95,
0xA68341,
0xA68011,
0xA67AE5,
0xA67AF5,
0xA6862D,
0xA68355,
0xA679AD,
0xA67D61,
0xA68609,
0xA68589,
0xA68535,
0xA680F1,
0xA68439,
0xA68295,
0xA6810D,
0xA68649,
0xA69009,
0xA67F7D,
0xA68DD1,
0xA68A85,
0xA68775,
0xA67BAD,
0xA68DD5,
0xA67F3D,
0xA67BC5,
0xA67B2D,
0xA681CD,
0xA68605,
0xA69015,
0xA68759,
0xA67A15,
0xA68029,
0xA68429,]

StepUpFusion = [0xA67F35,
0xA6753D,
0xA68945,
0xA670C1,
0xA67BA5,
0xA6894D,
0xA67019,
0xA67309,
0xA66D7D,
0xA68C71,
0xA66B29,
0xA67B65,
0xA68A81,
0xA6737D,
0xA68C95,
0xA67B61,
0xA66DA9,
0xA67B29,
0xA6733D,
0xA66C31,
0xA6705D,
0xA674DD,
0xA66F79,
0xA6699D,
0xA67169,
0xA674E1,
0xA66B15,
0xA67165,
0xA66AF9,
0xA67265,
0xA672E1,
0xA66B69,
0xA66CD1,
0xA674D5,
0xA67245,
0xA6738D,
0xA678E9,
0xA678F1,
0xA67391,
0xA67235,
0xA67021,
0xA66B41,
0xA67305,
0xA66BC9,
0xA67249,
0xA68DA1,
0xA67131,
0xA671C1,
0xA66CF1,
0xA6790D,
0xA68729,
0xA671F9,
0xA67445,
0xA670BD,
0xA670D1,
0xA68DE1,
0xA67D29,
0xA67D2D,
0xA66A05,
0xA669F5,
0xA66991,
0xA678ED,
0xA669ED,]

AntiEffect = [0xA6769D,
0xA674E9,
0xA676E5,
0xA681D9,
0xA68571,
0xA68BA5,
0xA67E89,
0xA682BD,
0xA67BED,
0xA6781D,
0xA67C7D,
0xA6763D,
0xA67C31,
0xA67FDD,
0xA68665,
0xA67C69,
0xA675A5,
0xA68D85,
0xA67BA1,
0xA67501,
0xA67E75,
0xA6809D,
0xA67C21,
0xA6845D,
0xA68A15,
0xA680F9,
0xA677BD,
0xA6887D,
0xA67B6D,
0xA67DB1,
0xA67DF1,
0xA68505,
0xA67769,
0xA675E1,
0xA67765,
0xA67BC9,
0xA67C3D,
0xA68579,
0xA68485,
0xA67565,
0xA67761,
0xA67D59,
0xA67775,
0xA67771,
0xA675CD,
0xA68685,
0xA67B89,
0xA67C05,]

LifeBreaker = [0xA66EB5,
0xA67C41,
0xA67ACD,
0xA68E99,
0xA67969,
0xA680BD,
0xA67401,
0xA67E01,
0xA67D69,
0xA675C1,
0xA68E69,
0xA67E15,
0xA677B9,
0xA682AD,
0xA68419,
0xA675C5,
0xA67615,
0xA67405,
0xA67B85,
0xA6758D,
0xA68B91,
0xA68731,
0xA68F05,
0xA69019,
0xA6775D,
0xA67A19,
0xA67E69,
0xA67F71,
0xA67FED,
0xA681E1,
0xA67DAD,
0xA67C29,
0xA675AD,
0xA6901D,
0xA67D55,
0xA6896D,
0xA673C9,
0xA67829,
0xA673FD,
0xA673C5,
0xA673CD,
0xA68DD9,
0xA67409,
0xA673F9,
0xA67961,
0xA68A0D,
0xA67E09,
0xA68035,
0xA67955,
0xA67B75,
0xA675D1,
0xA67BD1,
0xA68C89,
0xA67609,]

GoGoDirect = [0xA67881,
0xA674AD,
0xA66AD9,
0xA6798D,
0xA680E1,
0xA67175,
0xA68B99,
0xA67E29,
0xA6851D,
0xA68805,
0xA68CE9,
0xA681A1,
0xA688A1,
0xA675B1,
0xA683C5,
0xA6799D,
0xA68825,
0xA674E5,
0xA67D05,
0xA6700D,
0xA679D5,
0xA6823D,
0xA688FD,
0xA67C6D,
0xA6875D,
0xA67509,
0xA6783D,
0xA683DD,
0xA68899,
0xA684F1,
0xA66985,
0xA6846D,
0xA683D9,
0xA683D1,
0xA68655,
0xA68435,
0xA67F85,
0xA66FA9,
0xA685F1,
0xA680E9,
0xA688ED,
0xA68031,
0xA678C9,
0xA66F81,
0xA684E5,
0xA66FAD,
0xA684F9,
0xA67361,
0xA67115,
0xA684D5,
0xA68D89,
0xA678CD,
0xA68F19,]

VisitorFromTheDark = [0xA673C1,
0xA68975,
0xA67DCD,
0xA680C5,
0xA68A11,
0xA68229,
0xA685E5,
0xA68831,
0xA67739,
0xA6881D,
0xA67B21,
0xA67DB9,
0xA68219,
0xA682ED,
0xA68AF1,
0xA68185,
0xA68225,
0xA66F61,
0xA67E7D,
0xA68395,
0xA66FDD,
0xA682D9,
0xA67841,
0xA66D81,
0xA67679,
0xA6717D,
0xA68BD5,
0xA66E19,
0xA68D65,
0xA67DC9,
0xA6829D,
0xA66D19,
0xA688CD,
0xA66CF9,
0xA672C5,
0xA67E81,
0xA669D9,
0xA669F1,
0xA66C05,
0xA67861,
0xA670CD,
0xA68289,
0xA66DD9,
0xA67C09,
0xA66F59,
0xA67681,
0xA66E2D,
0xA67871,
0xA678C5,
0xA66B51,
0xA6739D,
0xA66B95,
0xA66FCD,
0xA66EF1,]

EmergentFire = [0xA683B9,
0xA688B9,
0xA68919,
0xA6831D,
0xA68A99,
0xA68309,
0xA68809,
0xA67705,
0xA686ED,
0xA68541,
0xA68149,
0xA66FF9,
0xA68EE5,
0xA683A5,
0xA6869D,
0xA68829,
0xA686D9,
0xA6749D,
0xA672CD,
0xA678D1,
0xA67B45,
0xA683AD,
0xA68461,
0xA680D5,
0xA675ED,
0xA677E1,
0xA677E9,
0xA679F5,
0xA66C35,
0xA67191,
0xA67A89,
0xA6891D,
0xA671B9,
0xA677D9,
0xA678DD,
0xA67921,
0xA66A85,
0xA66FE5,
0xA68071,
0xA68BDD,
0xA68815,
0xA67A85,
0xA66F8D,
0xA67899,
0xA677E5,
0xA67891,
0xA67485,
0xA673AD,
0xA677DD,
0xA67221,
0xA687C5,]

WaterOfLife = [0xA683F1,
0xA686F1,
0xA68D91,
0xA67D39,
0xA68469,
0xA6830D,
0xA67D91,
0xA6788D,
0xA67729,
0xA682B5,
0xA683E9,
0xA67B49,
0xA6820D,
0xA68391,
0xA67E6D,
0xA68AA1,
0xA683F5,
0xA68EE1,
0xA68425,
0xA67889,
0xA671A5,
0xA683A1,
0xA6795D,
0xA68709,
0xA67EED,
0xA67055,
0xA678FD,
0xA68D95,
0xA6874D,
0xA683F9,
0xA67161,
0xA68819,
0xA68DBD,
0xA6752D,
0xA68B65,
0xA68B39,
0xA683C9,
0xA67339,
0xA68DA9,
0xA67335,
0xA67985,
0xA67EB5,
0xA67F89,
0xA684F5,
0xA68B41,
0xA678F5,
0xA6839D,
0xA679D9,
0xA66E49,
0xA68B3D,
0xA66EF9,
0xA67905,
0xA683ED,
0xA672D1,]

GiftOfWind = [0xA68FC5,
0xA678B9,
0xA68781,
0xA68BB5,
0xA6772D,
0xA688BD,
0xA683E5,
0xA68315,
0xA68EF1,
0xA68D59,
0xA672F9,
0xA67B51,
0xA67519,
0xA68FA5,
0xA68F15,
0xA678E1,
0xA68EE9,
0xA68795,
0xA68915,
0xA68ED9,
0xA679C9,
0xA670D5,
0xA66FE1,
0xA679C5,
0xA68305,
0xA67279,
0xA66FA1,
0xA677F5,
0xA66BB5,
0xA6880D,
0xA672C1,
0xA678F9,
0xA677F9,
0xA679BD,
0xA67C85,
0xA675F1,
0xA670ED,
0xA66E25,
0xA6719D,
0xA68151,
0xA67121,
0xA670C5,
0xA687F1,
0xA67015,
0xA68079,
0xA66B49,
0xA679DD,
0xA670B5,
0xA67215,
0xA67EF1,
0xA66B5D,]

PlatinumLight = [0xA68A3D,
0xA68E15,
0xA684ED,
0xA68A2D,
0xA682F5,
0xA68E21,
0xA686E5,
0xA674F9,
0xA67721,
0xA69005,
0xA687D5,
0xA68689,
0xA68A51,
0xA68479,
0xA67E25,
0xA68E1D,
0xA67125,
0xA67D89,
0xA67EE5,
0xA67B41,
0xA6868D,
0xA68EA5,
0xA687D9,
0xA68691,
0xA68B49,
0xA68EED,
0xA6855D,
0xA67295,
0xA67AA5,
0xA673D1,
0xA66DF5,
0xA68A59,
0xA67B5D,
0xA67541,
0xA687E9,
0xA688C9,
0xA66E41,
0xA66C5D,
0xA68E19,
0xA6883D,
0xA67F79,
0xA67F75,
0xA67351,
0xA66A29,
0xA68671,
0xA67EA5,
0xA66DC5,
0xA682B1,
0xA672F5,
0xA68555,
0xA68481,
0xA679E9,]

EarthDwellers = [0xA67DBD,
0xA689F1,
0xA68B45,
0xA68F9D,
0xA68D8D,
0xA676FD,
0xA68311,
0xA67C2D,
0xA68A05,
0xA674D9,
0xA68FA1,
0xA68EDD,
0xA689E9,
0xA68E01,
0xA671C5,
0xA67B55,
0xA68BA9,
0xA679E1,
0xA68901,
0xA689E5,
0xA686FD,
0xA688B5,
0xA684DD,
0xA68495,
0xA671B1,
0xA67B4D,
0xA6870D,
0xA66AAD,
0xA68FC9,
0xA6879D,
0xA688B1,
0xA67DD9,
0xA68501,
0xA68715,
0xA685C9,
0xA68D79,
0xA688C5,
0xA689F9,
0xA68E05,
0xA68A09,
0xA66E85,
0xA68B0D,
0xA68A55,
0xA685B9,
0xA68A61,
0xA689E1,
0xA689D9,
0xA689FD,
0xA68A79,
0xA68FC1,
0xA68A01,
0xA68399,
0xA68D75,
0xA68A89,
0xA68DAD,]

EndlessThoughts = [0xA67821,
0xA679B5,
0xA68611,
0xA676E1,
0xA67D4D,
0xA673A1,
0xA67945,
0xA673D5,
0xA68761,
0xA67819,
0xA67851,
0xA68285,
0xA67D5D,
0xA67995,
0xA676BD,
0xA68451,
0xA67B79,
0xA677B1,
0xA68335,
0xA68939,
0xA676B1,
0xA67BB5,
0xA67849,
0xA67F31,
0xA67F0D,
0xA68345,
0xA68769,
0xA66E9D,
0xA68A6D,
0xA67981,
0xA675B9,
0xA677C9,
0xA67979,
0xA68019,
0xA68659,
0xA66EA5,
0xA68765,
0xA68559,
0xA68B9D,
0xA68349,
0xA677A9,
0xA68455,
0xA680ED,
0xA68799,
0xA68A69,
0xA66EA9,
0xA66EE9,
0xA67791,
0xA68749,
0xA67A01,
0xA66EAD,
0xA66EA1,
0xA6776D,
0xA66EB1,
0xA67A09,]

FlipThePicture = [0xA676F5,
0xA66B0D,
0xA672B1,
0xA680C9,
0xA67025,
0xA677D1,
0xA685ED,
0xA672DD,
0xA6771D,
0xA67CD1,
0xA67DC5,
0xA678C1,
0xA6729D,
0xA67301,
0xA678B1,
0xA67149,
0xA67C39,
0xA6723D,
0xA68711,
0xA68099,
0xA68E9D,
0xA671E5,
0xA670C9,
0xA66C21,
0xA67531,
0xA68925,
0xA67EFD,
0xA682D5,
0xA680D9,
0xA67495,
0xA67FE5,
0xA689F5,
0xA682DD,
0xA68ED5,
0xA68719,
0xA671E9,
0xA67379,
0xA6711D,
0xA67511,
0xA67D99,
0xA66D9D,
0xA686E9,
0xA66AC5,
0xA685D9,
0xA670AD,
0xA6766D,
0xA67B59,
0xA66CF5,
0xA67291,
0xA68A19,
0xA682FD,]

EquipMe = [0xA66E35,
0xA673B5,
0xA677C5,
0xA688F9,
0xA681A5,
0xA68235,
0xA67129,
0xA681B1,
0xA681A9,
0xA68005,
0xA66E51,
0xA67B69,
0xA67FFD,
0xA67BA9,
0xA681BD,
0xA68859,
0xA68325,
0xA67D35,
0xA66E79,
0xA67951,
0xA68CED,
0xA68015,
0xA67691,
0xA67AB9,
0xA681D5,
0xA6814D,
0xA68869,
0xA67F21,
0xA674F1,
0xA68115,
0xA66E65,
0xA673B1,
0xA66E91,
0xA67665,
0xA68165,
0xA6815D,
0xA68161,
0xA68169,
0xA6816D,
0xA68159,
0xA66E59,
0xA66E5D,
0xA66E3D,
0xA66E39,
0xA66E71,
0xA68A65,
0xA67669,
0xA66E95,
0xA66E8D,
0xA681DD,
0xA681AD,
0xA681B9,
0xA67D41,
0xA67699,
0xA67655,
0xA68DC1,
0xA676D1,
0xA66E4D,
0xA678A5,]

MoreEternalMemories = [0xA67B01,
0xA67AE9,
0xA6861D,
0xA67A1D,
0xA67759,
0xA68121,
0xA67DFD,
0xA68489,
0xA68371,
0xA67601,
0xA68551,
0xA68499,
0xA6778D,
0xA67B09,
0xA67965,
0xA68051,
0xA68C99,
0xA677A5,
0xA67949,
0xA67831,
0xA681C5,
0xA67661,
0xA67D49,
0xA68D7D,
0xA67F2D,
0xA67C59,
0xA68E09,
0xA6888D,
0xA68449,
0xA681C9,
0xA68EFD,
0xA68E95,
0xA67C11,
0xA67781,
0xA67741,
0xA676A5,
0xA6886D,
0xA67751,
0xA67649,
0xA68871,
0xA686E1,
0xA67785,
0xA67749,
0xA67755,
0xA685B5,
0xA677CD,
0xA6774D,
0xA69021,
0xA68895,
0xA67B99,
0xA67B91,
0xA67B9D,
0xA67B95,
0xA6836D,
0xA67745,
0xA68879,]

SpeedKing = [0xA67DE5,
0xA67629,
0xA68369,
0xA68B05,
0xA68875,
0xA67B05,
0xA67631,
0xA68ED1,
0xA67F45,
0xA68EB9,
0xA68F11,
0xA6762D,
0xA67CC1,
0xA6802D,
0xA68459,
0xA68BA1,
0xA68565,
0xA67E05,
0xA68421,
0xA68DE9,
0xA67595,
0xA67635,
0xA68EC9,
0xA679B1,
0xA68DED,
0xA67575,
0xA67571,
0xA680FD,
0xA67DF5,
0xA67B71,
0xA68A95,
0xA676D5,
0xA68849,
0xA6860D,
0xA67E71,
0xA682A9,
0xA68A91,
0xA68F0D,
0xA676D9,
0xA67F51,
0xA67DF9,]

SpiceOfDuel = [0xA67E51,
0xA68261,
0xA68BFD,
0xA67D21,
0xA68581,
0xA687E5,
0xA67D1D,
0xA67491,
0xA67E45,
0xA67561,
0xA67F6D,
0xA67D9D,
0xA67FBD,
0xA68B2D,
0xA68C91,
0xA67E21,
0xA67E4D,
0xA67E55,
0xA67EA9,
0xA67F65,
0xA68049,
0xA67D11,
0xA67F61,
0xA6804D,
0xA67F69,
0xA67521,
0xA67FCD,
0xA68001,
0xA67FA9,
0xA68841,
0xA67FB5,
0xA67FC9,
0xA67D31,
0xA68041,
0xA67FD1,
0xA67FF9,
0xA67D25,
0xA67D15,
0xA67FB1,
0xA67D01,
0xA67489,
0xA6825D,
0xA67D19,
0xA67FAD,
0xA68B31,
0xA67FC1,
0xA67D71,
0xA67D45,
0xA67D0D,
0xA67E41,
0xA67E49,
0xA6748D,
0xA67FD5,
0xA67FC5,
0xA68BC9,
0xA68BF9,
0xA68BD9,
0xA67FB9,]

FairySky = [0xA68ECD,
0xA6856D,
0xA68531,
0xA68519,
0xA676F9,
0xA6844D,
0xA68EF5,
0xA67CD9,
0xA68EB5,
0xA684B5,
0xA67CC9,
0xA68EC5,
0xA68EC1,
0xA6773D,
0xA68EB1,
0xA68F09,
0xA678D5,
0xA67B1D,
0xA67CC5,
0xA68699,
0xA67CE5,
0xA6728D,
0xA67029,
0xA66C8D,
0xA67315,
0xA66D09,
0xA67CB1,
0xA66C75,
0xA68549,
0xA68EAD,
0xA68585,
0xA6858D,
0xA68845,
0xA6885D,
0xA672B5,
0xA684AD,
0xA67919,
0xA66E55,
0xA66C1D,
0xA67AAD,
0xA672D9,
0xA684BD,
0xA684C1,
0xA684B9,
0xA67AA9,
0xA684A5,
0xA66D95,
0xA67359,]

DragonDrive = [0xA68B5D,
0xA67EA1,
0xA68CF5,
0xA67D85,
0xA67CB9,
0xA68701,
0xA67E9D,
0xA6745D,
0xA68821,
0xA67C99,
0xA68CF1,
0xA68675,
0xA68669,
0xA67CA1,
0xA686DD,
0xA68991,
0xA67C71,
0xA67C75,
0xA67C89,
0xA6789D,
0xA67C91,
0xA67261,
0xA66CD9,
0xA67CA5,
0xA67C81,
0xA66AED,
0xA67F5D,
0xA68DB1,
0xA66E99,
0xA67C4D,
0xA66A15,
0xA67145,
0xA66E61,
0xA67BB1,
0xA67C95,
0xA686F5,
0xA66A09,
0xA67C79,
0xA67459,
0xA66F71,
0xA6867D,
0xA67C9D,
0xA67C8D,
0xA66A89,
0xA67C35,
0xA66E1D,]

FiendNight = [0xA67BE9,
0xA68231,
0xA68259,
0xA67AE1,
0xA68C6D,
0xA6850D,
0xA68C51,
0xA67E2D,
0xA6828D,
0xA68255,
0xA68C49,
0xA685DD,
0xA68279,
0xA68C79,
0xA68B21,
0xA68251,
0xA67BF1,
0xA68569,
0xA67BF5,
0xA68C4D,
0xA682A1,
0xA685AD,
0xA67C0D,
0xA68299,
0xA68C41,
0xA68C45,
0xA6827D,
0xA68C81,
0xA66E31,
0xA68249,
0xA6824D,
0xA67645,
0xA68B29,
0xA68239,
0xA685E1,
0xA67E79,
0xA68475,
0xA68595,
0xA6817D,
0xA6821D,
0xA67E61,
0xA68C55,
0xA68245,
0xA67BFD,
0xA67C1D,
0xA6761D,
0xA68C7D,
0xA67C19,
0xA685A9,
0xA68241,
0xA67BF9,
0xA68C31,]

SkillfulSpellcasters = [0xA68319,
0xA683B5,
0xA67B31,
0xA68095,
0xA67EBD,
0xA681F1,
0xA687B9,
0xA67F1D,
0xA68091,
0xA68AED,
0xA67EE9,
0xA688F1,
0xA68B51,
0xA6805D,
0xA67ED5,
0xA67EC9,
0xA67B35,
0xA680A1,
0xA6838D,
0xA67F39,
0xA67EE1,
0xA67EF5,
0xA68119,
0xA680B9,
0xA66E81,
0xA67EF9,
0xA66CD5,
0xA68109,
0xA67EDD,
0xA67ED9,
0xA67EC1,
0xA67EC5,
0xA67ECD,
0xA67ED1,
0xA674C9,
0xA67641,
0xA68CB5,
0xA680AD,
0xA687BD,
0xA68101,
0xA68111,
0xA68CB1,
0xA68681,
0xA680DD,
0xA680A5,
0xA67F55,
0xA685C1,
0xA6808D,
0xA69001,]

ColdSkin = [0xA67DDD,
0xA67DC1,
0xA67D8D,
0xA68141,
0xA67DD1,
0xA68A35,
0xA6898D,
0xA6840D,
0xA684C9,
0xA67F01,
0xA67DED,
0xA68181,
0xA67DD5,
0xA67DA9,
0xA67875,
0xA67F09,
0xA67DA1,
0xA685A5,
0xA68641,
0xA68995,
0xA68195,
0xA68989,
0xA66AC1,
0xA682E5,
0xA66AFD,
0xA68179,
0xA66B91,
0xA66BDD,
0xA67E65,
0xA67DB5,
0xA67F81,
0xA68DA5,
0xA66C89,
0xA67F05,
0xA66CA1,
0xA6859D,
0xA66B01,
0xA68BD1,
0xA679D1,
0xA685E9,
0xA6857D,
0xA66F35,
0xA669D5,
0xA684CD,
0xA6863D,
0xA68639,
0xA67225,
0xA684D1,
0xA66E7D,
0xA67DA5,]

RitualDance = [0xA68269,
0xA68DB9,
0xA68135,
0xA68271,
0xA6842D,
0xA68265,
0xA68405,
0xA68A39,
0xA68DB5,
0xA67929,
0xA68275,
0xA67941,
0xA68DC9,
0xA68A5D,
0xA68949,
0xA6826D,
0xA67FF1,
0xA67701,
0xA68191,
0xA67735,
0xA673E9,
0xA6744D,
0xA673ED,
0xA67451,
0xA67471,
0xA66F29,
0xA6746D,
0xA67429,
0xA67465,
0xA67421,
0xA673F1,
0xA67431,
0xA67469,
0xA6741D,
0xA673F5,
0xA6742D,
0xA67419,
0xA67425,
0xA68755,
0xA68DCD,
0xA67439,
0xA66F05,
0xA67415,
0xA673E5,
0xA67FF5,
0xA673DD,
0xA66F15,]

WaveOfTheFuture = [0xA68F21,
0xA68E29,
0xA68F51,
0xA68FB9,
0xA69031,
0xA68E61,
0xA68E41,
0xA68F55,
0xA68E31,
0xA68F69,
0xA69025,
0xA6902D,
0xA69029,
0xA68FDD,
0xA68FE1,
0xA68FE9,
0xA68E91,
0xA68F65,
0xA68F61,
0xA68E45,
0xA68F5D,
0xA68E8D,
0xA68F81,
0xA68F85,
0xA68E2D,
0xA68F99,
0xA68F89,
0xA68FBD,
0xA68FCD,
0xA68FD5,
0xA68FD1,
0xA68FD9,
0xA68FF9,
0xA68F79,
0xA68FAD,
0xA68F95,
0xA68FFD,
0xA68F6D,
0xA68F71,
0xA68E89,
0xA68F4D,
0xA68E3D,
0xA68F59,
0xA68E39,
0xA68F75,
0xA68E25,
0xA68FA9,
0xA68FE5,
0xA68E65,
0xA68F91,
0xA68FF1,
0xA68FB1,]

GoodOlDays = [0xA68145,
0xA669C9,
0xA6768D,
0xA68385,
0xA67CF9,
0xA669C5,
0xA669BD,
0xA67DE9,
0xA669C1,
0xA669B9,
0xA67D09,
0xA68321,
0xA6819D,
0xA67625,
0xA676C5,
0xA673E1,
0xA677AD,
0xA680B1,
0xA67BBD,
0xA676ED,
0xA66EB9,
0xA67845,
0xA670E1,
0xA6849D,
0xA676DD,
0xA6726D,
0xA67611,
0xA67621,
0xA6760D,
0xA66A95,
0xA68199,
0xA6715D,
0xA66F4D,
0xA66A59,
0xA676A1,
0xA66F45,
0xA66F2D,
0xA66A55,
0xA673A5,
0xA673B9,
0xA66F95,
0xA66A81,
0xA66DCD,
0xA6834D,
0xA674C1,
0xA66F41,
0xA66F49,
0xA66F39,
0xA66F91,]

HeroEmerges = [0xA68BB9,
0xA68BE5,
0xA685F5,
0xA68B59,
0xA68E71,
0xA68BE1,
0xA68A41,
0xA68A45,
0xA68E0D,
0xA68C0D,
0xA68DF1,
0xA689C9,
0xA68441,
0xA68D2D,
0xA6872D,
0xA68AD1,
0xA68DFD,
0xA68E35,
0xA68E11,
0xA68CA1,
0xA68C09,
0xA68B55,
0xA68A71,
0xA68865,
0xA68E75,
0xA68AE9,
0xA68AF5,
0xA68CC9,
0xA68CCD,
0xA68AFD,
0xA68CC5,
0xA68CD1,
0xA68ACD,
0xA68979,
0xA689B9,
0xA689BD,
0xA689C1,
0xA68CA9,
0xA68D05,
0xA68C05,
0xA689C5,
0xA68CC1,
0xA68E81,
0xA68C19,
0xA68C2D,
0xA68E6D,
0xA68C29,
0xA68E7D,
0xA68D19,
0xA68D09,
0xA68CA5,
0xA68D49,
0xA68D39,
0xA68E79,
0xA67231,
0xA68B01,
0xA685FD,
0xA67C5D,
0xA68AF9,
0xA68AC9,]

AMachineSoulNeverSleeps = [0xA679A1,
0xA68575,
0xA68F31,
0xA68F25,
0xA68F35,
0xA68AB9,
0xA68AB5,
0xA68F2D,
0xA68AD9,
0xA68F39,
0xA68F29,
0xA67E99,
0xA68AB1,
0xA682B9,
0xA68F3D,
0xA68AD5,
0xA68F41,
0xA68ABD,
0xA68F45,
0xA67579,
0xA673BD,
0xA687CD,
0xA689B1,
0xA68AA9,
0xA68835,
0xA68AC1,
0xA66FD1,
0xA68D5D,
0xA689A9,
0xA689B5,
0xA689AD,
0xA689A5,
0xA67801,
0xA67805,
0xA68AAD,
0xA67285,
0xA67901,
0xA67895,
0xA6852D,
0xA68F49,]

BeastKingdom = [0xA680C1,
0xA68AA5,
0xA675A1,
0xA68171,
0xA67865,
0xA67CE9,
0xA68415,
0xA68911,
0xA6832D,
0xA67B3D,
0xA688D9,
0xA682F1,
0xA682CD,
0xA677D5,
0xA68955,
0xA68A31,
0xA66ECD,
0xA688D1,
0xA68725,
0xA685C5,
0xA66E45,
0xA68969,
0xA688DD,
0xA688E9,
0xA68105,
0xA67FD9,
0xA67711,
0xA682D1,
0xA685BD,
0xA67B81,
0xA66C99,
0xA688E5,
0xA688E1,
0xA66FC1,
0xA66D55,
0xA68935,
0xA68951,
0xA669D1,
0xA6818D,
0xA684FD,]

MaidenHeartbeat = [0xA68C01,
0xA6847D,
0xA68189,
0xA67869,
0xA68E59,
0xA67C61,
0xA67C55,
0xA679B9,
0xA67C51,
0xA67879,
0xA68E55,
0xA68BB1,
0xA66E6D,
0xA67D3D,
0xA66A71,
0xA6884D,
0xA68EA9,
0xA68F1D,
0xA68BCD,
0xA67A7D,
0xA67B19,
0xA66E69,
0xA68E51,
0xA68BF5,
0xA68751,
0xA687D1,
0xA66A6D,
0xA687F9,
0xA687FD,
0xA68801,
0xA66F7D,
0xA66E29,
0xA67959,
0xA6871D,
0xA67C49,
0xA67859,
0xA67A75,
0xA673A9,
0xA68BAD,]

NeverGiveUp = [0xA6841D,
0xA681D1,
0xA674A5,
0xA68061,
0xA68CDD,
0xA68CD9,
0xA67499,
0xA6866D,
0xA67AED,
0xA67569,
0xA68301,
0xA6755D,
0xA68695,
0xA68721,
0xA68BC5,
0xA68921,
0xA680B5,
0xA67539,
0xA682C9,
0xA68C9D,
0xA688D5,
0xA68339,
0xA68C11,
0xA68C25,
0xA68C21,
0xA68621,
0xA682C5,
0xA68331,
0xA68215,
0xA682C1,
0xA68BC1,
0xA6822D,
0xA68CE1,
0xA68CE5,
0xA68C8D,
0xA684C5,
0xA6765D,
0xA674A1,
0xA68351,
0xA68D45,]

WarriorPyramid = [0xA67BB9,
0xA68329,
0xA68BF1,
0xA67BC1,
0xA68BE9,
0xA68891,
0xA68B75,
0xA68B7D,
0xA67839,
0xA674B5,
0xA674FD,
0xA68B4D,
0xA68C59,
0xA68C5D,
0xA68C61,
0xA68C65,
0xA68889,
0xA67555,
0xA68515,
0xA68B85,
0xA67BC1,
0xA68085,
0xA67BCD,
0xA67BD5,
0xA68081,
0xA67BD9,
0xA68089,
0xA68A1D,
0xA68C1D,
0xA67BE1,
0xA68A21,
0xA68A25,
0xA68BED,
0xA68A75,
0xA68D9D,
0xA68D99,
0xA68B79,
0xA68B81,
0xA68DC5,
0xA68A29,]

TechnologyMaster = [0xA68FB5,
0xA68AE5,
0xA684E9,
0xA68AE1,
0xA68ADD,
0xA67975,
0xA68D55,
0xA68909,
0xA674C5,
0xA68D11,
0xA68E4D,
0xA67F19,
0xA68929,
0xA678AD,
0xA67E95,
0xA68B19,
0xA66FF1,
0xA674F5,
0xA68D3D,
0xA68B1D,
0xA68D0D,
0xA677F1,
0xA68E49,
0xA68B15,
0xA67551,
0xA67381,
0xA66FD5,
0xA67179,
0xA66F3D,
0xA66E89,
0xA67059,
0xA66F01,
0xA687C9,
0xA66F85,
0xA68D31,
0xA67389,
0xA6747D,
0xA674A9,
0xA68B61,]

VanillaGloom = [0xA67079,
0xA67375,
0xA66C6D,
0xA66BCD,
0xA67271,
0xA66B65,
0xA6706D,
0xA66C9D,
0xA66C45,
0xA66C85,
0xA67349,
0xA67311,
0xA66AF5,
0xA66A3D,
0xA6703D,
0xA66E11,
0xA66BA1,
0xA670A5,
0xA670A9,
0xA678D9,
0xA6710D,
0xA6718D,
0xA670F9,
0xA66D3D,
0xA66C3D,
0xA671E1,
0xA67009,
0xA66FE9,
0xA6714D,
0xA66D39,
0xA66AD1,
0xA66B39,
0xA66C29,
0xA67011,
0xA66BF1,
0xA66BD9,
0xA66B31,
0xA66B9D,
0xA67259,
0xA671BD,
0xA66D6D,
0xA66FB5,
0xA66C59,
0xA66A8D,
0xA67209,
0xA670E5,
0xA66C61,
0xA66DED,
0xA67275,
0xA672B9,
0xA67001,
0xA66A4D,
0xA66DC9,
0xA66AA9,
0xA66B25,
0xA672F1,
0xA66ADD,
0xA66D29,
0xA66BE5,
0xA66981,
0xA66DE1,
0xA6730D,
0xA66D5D,
0xA67031,
0xA6732D,
0xA66A1D,
0xA66B11,
0xA66CCD,
0xA66B21,
0xA672D5,
0xA66DD1,
0xA67109,
0xA66B75,
0xA6727D,
0xA67911,
0xA672E9,
0xA66C01,
0xA672A5,
0xA66C51,
0xA66CA5,
0xA67395,
0xA66D15,
0xA66C4D,
0xA671D5,
0xA67299,
0xA66D49,
0xA66DB1,
0xA66CC5,
0xA6704D,
0xA66AD5,
0xA66CED,
0xA67095,
0xA671ED,
0xA672A1,
0xA66F55,
0xA66C39,
0xA6713D,
0xA66995,
0xA66B99,
0xA671AD,
0xA66BB1,
0xA66D65,
0xA66B79,
0xA6735D,
0xA66B45,
0xA672E5,
0xA66DF1,
0xA66D4D,
0xA66B6D,
0xA66C41,
0xA6722D,
0xA67159,
0xA66E05,
0xA6712D,
0xA669E5,
0xA66D91,
0xA67321,
0xA66FC9,
0xA67189,
0xA679ED,
0xA66DA5,
0xA678BD,
0xA66FED,
0xA66CFD,
0xA66CE1,
0xA678B5,
0xA67075,
0xA67535,
0xA66BA9,
0xA671A9,
0xA67099,
0xA67355,
0xA67329,
0xA674ED,
0xA66C65,
0xA66FC5,
0xA672A9,
0xA66C7D,
0xA66B35,
0xA66BB9,
0xA66D35,
0xA66BC5,
0xA67331,
0xA674D1,
0xA66A75,
0xA671B5,
0xA66B19,
0xA670A1,
0xA67195,
0xA67151,
0xA67065,
0xA66CAD,
0xA672ED,
0xA66DA1,
0xA66D31,
0xA67041,
0xA66D41,
0xA66B7D,
0xA67045,
0xA66D89,
0xA67135,
0xA66CB9,
0xA66D11,
0xA66D05,
0xA671FD,
0xA67241,
0xA66AE9,
0xA67085,]

TagSurvivor = [0xA67CD5,
0xA678A1,
0xA67AC1,
0xA676B9,
0xA67ABD,
0xA68D35,
0xA689CD,
0xA686D5,
0xA6756D,
0xA67A0D,
0xA67005,
0xA686B5,
0xA686B9,
0xA67F49,
0xA689DD,
0xA689D1,
0xA686CD,
0xA686D1,
0xA68CD5,
0xA67EAD,
0xA68281,
0xA686B1,
0xA68BBD,
0xA6873D,
0xA675BD,
0xA687B5,
0xA687C1,
0xA67935,
0xA687DD,
0xA688C1,
0xA68D15,
0xA68D15,
0xA68D25,
0xA68D21,
0xA689D5,
0xA6889D,
0xA68D41,
0xA67E11,
0xA686BD,
0xA686C1,
0xA68A4D,
0xA68A49,
0xA681F5,
0xA68D1D,
0xA6759D,
0xA688A5,
0xA67E0D,
0xA68745,
0xA686AD,
0xA68985,
0xA681FD,
0xA681F9,]

PrincetonPower = [0xA68785,
0xA6892D,
0xA6878D,
0xA68791,
0xA66F65,
0xA68525,
0xA68629,
0xA68741,
0xA674BD,
0xA68789,
0xA6890D,
0xA68139,
0xA688AD,
0xA6807D,
0xA67CA9,
0xA67B11,
0xA6813D,
0xA68941,
0xA6893D,
0xA67581,
0xA68851,
0xA6754D,
0xA67449,
0xA671F5,
0xA66F21,
0xA67461,
0xA66F19,
0xA67545,
0xA674B1,
0xA66EF5,
0xA6767D,
0xA67455,
0xA66F0D,
0xA67441,
0xA66EFD,
0xA66F11,
0xA6743D,
0xA66F09,]

ApproachTheHotties = [0xA680A9,
0xA68055,
0xA687A9,
0xA68981,
0xA67C25,
0xA683FD,
0xA687E1,
0xA687A1,
0xA68D71,
0xA66F25,
0xA68B11,
0xA68D6D,
0xA68A9D,
0xA67479,
0xA686C9,
0xA67B25,
0xA68C3D,
0xA687B1,
0xA673D9,
0xA66A19,
0xA68D69,
0xA67475,
0xA68201,
0xA67885,
0xA688F5,
0xA66DBD,
0xA677FD,
0xA68205,
0xA66DFD,
0xA686C5,
0xA67675,
0xA684A9,
0xA68B6D,
0xA6854D,
0xA68539,]

DorothySoul = [0xA67CAD,
0xA67A81,
0xA67991,
0xA6740D,
0xA68561,
0xA68401,
0xA67719,
0xA6835D,
0xA68059,
0xA67A9D,
0xA68131,
0xA677ED,
0xA68521,
0xA67779,
0xA68009,
0xA6784D,
0xA6900D,
0xA6811D,
0xA67CDD,
0xA685CD,
0xA68291,
0xA68615,
0xA675D5,
0xA683A9,
0xA685D1,
0xA6782D,
0xA67815,
0xA6853D,
0xA66EC5,
0xA67201,
0xA68411,
0xA67AA1,
0xA67C15,
0xA66EBD,
0xA66C0D,
0xA67D75,
0xA679F9,
0xA66EC1,
0xA68EBD,
0xA67515,
0xA66EC9,
0xA67A11,
0xA681C1,]

SadieSoul = [0xA677A1,
0xA67E8D,
0xA68021,
0xA67F15,
0xA67715,
0xA67BDD,
0xA68039,
0xA68511,
0xA683BD,
0xA67799,
0xA67CE1,
0xA68125,
0xA67E85,
0xA67639,
0xA6794D,
0xA67AC9,
0xA67D6D,
0xA6764D,
0xA66EE1,
0xA68905,
0xA67105,
0xA6800D,
0xA683CD,
0xA68365,
0xA68779,
0xA68971,
0xA67F29,
0xA68645,
0xA685D5,
0xA66ED9,
0xA68B71,
0xA68DDD,
0xA66ED5,
0xA684E1,
0xA68A7D,
0xA68B89,
0xA671CD,
0xA67219,
0xA66EDD,
0xA675D9,
0xA66ED1,
0xA68FED,
0xA68A8D,]

MiddayConstellation = [0xA67D95,
0xA68EA1,
0xA68B25,
0xA68C35,
0xA68221,
0xA687F5,
0xA68839,
0xA68D61,
0xA68FF5,
0xA68509,
0xA68EF9,
0xA682E9,
0xA68075,
0xA6882D,
0xA68C75,
0xA67B8D,
0xA68B35,
0xA68409,
0xA679CD,
0xA67CFD,
0xA680CD,
0xA689ED,
0xA68C39,
0xA68DE5,
0xA68B09,
0xA688A9,
0xA68811,]

DoubleTripleDestinyDraw = [0xA675A9,
0xA675E5,
0xA67E1D,
0xA67F4D,
0xA68965,
0xA68C69,
0xA685B1,
0xA6780D,
0xA676AD,
0xA6777D,
0xA67989,
0xA68D81,
0xA67D79,
0xA6876D,
0xA67AB5,
0xA67AC5,
0xA68359,
0xA671A1,
0xA67CB5,
0xA68619,
0xA684D9,
0xA67E59,
0xA6833D,
0xA682F9,
0xA670B1,
0xA67789,
0xA68771,
0xA68E5D,
0xA67FE1,
0xA680F5,
0xA66CE5,
0xA68735,
0xA683B1,
0xA679FD,
0xA68855,
0xA68959,
0xA681B5,
0xA683C1,
0xA682E1,]

Packs = {
    21:{"title":"Master of Spices","points":5, "packName":"Spice of Duel", "packID":SpiceOfDuel},
22:{"title":"Wings of Enchantment","points":5, "packName":"Fairy's Sky", "packID":FairySky},
23:{"title":"Conqueror of Dragons","points":5, "packName":"Dragon Drive", "packID":DragonDrive},
24:{"title":"Nightmare's Bane","points":5, "packName":"Fiend Night", "packID":FiendNight},
25:{"title":"Mystic Mage","points":5, "packName":"Skillful Spellcasters", "packID":SkillfulSpellcasters},
26:{"title":"Frozen Dominion","points":5, "packName":"Cold Skin", "packID":ColdSkin},
27:{"title":"Ancient Rites","points":5, "packName":"Ritual Dance", "packID":RitualDance},
28:{"title":"Pioneer of Progress","points":5, "packName":"Wave of the Future", "packID":WaveOfTheFuture},
29:{"title":"Nostalgic Collector","points":5, "packName":"Good Ol' Days", "packID":GoodOlDays},
30:{"title":"Champion of Heroes","points":5, "packName":"Hero Emerges!", "packID":HeroEmerges},
31:{"title":"Mechanical Maestro","points":5, "packName":"A Machine's Soul Never Sleeps", "packID":AMachineSoulNeverSleeps},
32:{"title":"Savage Dominion","points":5, "packName":"Beast Kingdom", "packID":BeastKingdom},
33:{"title":"Heart's Guardian","points":5, "packName":"Maiden's Heartbeat", "packID":MaidenHeartbeat},
34:{"title":"Indomitable Spirit","points":5, "packName":"Never Give Up", "packID":NeverGiveUp},
35:{"title":"Pyramid Duelist","points":5, "packName":"Warrior's Pyramid", "packID":WarriorPyramid},
36:{"title":"Techno Savant","points":5, "packName":"Technology Master", "packID":TechnologyMaster},
37:{"title":"Master of Shadows","points":5, "packName":"Vanilla Gloom", "packID":VanillaGloom},
38:{"title":"Tag Team Dynamo","points":5, "packName":"Tag Survivor", "packID":TagSurvivor},
39:{"title":"Elite Duelist","points":5, "packName":"Princeton Power", "packID":PrincetonPower},
40:{"title":"Flirting with Destiny","points":5, "packName":"Approach the Hotties", "packID":ApproachTheHotties},
41:{"title":"Soulbound Sorceress","points":5, "packName":"Dorothy's Soul", "packID":DorothySoul},
42:{"title":"Soulful Seeker","points":5, "packName":"Sadie's Soul", "packID":SadieSoul},
43:{"title":"Celestial Navigator","points":5, "packName":"Midday Constellation (Noon Star)", "packID":MiddayConstellation},
44:{"title":"Fateful Fortune","points":5, "packName":"Double Triple Destiny Draw", "packID":DoubleTripleDestinyDraw},
}

Challenges = {
    78:{"title":"Duel Master","address":0xA668FC, "description":"Won 100 or more duels in total", "points":5},
79:{"title":"Character Champion","address":0xA668FD, "description":"Won 10 or more duels against all duelable characters", "points":10},
80:{"title":"Flawless Luck","address":0xA668FE, "description":"Won 10 coin tosses in a row", "points":25},
81:{"title":"Battle Damage Overload","address":0xA668FF, "description":"Caused 10,000 or more points of battle damage during a duel", "points":5},
82:{"title":"Master of Deflection","address":0xA66900, "description":"Caused 4,000 or more points of deflected battle damage during a duel", "points":5},
83:{"title":"Unleashed Direct Damage","address":0xA66901, "description":"Caused 20,000 or more points direct damage during a duel", "points":5},
84:{"title":"Destructive Force","address":0xA66902, "description":"Caused 50,000 or more points of damage during a duel", "points":5},
85:{"title":"Monster Slayer","address":0xA66903, "description":"Destroyed 20 of your opponent’s monsters in battle during a duel", "points":5},
86:{"title":"Effect Annihilator","address":0xA66904, "description":"Destroyed 30 of your opponent's monsters using effects during a duel", "points":5},
87:{"title":"Banisher of Monsters","address":0xA66905, "description":"Removed 10 of your opponent’s monsters from play using effects during a duel", "points":5},
88:{"title":"Summoning Prodigy","address":0xA66906, "description":"Normal Summoned 10 monsters during a duel", "points":5},
89:{"title":"Flip Summoning Expert","address":0xA66907, "description":"Performed 10 Flip Summons during a duel", "points":5},
90:{"title":"Fusion Summoning Master","address":0xA66908, "description":"Performed 10 Fusion Summons during a duel", "points":5},
91:{"title":"Ritual Summoning Conqueror","address":0xA66909, "description":"Performed 10 Ritual Summons during a duel", "points":5},
92:{"title":"Special Summoning Virtuoso","address":0xA6690A, "description":"Performed 10 Special Summons during a duel", "points":5},
93:{"title":"Graveyard Summoning Maestro","address":0xA6690B, "description":"Special Summoned 10 times from the Graveyard during a duel", "points":5},
94:{"title":"Token Summoning Magician","address":0xA6690C, "description":"Special Summoned 15 Tokens during a duel", "points":5},
95:{"title":"Union Master","address":0xA6690D, "description":"Equipped 5 Union monsters during a duel", "points":5},
96:{"title":"Toon Devastator","address":0xA6690E, "description":"Caused 8,000 or more points of direct damage with Toon monsters during a duel", "points":5},
97:{"title":"Spell Card Aficionado","address":0xA6690F, "description":"Used Spell Cards 20 times during a duel", "points":5},
98:{"title":"Quick-Play Trickster","address":0xA66910, "description":"Used Quick-Play Spell Cards 10 times in your opponent's turn in a duel", "points":5},
99:{"title":"Trap Card Enthusiast","address":0xA66911, "description":"Activated 10 Trap cards during a duel", "points":5},
100:{"title":"Master of Counters","address":0xA66912, "description":"Countered your opponent's Spells, Traps, effects, Attacks and Summons 10 times during a duel", "points":5},
101:{"title":"Enemy Monster Controller","address":0xA66913, "description":"Took control of your opponent's monsters 10 times during a duel", "points":5},
102:{"title":"Chain Link Maestro","address":0xA66914, "description":"Formed a chain of 5 chain links during a duel", "points":5},
103:{"title":"Spell Counter Specialist","address":0xA66915, "description":"Used 10 Spell Counters during a duel", "points":5},
104:{"title":"Hand Disruptor","address":0xA66916, "description":"Made your opponent discard 20 cards from his/her hand", "points":5},
105:{"title":"Life Point Restorer","address":0xA66917, "description":"Restored 20,000 or more Life Points during a duel", "points":5},
106:{"title":"Match Winner","address":0xA66918, "description":"Won the Match", "points":5},
107:{"title":"Draw Specialist","address":0xA66919, "description":"Ended the duel in a draw", "points":5},
108:{"title":"Flawless Victory","address":0xA6691A, "description":"Won the duel without taking any damage", "points":5},
109:{"title":"One-Turn Annihilation","address":0xA6691B, "description":"Caused 8,000 points or more of damage during a turn and won the duel", "points":5},
110:{"title":"Devastating Attack","address":0xA6691C, "description":"Caused 8,000 points or more of damage with a single attack or effect and won the duel", "points":5},
111:{"title":"Card Depletion Dominator","address":0xA6691D, "description":"Made your opponent run out of cards and won the duel", "points":5},
112:{"title":"Speedy Victory","address":0xA6691E, "description":"Won within 7 turns", "points":5},
113:{"title":"Swift Conqueror","address":0xA6691F, "description":"Won within 5 turns", "points":5},
114:{"title":"Quick Triumph","address":0xA66920, "description":"Won within 3 turns", "points":5},
115:{"title":"Surprise Winner","address":0xA66921, "description":"Won during your opponent’s turn", "points":5},
116:{"title":"Exodia's Chosen One","address":0xA66922, "description":"Won the duel using the effects of 'Exodia the Forbidden One'", "points":5},
117:{"title":"Destiny Board","address":0xA66923, "description":"Won the duel using the effects of 'Destiny Board'", "points":5},
118:{"title":"Countdown Victor","address":0xA66924, "description":"Won the duel using the effects of 'Final Countdown'", "points":5},
119:{"title":"Match-Winning Master","address":0xA66925, "description":"Won using a card with a match-winning effect", "points":5},
120:{"title":"Yata-Garasu Lock","address":0xA66926, "description":"Won with the 'Yata-Garasu' lock", "points":5},
121:{"title":"XYZ Series Collector","address":0xA66927, "description":"Summoned every card in the XYZ Series and won the duel", "points":5},
122:{"title":"VWXYZ-Dragon Catapult Cannon","address":0xA66928, "description":"Successfully Summoned 'VWXYZ-Dragon Catapult Cannon' and won the duel", "points":5},
123:{"title":"Uria, Lord of Searing Flames","address":0xA66929, "description":"Successfully Summoned 'Uria, Lord of Searing Flames' and won the duel", "points":5},
124:{"title":"Hamon, Lord of Striking Thunder","address":0xA6692A, "description":"Successfully Summoned 'Hamon, Lord of Striking Thunder' and won the duel", "points":5},
125:{"title":"Raviel, Lord of Phantasms","address":0xA6692B, "description":"Successfully Summoned 'Raviel, Lord of Phantasms' and won the duel", "points":5},
126:{"title":"Sacred Beast Tamer","address":0xA6692C, "description":"Summoned all the Sacred Beast Cards and won the duel", "points":5},
127:{"title":"Ojama Delta Hurricane!!","address":0xA6692D, "description":"Successfully activated and maintained the effect of 'Ojama Delta Hurricane!!' and won the duel", "points":5},
128:{"title":"Huge Revolution","address":0xA6692E, "description":"Successfully activated and maintained the effect of 'Huge Revolution' and won the duel", "points":5},
129:{"title":"Perfectly Ultimate Great Moth","address":0xA6692F, "description":"Successfully Summoned 'Perfectly Ultimate Great Moth' and won the duel", "points":5},
130:{"title":"Gate Guardian","address":0xA66930, "description":"Successfully Summoned 'Gate Guardian' and won the duel", "points":5},
131:{"title":"Valkyrion the Magna Warrior","address":0xA66931, "description":"Successfully Summoned 'Valkyrion the Magna Warrior' and won the duel", "points":5},
132:{"title":"Dark Sage","address":0xA66932, "description":"Successfully Summoned 'Dark Sage' and won the duel", "points":5},
133:{"title":"Dark Scorpion Combination","address":0xA66933, "description":"Successfully activated and maintained the effect of 'Dark Scorpion Combination' and won the duel", "points":5},
134:{"title":"Dark Scorpion Retreat","address":0xA66934, "description":"Used 'Dark Scorpion Retreat' and won the Duel", "points":5},
135:{"title":"Skull Servant","address":0xA66935, "description":"Defeated your opponent with an attack from 'Skull Servant'", "points":5},

140:{"title":"Level Variety Master","address":0xA6693A, "description":"Won with a deck that contained monsters of every Level", "points":5},




176:{"title":"Trapless Conqueror","address":0xA6695E, "description":"Won with a Deck that didn’t contain any Trap Cards", "points":5},
177:{"title":"Spellless Conqueror","address":0xA6695F, "description":"Won with a Deck that didn’t contain any Spell Cards", "points":5},
178:{"title":"Cardless Champion","address":0xA66960, "description":"Won with a Deck that didn’t contain any Spell or Trap Cards", "points":5},
179:{"title":"Massive Deck","address":0xA66961, "description":"Won with a Deck that had 80 cards in it", "points":5},
180:{"title":"Forbidden-Free Duelist","address":0xA66962, "description":"Won with a Deck that didn’t contain any Forbidden, Limited, or Semi-Limited Cards", "points":5},
181:{"title":"Singleton Master","address":0xA66963, "description":"Won with a Deck that only contained one copy of each card", "points":5},
182:{"title":"Tributeless Victor","address":0xA66964, "description":"Won without Tributing any monsters", "points":5},
183:{"title":"Special Summonless Conqueror","address":0xA66965, "description":"Won without performing a Special Summon", "points":5},
184:{"title":"Normal Summonless Victor","address":0xA66966, "description":"Won without performing a Normal Summon", "points":5},
185:{"title":"Making Friends","address":0xA66967, "description":"Made all the characters appear in the database", "points":5},
186:{"title":"Sandwich Aficionado","address":0xA66968, "description":"Acquired all Sandwich types", "points":5},
187:{"title":"The Golden Egg Master","address":0xA66969, "description":"Acquired the 'Golden Egg Sandwich'", "points":5},
188:{"title":"Story Mode Master","address":0xA6696A, "description":"Cleared Story mode for all main characters", "points":10},
189:{"title":"Story Mode Legend","address":0xA6696B, "description":"Cleared Story mode with ALL characters", "points":10},
190:{"title":"Card Collector (30% Completion)","address":0xA6696C, "description":"Card completion became 30% or higher", "points":5},
191:{"title":"Card Collector (50% Completion)","address":0xA6696D, "description":"Card completion became 50% or higher", "points":10},
192:{"title":"Card Collector (100% Completion)","address":0xA6696E, "description":"Card Completion became 100%", "points":25},
193:{"title":"Pack Completionist","address":0xA6696F, "description":"Purchased all packs", "points":5},
194:{"title":"Movie Fan","address":0xA66970, "description":"Watched all the movies", "points":5},
}

function ChallengeCheck(address){
    return byte(address)/byte(address) == 1 && prev(byte(address)) / prev(byte(address)) == 0
}
counterChallenge = 1
for pack in Challenges {
    achievement(
        title = Challenges[pack]["title"],
        description = "[Challenge " + counterChallenge + "] " + Challenges[pack]["description"] ,
        points = Challenges[pack]["points"],
        trigger = 
        SaveProtection() &&
        ChallengeCheck(Challenges[pack]["address"])
    )
    counterChallenge = counterChallenge+1
}


function PackCheck(array){
    sum = 0
    for card in array{
        sum = sum + (byte(card) / byte(card))
    }
    return measured(sum == length(array)) && prev(sum) < length(array)
}

for pack in Packs{
    achievement(
        title = Packs[pack]["title"],
        description = "Collect all cards in the " + Packs[pack]["packName"] + " booster pack",
        points = Packs[pack]["points"],
        trigger = 
        SaveProtection() &&
        PackCheck(Packs[pack]["packID"])
    )
}




achievement(
    title = "Sacred Cards of Nephthys", points = 5,
    description = "Collect all cards in the Emergent Fire booster pack",
    id = 172968, badge = "193344", published = "20/9/2021 12:10:09", modified = "20/9/2021 12:10:09",
    trigger = SaveProtection() &&
        PackCheck(EmergentFire)
)

achievement(
    title = "Blue-Shimmering White Cards", points = 5,
    description = "Collect all cards in the First Monster booster pack",
    id = 172958, badge = "193334", published = "20/9/2021 12:10:05", modified = "20/9/2021 12:10:05",
    trigger = SaveProtection() &&
        PackCheck(FirstMonster)
)

achievement(
    title = "Cards of Revealing Light", points = 5,
    description = "Collect all cards in the First Spell-Trap booster pack",
    id = 172959, badge = "193335", published = "20/9/2021 12:10:06", modified = "20/9/2021 12:10:06",
    trigger = SaveProtection() &&
        PackCheck(FirstSpellTrap)
)

achievement(
    title = "Drawmerization", points = 5,
    description = "Collect all cards in the First Fusion booster pack",
    id = 172960, badge = "193336", published = "20/9/2021 12:10:06", modified = "20/9/2021 12:10:06",
    trigger = SaveProtection() &&
        PackCheck(FirstFusion)
)

achievement(
    title = "Cardiboh", points = 5,
    description = "Collect all cards in the First Effect Monster booster pack",
    id = 172961, badge = "193337", published = "20/9/2021 12:10:06", modified = "20/9/2021 12:10:06",
    trigger = SaveProtection() &&
        PackCheck(FirstEffectMonster)
)

achievement(
    title = "Magical Cards", points = 5,
    description = "Collect all cards in the Step Up Spell-Trap booster pack",
    id = 172962, badge = "193338", published = "20/9/2021 12:10:07", modified = "20/9/2021 12:10:07",
    trigger = SaveProtection() &&
        PackCheck(StepUpSpellTrap)
)

achievement(
    title = "Fusion Game", points = 5,
    description = "Collect all cards in the Step Up Fusion booster pack",
    id = 172963, badge = "193339", published = "20/9/2021 12:10:07", modified = "20/9/2021 12:10:07",
    trigger = SaveProtection() &&
        PackCheck(StepUpFusion)
)

achievement(
    title = "Winzone", points = 5,
    description = "Collect all cards in the Anti Effect booster pack",
    id = 172964, badge = "193340", published = "20/9/2021 12:10:07", modified = "20/9/2021 12:10:07",
    trigger = SaveProtection() &&
        PackCheck(AntiEffect)
)

achievement(
    title = "Sakuretsu Drawmore", points = 5,
    description = "Collect all cards in the Life Breaker booster pack",
    id = 172965, badge = "193341", published = "20/9/2021 12:10:08", modified = "20/9/2021 12:10:08",
    trigger = SaveProtection() &&
        PackCheck(LifeBreaker)
)

achievement(
    title = "Winning Star Crown", points = 5,
    description = "Collect all cards in the Go Go Direct booster pack",
    id = 172966, badge = "193342", published = "20/9/2021 12:10:08", modified = "20/9/2021 12:10:08",
    trigger = SaveProtection() &&
        PackCheck(GoGoDirect)
)

achievement(
    title = "Dark Along", points = 5,
    description = "Collect all cards in the Visitor from the Dark booster pack",
    id = 172967, badge = "193343", published = "20/9/2021 12:10:08", modified = "20/9/2021 12:10:08",
    trigger = SaveProtection() &&
        PackCheck(VisitorFromTheDark)
)

achievement(
    title = "The Draw Monarch", points = 5,
    description = "Collect all cards in the Water of Life booster pack",
    id = 172969, badge = "193345", published = "20/9/2021 12:10:09", modified = "20/9/2021 12:10:09",
    trigger = SaveProtection() &&
        PackCheck(WaterOfLife)
)

achievement(
    title = "The Drawer", points = 5,
    description = "Collect all cards in the Gift of Wind booster pack",
    id = 173498, badge = "193925", published = "23/9/2021 16:33:39", modified = "23/9/2021 16:33:39",
    trigger = SaveProtection() &&
        PackCheck(GiftOfWind)
)

achievement(
    title = "The Collector", points = 5,
    description = "Collect all cards in the Platinum Light booster pack",
    id = 173499, badge = "193926", published = "23/9/2021 16:33:39", modified = "23/9/2021 16:33:39",
    trigger = SaveProtection() &&
        PackCheck(PlatinumLight)
)

achievement(
    title = "Mega Booster", points = 5,
    description = "Collect all cards in the Earth Dwellers booster pack",
    id = 173500, badge = "193927", published = "23/9/2021 16:33:46", modified = "23/9/2021 16:33:46",
    trigger = SaveProtection() &&
        PackCheck(EarthDwellers)
)


achievement(
    title = "Call of the Duelist", points = 5,
    description = "Collect all cards in the Endless Thoughts booster pack",
    id = 173502, badge = "193929", published = "23/9/2021 16:33:46", modified = "23/9/2021 16:33:46",
    trigger = SaveProtection() &&
        PackCheck(EndlessThoughts)
)

achievement(
    title = "Card Jar", points = 5,
    description = "Collect all cards in the Flip the Picture booster pack",
    id = 173503, badge = "193930", published = "23/9/2021 16:33:47", modified = "23/9/2021 16:33:47",
    trigger = SaveProtection() &&
        PackCheck(FlipThePicture)
)

achievement(
    title = "Draw of Victory", points = 5,
    description = "Collect all cards in the Equip Me booster pack",
    id = 173504, badge = "193931", published = "23/9/2021 16:33:47", modified = "23/9/2021 16:33:47",
    trigger = SaveProtection() &&
        PackCheck(EquipMe)
)

achievement(
    title = "Destiny Board Traveler", points = 5,
    description = "Collect all cards in the More Eternal Memories booster pack",
    id = 173505, badge = "193932", published = "23/9/2021 16:33:49", modified = "23/9/2021 16:33:49",
    trigger = SaveProtection() &&
        PackCheck(MoreEternalMemories)
)

achievement(
    title = "Negate Defense", points = 5,
    description = "Collect all cards in the Speed King booster pack",
    id = 173506, badge = "193933", published = "23/9/2021 16:33:53", modified = "23/9/2021 16:33:53",
    trigger = SaveProtection() &&
        PackCheck(SpeedKing)
)

achievement(
    title = "First Fusion - Step Up Fusion", points = 1,
    description = "Be in the academy for a week",
    id = 172709, badge = "193151", published = "19/9/2021 11:39:22", modified = "19/9/2021 11:39:22",
    trigger = SaveProtection() && prev(bit5(0xA74990)) == 1 && prev(dword(0xA748EC)) == 7 && measured(dword(0xA748EC) == 8)
)

achievement(
    title = "Endless Thoughts", points = 3,
    description = "Reach a Player-Level of 5",
    id = 172433, badge = "192876", published = "17/9/2021 13:01:57", modified = "17/9/2021 13:17:19",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 3 && (1 + prev(dword(0xA65468))) <= 4 && 
              measured((1 + dword(0xA65468)) >= 5) && (1 + dword(0xA65468)) <= 6
)

achievement(
    title = "Flip the Picture", points = 3,
    description = "Reach a Player-Level of 10",
    id = 172434, badge = "192877", published = "17/9/2021 13:01:57", modified = "17/9/2021 13:17:19",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 8 && (1 + prev(dword(0xA65468))) <= 9 && 
              measured((1 + dword(0xA65468)) >= 10) && (1 + dword(0xA65468)) <= 11
)

achievement(
    title = "Equip Me", points = 3,
    description = "Reach a Player-Level of 15",
    id = 172435, badge = "192878", published = "17/9/2021 13:01:57", modified = "17/9/2021 13:17:20",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 13 && (1 + prev(dword(0xA65468))) <= 14 && 
              measured((1 + dword(0xA65468)) >= 15) && (1 + dword(0xA65468)) <= 16
)

achievement(
    title = "More Eternal Memories", points = 3,
    description = "Reach a Player-Level of 20",
    id = 172436, badge = "192879", published = "17/9/2021 13:01:58", modified = "17/9/2021 13:17:20",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 18 && (1 + prev(dword(0xA65468))) <= 19 && 
              measured((1 + dword(0xA65468)) >= 20) && (1 + dword(0xA65468)) <= 21
)

achievement(
    title = "Speed King", points = 3,
    description = "Reach a Player-Level of 25",
    id = 172437, badge = "192880", published = "17/9/2021 13:01:58", modified = "17/9/2021 13:17:20",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 23 && (1 + prev(dword(0xA65468))) <= 24 && 
              measured((1 + dword(0xA65468)) >= 25) && (1 + dword(0xA65468)) <= 26
)

achievement(
    title = "Spice of Duel", points = 5,
    description = "Reach a Player-Level of 30",
    id = 172438, badge = "192881", published = "17/9/2021 13:01:58", modified = "17/9/2021 13:17:28",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 28 && (1 + prev(dword(0xA65468))) <= 29 && 
              measured((1 + dword(0xA65468)) >= 30) && (1 + dword(0xA65468)) <= 31
)

achievement(
    title = "Fairy's Sky", points = 5,
    description = "Reach a Player-Level of 35",
    id = 172439, badge = "192882", published = "17/9/2021 13:01:59", modified = "17/9/2021 13:17:28",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 33 && (1 + prev(dword(0xA65468))) <= 34 && 
              measured((1 + dword(0xA65468)) >= 35) && (1 + dword(0xA65468)) <= 36
)

achievement(
    title = "Dragon Drive", points = 5,
    description = "Reach a Player-Level of 40",
    id = 172440, badge = "192883", published = "17/9/2021 13:01:59", modified = "17/9/2021 13:17:28",
    trigger =SaveProtection() && prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 38 && (1 + prev(dword(0xA65468))) <= 39 && 
              measured((1 + dword(0xA65468)) >= 40) && (1 + dword(0xA65468)) <= 41
)

achievement(
    title = "Fiend Night", points = 5,
    description = "Reach a Player-Level of 45",
    id = 172441, badge = "192884", published = "17/9/2021 13:01:59", modified = "17/9/2021 13:17:29",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 43 && (1 + prev(dword(0xA65468))) <= 44 && 
              measured((1 + dword(0xA65468)) >= 45) && (1 + dword(0xA65468)) <= 46
)

achievement(
    title = "Symbol 50", points = 10,
    description = "Reach a Player-Level of 50",
    id = 172442, badge = "192888", published = "17/9/2021 13:02:00", modified = "17/9/2021 13:59:44",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && (1 + prev(dword(0xA65468))) >= 48 && (1 + prev(dword(0xA65468))) <= 49 && 
              measured((1 + dword(0xA65468)) >= 50) && (1 + dword(0xA65468)) <= 51
)

achievement(
    title = "Ritual Dance", points = 1,
    description = "Play the Game for 20 Hours",
    id = 172445, badge = "192889", published = "17/9/2021 14:06:56", modified = "17/9/2021 14:08:01",
    trigger = prev(bit5(0xA74990)) == 1 && prev(dword(0xA65420)) >= 2159856 && prev(dword(0xA65420)) <= 2159871 && 
             (dword(0xA65420) >= 2159872) && dword(0xA65420) <= 2159887
)

achievement(
    title = "Wave of the Future", points = 5,
    description = "Win 10 duels in a row",
    id = 172443, badge = "192886", published = "17/9/2021 13:20:09", modified = "17/9/2021 13:20:09",
    trigger = SaveProtection() &&prev(bit5(0xA74990)) == 1 && prev(dword(0xA662D0)) == 9 && measured(dword(0xA662D0) == 10)
)

achievement(
    title = "Good Ol' Days", points = 1,
    description = "Lose 10 duels in a row",
    id = 172444, badge = "192887", published = "17/9/2021 13:20:10", modified = "17/9/2021 13:20:10",
    trigger =SaveProtection() && prev(bit5(0xA74990)) == 1 && prev(dword(0xA662D8)) == 9 && measured(dword(0xA662D8) == 10)
)


achievement(
    title = "Midday Constellation (Noon Star)", points = 1,
    description = "Enter the Konami Code at the Card Shop",
    id = 172708, badge = "193150", published = "19/9/2021 11:30:50", modified = "19/9/2021 11:30:50",
    trigger = SaveProtection() && prev(bit5(0xA74990)) == 1 && dword(0xA74788) == 3 && prev(byte(0xA6EB6F)) == 0 && byte(0xA6EB6F) == 2
)

achievement(
    title = "Double Triple Destiny Draw", points = 2,
    description = "Obtain a Golden Egg Sandwich",
    id = 172446, badge = "192890", published = "17/9/2021 14:24:54", modified = "17/9/2021 14:24:54",
    trigger = prev(bit5(0xA74990)) == 1 && bit1(0xA6541C) > prev(bit1(0xA6541C))
)
