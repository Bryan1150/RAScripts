// Burnout 2: Point of Impact
// #ID = 2694


Tracks = {
1:{"trackID":0x02, "points":5, "track":"Airport Terminal 3", "minutes":0, "seconds":39},
2:{"trackID":0x03, "points":5, "track":"Airport Terminal 1 and 2", "minutes":1, "seconds":35},
3:{"trackID":0x06, "points":5, "track":"Interstate Loop", "minutes":1, "seconds":10},
4:{"trackID":0x07, "points":5, "track":"88 Interchange", "minutes":2, "seconds":50},
5:{"trackID":0x00, "points":5, "track":"Palm Bay Heights", "minutes":1, "seconds":25},
6:{"trackID":0x01, "points":5, "track":"Palm Bay Marina", "minutes":1, "seconds":45},
7:{"trackID":0x04, "points":5, "track":"Sunrise Valley Downtown", "minutes":0, "seconds":52},
8:{"trackID":0x05, "points":5, "track":"Sunrise Valley Springs", "minutes":1, "seconds":15},
9:{"trackID":0x08, "points":5, "track":"Big Surf Grove", "minutes":1, "seconds":20},
10:{"trackID":0x09, "points":10, "track":"Big Surf Shores", "minutes":1, "seconds":54},
11:{"trackID":0x0a, "points":10, "track":"Crystal Summit Peak", "minutes":0, "seconds":52},
12:{"trackID":0x0b, "points":10, "track":"Crystal Summit Lake", "minutes":2, "seconds":15},
13:{"trackID":0x0c, "points":10, "track":"Ocean Sprint", "minutes":2, "seconds":20},
14:{"trackID":0x0d, "points":10, "track":"Heartbreak Hills", "minutes":2, "seconds":15},
15:{"trackID":0x0e, "points":10, "track":"Freeway Dash", "minutes":2, "seconds":45},
16:{"trackID":0x11, "points":10, "track":"Airport Terminal 3 (R)", "minutes":0, "seconds":35},
17:{"trackID":0x12, "points":10, "track":"Airport Terminal 1 and 2 (R)", "minutes":1, "seconds":30},
18:{"trackID":0x15, "points":10, "track":"Interstate Loop (R)", "minutes":1, "seconds":14},
19:{"trackID":0x16, "points":10, "track":"88 Interchange (R)", "minutes":2, "seconds":30},
20:{"trackID":0x0f, "points":10, "track":"Palm Bay Heights (R)", "minutes":1, "seconds":20},
21:{"trackID":0x10, "points":10, "track":"Palm Bay Marina (R)", "minutes":1, "seconds":38},
22:{"trackID":0x13, "points":10, "track":"Sunrise Valley Downtown (R)", "minutes":0, "seconds":50},
23:{"trackID":0x14, "points":10, "track":"Sunrise Valley Springs (R)", "minutes":1, "seconds":15},
24:{"trackID":0x17, "points":10, "track":"Big Surf Grove (R)", "minutes":1, "seconds":16},
25:{"trackID":0x18, "points":10, "track":"Big Surf Shores (R)", "minutes":1, "seconds":50},
26:{"trackID":0x19, "points":10, "track":"Crystal Summer Peak (R)", "minutes":0, "seconds":46},
27:{"trackID":0x1a, "points":10, "track":"Crystal Summer Lake (R)", "minutes":2, "seconds":5},
28:{"trackID":0x1b, "points":10, "track":"Ocean Sprint (R)", "minutes":2, "seconds":10},
29:{"trackID":0x1c, "points":10, "track":"Heartbreak Hills (R)", "minutes":2, "seconds":15},
30:{"trackID":0x1d, "points":10, "track":"Freeway Dash (R)", "minutes":2, "seconds":25},
}

Crash = {
    1:{"id":0, "title":"Down Hill Demolition"},
2:{"id":1, "title":"Coastal Crush"},
3:{"id":2, "title":"Out of Control Tower"},
4:{"id":3, "title":"Pacific Peril"},
5:{"id":4, "title":"Rattlesnake Row"},
6:{"id":5, "title":"Dip Disaster"},
7:{"id":6, "title":"Sandstorm Shredder"},
8:{"id":7, "title":"Ridge Riot"},
9:{"id":8, "title":"Freeway Fury"},
10:{"id":9, "title":"Avalanche"},
11:{"id":10, "title":"Late Arrival"},
12:{"id":11, "title":"Glass Canyon"},
13:{"id":12, "title":"Hairpin Havoc"},
14:{"id":13, "title":"Dam Buster"},
15:{"id":14, "title":"Ballistic Beach"},
}

Medals = {
    1:{"address":0x3659ac, "type":"Training", "subtype":"Training"},
2:{"address":0x3659b0, "type":"Training", "subtype":"Training"},
3:{"address":0x3659b4, "type":"Training", "subtype":"Training"},
4:{"address":0x3659b8, "type":"Training", "subtype":"Training"},
5:{"address":0x3659bc, "type":"Training", "subtype":"Training"},
6:{"address":0x3659c0, "type":"Training", "subtype":"Training"},
7:{"address":0x3f0494, "type":"Crash", "subtype":"Crash"},
8:{"address":0x3f0498, "type":"Crash", "subtype":"Crash"},
9:{"address":0x3f049c, "type":"Crash", "subtype":"Crash"},
10:{"address":0x3f04a0, "type":"Crash", "subtype":"Crash"},
11:{"address":0x3f04a4, "type":"Crash", "subtype":"Crash"},
12:{"address":0x3f04a8, "type":"Crash", "subtype":"Crash"},
13:{"address":0x3f04ac, "type":"Crash", "subtype":"Crash"},
14:{"address":0x3f04b0, "type":"Crash", "subtype":"Crash"},
15:{"address":0x3f04b4, "type":"Crash", "subtype":"Crash"},
16:{"address":0x3f04b8, "type":"Crash", "subtype":"Crash"},
17:{"address":0x3f04bc, "type":"Crash", "subtype":"Crash"},
18:{"address":0x3f04c0, "type":"Crash", "subtype":"Crash"},
19:{"address":0x3f04c4, "type":"Crash", "subtype":"Crash"},
20:{"address":0x3f04c8, "type":"Crash", "subtype":"Crash"},
21:{"address":0x3f04cc, "type":"Crash", "subtype":"Crash"},
22:{"address":0x364b58, "type":"Cup", "subtype":"Cup1"},
23:{"address":0x364b68, "type":"Cup", "subtype":"Cup1"},
24:{"address":0x364b78, "type":"Cup", "subtype":"Cup1"},
25:{"address":0x364c88, "type":"Sprint", "subtype":"Sprint"},
26:{"address":0x364db8, "type":"Cup", "subtype":"Cup2"},
27:{"address":0x364dc8, "type":"Cup", "subtype":"Cup2"},
28:{"address":0x364dd8, "type":"Cup", "subtype":"Cup2"},
29:{"address":0x364de8, "type":"Cup", "subtype":"Cup2"},
30:{"address":0x364ee8, "type":"Sprint", "subtype":"Sprint"},
31:{"address":0x365018, "type":"Cup", "subtype":"Cup3"},
32:{"address":0x365028, "type":"Cup", "subtype":"Cup3"},
33:{"address":0x365038, "type":"Cup", "subtype":"Cup3"},
34:{"address":0x365048, "type":"Cup", "subtype":"Cup3"},
35:{"address":0x365058, "type":"Cup", "subtype":"Cup3"},
36:{"address":0x365148, "type":"Sprint", "subtype":"Sprint"},
37:{"address":0x365278, "type":"Cup", "subtype":"Cup4"},
38:{"address":0x365288, "type":"Cup", "subtype":"Cup4"},
39:{"address":0x365298, "type":"Cup", "subtype":"Cup4"},
40:{"address":0x3652a8, "type":"Cup", "subtype":"Cup4"},
41:{"address":0x3652b8, "type":"Cup", "subtype":"Cup4"},
42:{"address":0x3652c8, "type":"Cup", "subtype":"Cup4"},
43:{"address":0x365440, "type":"Cup", "subtype":"Cup5"},
44:{"address":0x365450, "type":"Cup", "subtype":"Cup5"},
45:{"address":0x365460, "type":"Cup", "subtype":"Cup5"},
46:{"address":0x365470, "type":"Cup", "subtype":"Cup5"},
47:{"address":0x365570, "type":"Cup", "subtype":"Cup6"},
48:{"address":0x365580, "type":"Cup", "subtype":"Cup6"},
49:{"address":0x365590, "type":"Cup", "subtype":"Cup6"},
50:{"address":0x3655a0, "type":"Cup", "subtype":"Cup6"},
51:{"address":0x3655b0, "type":"Cup", "subtype":"Cup6"},
52:{"address":0x3656a0, "type":"Cup", "subtype":"Cup7"},
53:{"address":0x3656b0, "type":"Cup", "subtype":"Cup7"},
54:{"address":0x3656c0, "type":"Cup", "subtype":"Cup7"},
55:{"address":0x3656d0, "type":"Cup", "subtype":"Cup7"},
56:{"address":0x3656e0, "type":"Cup", "subtype":"Cup7"},
57:{"address":0x3656f0, "type":"Cup", "subtype":"Cup7"},
58:{"address":0x3657d0, "type":"Cup", "subtype":"Cup8"},
59:{"address":0x3657e0, "type":"Cup", "subtype":"Cup8"},
60:{"address":0x3657f0, "type":"Cup", "subtype":"Cup8"},
61:{"address":0x365800, "type":"Cup", "subtype":"Cup8"},
62:{"address":0x365810, "type":"Cup", "subtype":"Cup8"},
63:{"address":0x365820, "type":"Cup", "subtype":"Cup8"},
64:{"address":0x365830, "type":"Cup", "subtype":"Cup8"},
}

currentMode = dword(0x003f4e44)
timeAttack = 0x08
crash = 0x07

gameState = dword(0x0047e3ec)
inGame = 0x02
currentTrack = dword(0x0047e3f8)

currentLap = dword(0x0039849c)

lastLapTime = float(0x0061e594)

cheatsAreOff = dword(0x00358c80) == 0xffffffff

function timeAttack(){
    logic = cheatsAreOff && currentMode == timeAttack && gameState == inGame  && ((currentLap == prev(currentLap) + 1 && currentLap != 0 && (currentLap) != 0xffffffff) || FinishedRace == 1 && prev(FinishedRace) == 0)
    return logic
}

function crashMode(){
    logic = cheatsAreOff && currentMode == crash && gameState == inGame
    return logic
}

function CrashMedal(address){
    return bit0(address)*bit1(address)
}

function TrainingMedal(address){
    return bit1(address) - bit7(address)
}

function PositionMedal(address){
    return 1 - bit1(address) - bit2(address)
}

function AddMedal(address, type){
    sum = 0
    if(type == "Crash"){
        sum = CrashMedal(address)
    }
    
    if(type == "Training"){
        sum = TrainingMedal(address)
    }
    
    if(type == "Cup" || type == "Sprint"){
        sum = PositionMedal(address)
    }
    return sum   
}

function AllMedals(){
    sum = 0
    count = 0
    for medal in Medals{
        sum = sum + AddMedal(Medals[medal]["address"], Medals[medal]["type"])
        count = count + 1
    }
    return measured(sum == count) 
}

achievement(
    "All Medals",
    "For RP",
    0,
    AllMedals()
)
FinishedRace = dword(0x00367528)

for track in Tracks{
    leaderboard(
        title = "Time Attack - " + Tracks[track]["track"],
        
        description = "Best Lap",
        start = timeAttack() && currentTrack == Tracks[track]["trackID"],
        cancel = always_false(), 
        submit = always_true(), 
        value = lastLapTime * 100, 
        format="MILLISECS", 
        lower_is_better=true
    )
    
    achievement(
        "Time Attack - " + Tracks[track]["track"],
        "Get a time of less than " + Tracks[track]["minutes"] + ":"  + Tracks[track]["seconds"] + " in "  + Tracks[track]["track"] + " on Time Attack",
        5,
        cheatsAreOff && currentTrack == Tracks[track]["trackID"] && currentMode == timeAttack && 
        gameState == inGame 
        && trigger_when((currentLap == prev(currentLap) + 1 && (currentLap != 0) && prev(currentLap) != 0xffffffff ) || FinishedRace == 1 && prev(FinishedRace) == 0) && trigger_when(lastLapTime != 0)
        && trigger_when(lastLapTime * 100 < (Tracks[track]["seconds"] + Tracks[track]["minutes"]*60)*100)
    )
    
    
    
}
crashDamage = float(0x0039906c)
crashMultiplier = dword(0x00399068)
currentZone = dword(0x003f4e8c)
for track in Crash{
    leaderboard(
        title = "Crash - " + Crash[track]["title"],
        
        description = "Most damage",
        start = crashMode() && currentZone == Crash[track]["id"] && (crashDamage!= prev(crashDamage) || crashMultiplier != prev(crashMultiplier)),
        cancel = always_false(), 
        submit = always_true(), 
        value = crashDamage * crashMultiplier, 
        format="VALUE", 
        lower_is_better=false
    )
}

Progression = {
    1:{"address":0x003659c4, "points":3, "title":"Road to Expertise", "description":"Complete all the Offensive Driving 101 lessons"},
2:{"address":0x00364be4, "points":5, "title":"Gateway Glory", "description":"Win the Pacific Gate Grand Prix"},
3:{"address":0x00364d14, "points":5, "title":"Chasing the Sun", "description":"Win The Run to The Sun Sprint"},
4:{"address":0x00364e44, "points":5, "title":"Roads Less Winded", "description":"Win the Winding Road Grand Prix"},
5:{"address":0x00364f74, "points":5, "title":"Miracle Mile Mastery", "description":"Win The Miracle Mile Sprint"},
6:{"address":0x003650a4, "points":5, "title":"Coasting on Edge", "description":"Win the Roller Coaster Grand Prix"},
7:{"address":0x003651d4, "points":5, "title":"Crystal Velocity", "description":"Win The Crystal Freeway Sprint"},
8:{"address":0x00365304, "points":5, "title":"Storming the Streets", "description":"Win the Street Storm Grand Prix"},
9:{"address":0x003654cc, "points":5, "title":"Speed Streak Surge", "description":"Win the Speed Streak Grand Prix"},
10:{"address":0x003655fc, "points":5, "title":"Split-Second Triumph", "description":"Win the Split Second Grand Prix"},
11:{"address":0x0036572c, "points":5, "title":"Impactful Journey", "description":"Win the Point Of Impact Grand Prix"},
12:{"address":0x0036585c, "points":10, "title":"Heartbeat of Victory", "description":"Win the Heart Attack Grand Prix"},
}

MedalsCheevos = {
    1:{"type":"Training", "points":5, "title":"Offensive Driving - Golden Racer", "description":"Earn a gold medal in all the Offensive Driving 101 lessons"},
2:{"type":"Cup1", "points":10, "title":"Pacific Gate - Golden Racer", "description":"Earn a gold medal in all of the Pacific Gate Grand Prix tracks"},
3:{"type":"Cup2", "points":10, "title":"Winding Road - Golden Racer", "description":"Earn a gold medal in all of the Winding Road Grand Prix tracks"},
4:{"type":"Cup3", "points":10, "title":"Roller Coaster - Golden Racer", "description":"Earn a gold medal in all of the Roller Coaster Grand Prix tracks"},
5:{"type":"Cup4", "points":10, "title":"Street Storm - Golden Racer", "description":"Earn a gold medal in all of the Street Storm Grand Prix tracks"},
6:{"type":"Cup5", "points":10, "title":"Speed Streak - Golden Racer", "description":"Earn a gold medal in all of the Speed Streak Grand Prix tracks"},
7:{"type":"Cup6", "points":10, "title":"Split Second - Golden Racer", "description":"Earn a gold medal in all of the Split Second Grand Prix tracks"},
8:{"type":"Cup7", "points":10, "title":"Point Of Impact - Golden Racer", "description":"Earn a gold medal in all of the Point Of Impact Grand Prix tracks"},
9:{"type":"Cup8", "points":25, "title":"Heart Attack - Golden Racer", "description":"Earn a gold medal in all of the Heart Attack Grand Prix tracks"},
10:{"type":"Sprint", "points":10, "title":"Sprints - Golden Racer", "description":"Earn a gold medal in all the sprints"},
}

function progression(flag){
    logic = cheatsAreOff && gameState == inGame && dword(flag) == 1 && prev(dword(flag)) == 0
    return logic
}

for cheevo in Progression{
    achievement(
        Progression[cheevo]["title"],
        Progression[cheevo]["description"],
        Progression[cheevo]["points"],
        progression(Progression[cheevo]["address"])
    )
}

function sumFlags(array){
    sum = 0 
    for flag in array{
        sum = sum + dword(flag)
    }
    return cheatsAreOff && gameState == inGame && measured(sum == length(array)) && prev(sum) == length(array)-1
}




FaceOffs =
[0x00364c7c, 0x00364edc, 0x0036513c, 0x0036539c]

Pursuits = 
[0x00364dac, 0x0036500c, 0x0036526c, 0x00365564, 0x00365694, 0x003657c4]

achievement(
    "Face Off Champion",
    "Complete all the Face Offs",
    10,
    sumFlags(FaceOffs)
)

achievement(
    "Pursuit of Victory",
    "Complete all the Pursuits",
    10,
    sumFlags(Pursuits)
)

function MedalsLogic(type){
    sum = 0
    count = 0
    for medal in Medals{
        if(Medals[medal]["subtype"] == type){
            sum = sum + AddMedal(Medals[medal]["address"], Medals[medal]["type"])
            count = count + 1
        }
    }
    return cheatsAreOff && gameState == inGame && measured(sum == count) && prev(sum) == count - 1
}

function CrashMedals(quantity){
    sum = 0
    count = 0
    for medal in Medals{
        if(Medals[medal]["subtype"] == "Crash"){
            sum = sum + AddMedal(Medals[medal]["address"], Medals[medal]["type"])
            count = count + 1
        }
    }
    return cheatsAreOff && gameState == inGame && measured(sum == quantity) && prev(sum) == quantity - 1
}

CrashMedals = {
    1:{"quantity":3, "points":5, "title":"Crash Collector I", "description":"Earn 3 crash event gold medals"},
2:{"quantity":6, "points":5, "title":"Crash Collector II", "description":"Earn 6 crash event gold medals"},
3:{"quantity":9, "points":5, "title":"Crash Collector III", "description":"Earn 9 crash event gold medals"},
4:{"quantity":12, "points":10, "title":"Crash Collector IV", "description":"Earn 12 crash event gold medals"},
5:{"quantity":15, "points":10, "title":"Crash Collector V", "description":"Earn 15 crash event gold medals"},
}

for cheevo in MedalsCheevos{
    achievement(
        MedalsCheevos[cheevo]["title"],
        MedalsCheevos[cheevo]["description"],
        MedalsCheevos[cheevo]["points"],
        MedalsLogic(MedalsCheevos[cheevo]["type"])
    )
}

for cheevo in CrashMedals{
    achievement(
        CrashMedals[cheevo]["title"],
        CrashMedals[cheevo]["description"],
        CrashMedals[cheevo]["points"],
        CrashMedals(CrashMedals[cheevo]["quantity"])
    )
}