// ~Hack~ Pok√©mon Emerald Rogue V2 [Subset - Bonus]
// #ID = 32921


challengeQuests = {
1:{"quest":"Kanto Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x814c},
2:{"quest":"Johto Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8154},
3:{"quest":"Hoenn Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x815c},
4:{"quest":"Sinnoh Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8164},
5:{"quest":"Unova Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x816c},
6:{"quest":"Kalos Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8174},
7:{"quest":"Alola Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x817c},
8:{"quest":"Galar Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8184},
9:{"quest":"Paldea Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x818c},
10:{"quest":"Orre Style", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8194},
11:{"quest":"Normal Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81a4},
12:{"quest":"Fighting Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81ac},
13:{"quest":"Flying Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81b4},
14:{"quest":"Poison Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81bc},
15:{"quest":"Ground Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81c4},
16:{"quest":"Rock Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81cc},
17:{"quest":"Bug Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81d4},
18:{"quest":"Ghost Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81dc},
19:{"quest":"Steel Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81e4},
20:{"quest":"Fire Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81ec},
21:{"quest":"Water Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81f4},
22:{"quest":"Grass Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x81fc},
23:{"quest":"Electric Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8204},
24:{"quest":"Psychic Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x820c},
25:{"quest":"Ice Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8214},
26:{"quest":"Dragon Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x821c},
27:{"quest":"Dark Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8224},
28:{"quest":"Fairy Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x822c},
29:{"quest":"Mega Evolution", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8234},
30:{"quest":"Z-Moves", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x823c},
31:{"quest":"Dynamax", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8244},
32:{"quest":"Terastallization", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x824c},
33:{"quest":"Gimmick Overflow", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8254},
34:{"quest":"True Tactics", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x825c},
35:{"quest":"Chaos Novice", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8264},
36:{"quest":"Chaos Master", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x826c},
37:{"quest":"Roguelocke", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8274},
38:{"quest":"Can't Pick!?", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x827c},
39:{"quest":"Diversity", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8284},
40:{"quest":"Apotheosis", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x828c},
41:{"quest":"Aesthetics", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x8294},
42:{"quest":"I am Speed", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x829c},
43:{"quest":"Cursed Body", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82a4},
44:{"quest":"Limited Capture", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82ac},
45:{"quest":"BST Crown", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82b4},
46:{"quest":"Pro-Building", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82bc},
47:{"quest":"Insane Mode", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82c4},
48:{"quest":"Iron Mono", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82cc},
49:{"quest":"Iron Kaizo", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82d4},
50:{"quest":"Rocket Triumph", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82dc},
51:{"quest":"Aqua Triumph", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82e4},
52:{"quest":"Magma Triumph", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82ec},
53:{"quest":"Galactic Triumph", "points":5, "pointsHard":10, "pointsBrutal":10, "offset":0x82f4},
}

dataPointer = tbyte(0x003640)
questPointer = tbyte(0x003648)
pokedexPointer = tbyte(0x00363c)

timeFrames = byte(dataPointer + 0x008012)
deltaTimeFrames = prev(byte(prev(dataPointer) + 0x008012))

function saveProtection(){
    logic = always_true()
    startingIndex = 0x8004
    for index in range(0, 10) { 
        offset = startingIndex + index * 8
        logic = logic &&
        tally(20,
        bit0(questPointer+offset) == prev(bit0(questPointer + offset))
        && prev(bit0(questPointer + offset)) == 1
        )
    }
    return logic && 
    questPointer == prev(questPointer) &&
    dataPointer == prev(dataPointer) 
}


function questCompleted(offset){
    questCompletion = bit5(questPointer + offset)
    questUnlocked = bit0(questPointer + offset)
    return
    never(questPointer != prev(questPointer)) &&
    never(dataPointer != prev(dataPointer)) &&
    never(pokedexPointer != prev(pokedexPointer)) &&
    tally(20, questPointer == prev(questPointer)) &&
    tally(20, dataPointer == prev(dataPointer)) &&
    tally(20, pokedexPointer == prev(pokedexPointer )) &&
    
    questCompletion == 1 &&
    
    prev(questCompletion) == 0 &&
    questUnlocked == 1 && questUnlocked == prev(questUnlocked) &&
    saveProtection()
}

function challengeQuestHard(offset){
    questUnlocked = bit0(questPointer + offset)
    difficultyCompletedBit1 = bit0(questPointer+(offset+2))
    difficultyCompletedBit2 = bit1(questPointer+(offset+2))
    return
      never(questPointer != prev(questPointer)) &&
    never(dataPointer != prev(dataPointer)) &&
    never(pokedexPointer != prev(pokedexPointer)) &&
    tally(20, questPointer == prev(questPointer)) &&
    tally(20, dataPointer == prev(dataPointer)) &&
    tally(20, pokedexPointer == prev(pokedexPointer )) &&
    difficultyCompletedBit2 == 1 &&
    prev(difficultyCompletedBit2) == 0 &&
    questUnlocked == 1 && questUnlocked == prev(questUnlocked) &&
    saveProtection()
}

function challengeQuestBrutal(offset){
    questUnlocked = bit0(questPointer + offset)
    difficultyCompletedBit1 = bit0(questPointer+(offset+2))
    difficultyCompletedBit2 = bit1(questPointer+(offset+2))
    return
     never(questPointer != prev(questPointer)) &&
    never(dataPointer != prev(dataPointer)) &&
    never(pokedexPointer != prev(pokedexPointer)) &&
    tally(20, questPointer == prev(questPointer)) &&
    tally(20, dataPointer == prev(dataPointer)) &&
    tally(20, pokedexPointer == prev(pokedexPointer )) &&
    difficultyCompletedBit2+difficultyCompletedBit1 == 2 &&
    prev(difficultyCompletedBit2+difficultyCompletedBit1 ) < 2 &&
    questUnlocked == 1 && questUnlocked == prev(questUnlocked) &&
    saveProtection()
}

sumMainQuests = 0
total = 0

sumMainQuests = 0
total = 0
for quest in challengeQuests{
    
        achievement(
            title = challengeQuests[quest]["quest"] + " - Brutal",
            description = "Complete the \"" + challengeQuests[quest]["quest"] + "\" challenge quest in Brutal",
            points = 25,
            trigger = challengeQuestBrutal(challengeQuests[quest]["offset"])
    )
    
    sumMainQuests = sumMainQuests + bit5(questPointer + challengeQuests[quest]["offset"])
    total = total + 1
}

sumMainQuests = 0
total = 0

function CatchedPokemon(startOffset, start, finish){
    logic = always_true()
    StartTemp = startOffset
    PokemonAddress = 0
    Count = 0 
    AddBitFlags = 1
    BitFlags = []
    for number in range(1, 1518){            
        if(number >= start && number < finish){
            if(finish - number > 8 && Count == 0){
                array_push(BitFlags, bitcount(pokedexPointer + StartTemp))
                AddBitFlags = 0
            }else if(AddBitFlags == 1){
                      
                if((Count) == 0){
                    array_push(BitFlags, bit0(pokedexPointer + StartTemp))
                }
                if((Count) == 1){
                    array_push(BitFlags, bit1(pokedexPointer+ StartTemp))
                }
                if((Count) == 2){
                   array_push(BitFlags, bit2(pokedexPointer + StartTemp))
                }
                if((Count) == 3){
                  array_push(BitFlags, bit3(pokedexPointer + StartTemp))
                }
                if((Count) == 4){
                   array_push(BitFlags, bit4(pokedexPointer+ StartTemp))
                }
                if((Count) == 5){
                   array_push(BitFlags, bit5(pokedexPointer + StartTemp))
                }
                if((Count) == 6){
                   array_push(BitFlags, bit6(pokedexPointer + StartTemp))
                }
                if((Count) == 7){
                   array_push(BitFlags, bit7(pokedexPointer + StartTemp))
                }
                
            }
         }
         Count = Count + 1
         if(Count == 8){
            Count = 0
            StartTemp = StartTemp + 0x01
            AddBitFlags = 1
         }
    }
    return 
    measured(sum_of(BitFlags, f => f) == finish-start)
    && tally(20, sum_of(BitFlags, f => prev(f)) == finish-start-1)
   
     
    
}

masteryOffsetStart = 0x8c84
masteryOffsetend = 0x8ccb
pecharunt = bit0(questPointer + masteryOffsetend + 1)

function sumMasteries(total){
    sum = 0
    count = 0
    for offset in range(masteryOffsetStart, masteryOffsetend){
        sum = sum + bitcount(questPointer + offset)
        count = count + 8
    }
    sum = sum + pecharunt
    count = count + 1
    
    return measured(sum >= total) && prev(sum < total) && prev(sum > total - 10)
}

masteries={
1:{"quest":"Mastery I", "points":50, "total":200, "pointsBrutal":25, "offset":0x814c},
2:{"quest":"Mastery II", "points":50, "total":300, "pointsBrutal":25, "offset":0x8154},
3:{"quest":"Mastery III", "points":50, "total":400, "pointsBrutal":25, "offset":0x815c},
4:{"quest":"Mastery IV", "points":50, "total":500, "pointsBrutal":25, "offset":0x8164},
5:{"quest":"Mastery V", "points":50, "total":577, "pointsBrutal":25, "offset":0x816c},
}

for cheevo in masteries{
achievement(
    masteries[cheevo]["quest"],
    "Obtain " + masteries[cheevo]["total"] + " Pokemon masteries",
    masteries[cheevo]["points"],
    saveProtection() && questPointer == prev(questPointer) &&
    dataPointer == prev(dataPointer) &&
    never(pokedexPointer != prev(pokedexPointer)) &&
    sumMasteries(masteries[cheevo]["total"])
)
}

Pokedex = {
    1: {"title": "Shiny Kanto Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 1", "start": 2, "end": 153},
    2: {"title": "Shiny Johto Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 2", "start": 153, "end": 253},
    3: {"title": "Shiny Hoenn Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 3", "start": 253, "end": 388},
    4: {"title": "Shiny Sinnoh Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 4", "start": 388, "end": 495},
    5: {"title": "Shiny Unova Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 5", "start": 495, "end": 651},
    6: {"title": "Shiny Kalos Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 6", "start": 651, "end": 723},
    7: {"title": "Shiny Alola Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 7", "start": 723, "end": 811},
    8: {"title": "Shiny Galar Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 8", "start": 811, "end": 907},
    9: {"title": "Shiny Paldea Completion", "points": 25, "description": "Catch every shiny Pokemon from Gen 9", "start": 1290, "end": 1436},
    //10: {"title": "All Poke", "points": 0, "description": "Catch every Pokemon from Gen 9", "start": 2, "end": 1436}
}
difference = 0xBF


function CatchedPokemon(startOffset, start, finish){
    logic = always_true()
    StartTemp = startOffset
    PokemonAddress = 0
    Count = 0 
    AddBitFlags = 1
    BitFlags = []
    for number in range(1, 1518){            
        if(number >= start && number < finish){
            //if(finish - number > 8 && Count == 0){
                //array_push(BitFlags, bitcount(pokedexPointer + StartTemp)/bitcount(pokedexPointer + StartTemp + difference))
                //AddBitFlags = 0
            //}else 
            //if(AddBitFlags == 1){
                      
                if((Count) == 0){
                    array_push(BitFlags, bit0(pokedexPointer + StartTemp)/bit0(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 1){
                    array_push(BitFlags, bit1(pokedexPointer + StartTemp)/bit1(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 2){
                   array_push(BitFlags, bit2(pokedexPointer + StartTemp)/bit2(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 3){
                  array_push(BitFlags, bit3(pokedexPointer + StartTemp)/bit3(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 4){
                   array_push(BitFlags, bit4(pokedexPointer + StartTemp)/bit4(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 5){
                   array_push(BitFlags, bit5(pokedexPointer + StartTemp)/bit5(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 6){
                   array_push(BitFlags, bit6(pokedexPointer + StartTemp)/bit6(pokedexPointer + StartTemp + difference))
                }
                if((Count) == 7){
                   array_push(BitFlags, bit7(pokedexPointer + StartTemp)/bit7(pokedexPointer + StartTemp + difference))
                }
                
            //}
         }
         Count = Count + 1
         
         if(Count == 8){
            Count = 0
            StartTemp = StartTemp + 0x01
            AddBitFlags = 1
         }
    }
    return 
    measured(sum_of(BitFlags, f => f) == finish-start)
    && tally(20, sum_of(BitFlags, f => prev(f)) == finish-start-1)
   
     
    
}


caughtOffset = 0xb0b4 
for pokedex in Pokedex{
    achievement(
        title = Pokedex[pokedex]["title"] ,
        description = Pokedex[pokedex]["description"],
        points = 100,
        trigger = saveProtection() && questPointer == prev(questPointer) &&
        CatchedPokemon(caughtOffset, Pokedex[pokedex]["start"], Pokedex[pokedex]["end"]) &&
        dataPointer == prev(dataPointer) &&
        never(pokedexPointer != prev(pokedexPointer))
    )
}

